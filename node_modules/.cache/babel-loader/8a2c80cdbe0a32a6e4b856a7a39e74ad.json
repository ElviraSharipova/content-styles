{"ast":null,"code":"var _jsxFileName = \"/home/dekor/eqvium/react_material_test/admin-full/src/pages/modules/components/PlotPopper.js\";\nimport React from \"react\";\nimport { Popper, Divider, RadioGroup, Box, Radio, Grid, Switch as SwitchMode } from \"@material-ui/core\"; //import ReactApexChart from \"react-apexcharts\";\n\nimport ApexLineChart from \"./ApexLineChart\";\nimport useStyles from \"../styles\"; // components\n\nimport Widget from \"../../../components/Widget\";\nimport { Typography, Button } from \"../../../components/Wrappers\";\nimport Themes from \"../../../themes\";\nimport { useThemeDispatch } from \"../../../context/ThemeContext\";\n\nfunction ColorChangeThemePopper({\n  open,\n  id,\n  anchorEl\n}) {\n  const classes = useStyles();\n  var themeDispatch = useThemeDispatch();\n\n  const handleChangeTheme = e => {\n    localStorage.setItem(\"theme\", e.target.value);\n    themeDispatch(Themes[e.target.value]);\n  };\n\n  const toggleDarkTheme = () => {\n    if (localStorage.getItem(\"theme\") === \"dark\") {\n      localStorage.setItem(\"theme\", \"default\");\n      themeDispatch(Themes.default);\n    } else {\n      localStorage.setItem(\"theme\", \"dark\");\n      themeDispatch(Themes.dark);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Popper, {\n    id: id,\n    open: open,\n    anchorEl: anchorEl,\n    placement: \"left-start\",\n    style: {\n      zIndex: 100\n    },\n    elevation: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Widget, {\n    disableWidgetMenu: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(Widget, {\n    title: \"Dynamic Updating Chart\",\n    noBodyPadding: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ApexLineChart, {\n    data: data1,\n    type: \"line\",\n    height: \"350\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  })))))));\n}\n\nexport default React.memo(ColorChangeThemePopper, (prevProps, nextProps) => {\n  return prevProps.anchorEl === nextProps.anchorEl;\n});","map":{"version":3,"sources":["/home/dekor/eqvium/react_material_test/admin-full/src/pages/modules/components/PlotPopper.js"],"names":["React","Popper","Divider","RadioGroup","Box","Radio","Grid","Switch","SwitchMode","ApexLineChart","useStyles","Widget","Typography","Button","Themes","useThemeDispatch","ColorChangeThemePopper","open","id","anchorEl","classes","themeDispatch","handleChangeTheme","e","localStorage","setItem","target","value","toggleDarkTheme","getItem","default","dark","zIndex","data1","memo","prevProps","nextProps"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport {\n  Popper,\n  Divider,\n  RadioGroup,\n  Box,\n  Radio,\n  Grid,\n  Switch as SwitchMode\n} from \"@material-ui/core\";\n\n//import ReactApexChart from \"react-apexcharts\";\nimport ApexLineChart from \"./ApexLineChart\";\n\nimport useStyles from \"../styles\";\n\n// components\nimport Widget from \"../../../components/Widget\";\nimport { Typography, Button } from \"../../../components/Wrappers\";\nimport Themes from \"../../../themes\";\nimport { useThemeDispatch } from \"../../../context/ThemeContext\";\n\nfunction ColorChangeThemePopper({ open, id, anchorEl }) {\n  const classes = useStyles();\n  var themeDispatch = useThemeDispatch();\n  const handleChangeTheme = e => {\n    localStorage.setItem(\"theme\", e.target.value);\n    themeDispatch(Themes[e.target.value]);\n  };\n\n  const toggleDarkTheme = () => {\n    if (localStorage.getItem(\"theme\") === \"dark\") {\n      localStorage.setItem(\"theme\", \"default\");\n      themeDispatch(Themes.default);\n    } else {\n      localStorage.setItem(\"theme\", \"dark\");\n      themeDispatch(Themes.dark);\n    }\n  };\n\n  return (\n    <Popper\n      id={id}\n      open={open}\n      anchorEl={anchorEl}\n      placement={\"left-start\"}\n      style={{ zIndex: 100 }}\n      elevation={4}\n    >\n      <Widget disableWidgetMenu>\n        <Box\n          display=\"flex\"\n          flexDirection=\"column\"\n          justifyContent=\"space-between\"\n          alignItems=\"center\"\n        >\n          <>\n           <Grid item md={6} xs={12}>\n          <Widget title={\"Dynamic Updating Chart\"} noBodyPadding>\n          <ApexLineChart\n              data={data1}\n              type=\"line\"\n              height=\"350\"\n            />\n          </Widget>\n        </Grid>\n          </>\n        </Box>\n      </Widget>\n    </Popper>\n  );\n}\n\nexport default React.memo(ColorChangeThemePopper, (prevProps, nextProps) => {\n  return prevProps.anchorEl === nextProps.anchorEl;\n});\n"]},"metadata":{},"sourceType":"module"}