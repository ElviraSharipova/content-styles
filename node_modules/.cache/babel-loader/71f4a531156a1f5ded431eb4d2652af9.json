{"ast":null,"code":"var _jsxFileName = \"/home/dekor/eqvium/react_material_test/admin-full/src/pages/user/UserList.js\";\nimport React from 'react';\nimport { Grid, Box, InputAdornment, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, TextField as Input } from '@material-ui/core';\nimport moment from 'moment';\nimport Widget from '../../components/Widget';\nimport { Button } from '../../components/Wrappers';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/DeleteOutlined';\nimport Notification from '../../components/Notification/Notification';\nimport { toast } from 'react-toastify';\nimport { Typography, Chip, Avatar, Link } from '../../components/Wrappers';\nimport { useManagementDispatch, useManagementState } from '../../context/ManagementContext';\nimport useStyles from './styles'; // Icons\n\nimport { Add as AddIcon, GetApp as DownloadIcon, Search as SearchIcon, CreateOutlined as CreateIcon, HelpOutline as HelpIcon } from '@material-ui/icons';\nimport { actions } from '../../context/ManagementContext';\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc' ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [{\n  id: 'id',\n  numeric: true,\n  disablePadding: true,\n  label: 'ID'\n}, {\n  id: 'name',\n  numeric: true,\n  disablePadding: false,\n  label: 'NAME'\n}, {\n  id: 'role',\n  numeric: true,\n  disablePadding: false,\n  label: 'ROLE'\n}, {\n  id: 'companyName',\n  numeric: true,\n  disablePadding: false,\n  label: 'COMPANY NAME'\n}, {\n  id: 'email',\n  numeric: true,\n  disablePadding: false,\n  label: 'EMAIL'\n}, {\n  id: 'status',\n  numeric: true,\n  disablePadding: false,\n  label: 'STATUS'\n}, {\n  id: 'created',\n  numeric: false,\n  disablePadding: false,\n  label: 'CREATED AT'\n}, {\n  id: 'actions',\n  numeric: true,\n  disablePadding: false,\n  label: 'ACTIONS'\n}];\n\nfunction EnhancedTableHead(props) {\n  const {\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort\n  } = props;\n\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    padding: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    indeterminate: numSelected > 0 && numSelected < rowCount,\n    checked: rowCount > 0 && numSelected === rowCount,\n    onChange: onSelectAllClick,\n    inputProps: {\n      'aria-label': 'select all desserts'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  })), headCells.map(headCell => /*#__PURE__*/React.createElement(TableCell, {\n    key: headCell.id,\n    align: headCell.numeric ? 'left' : 'right',\n    padding: headCell.disablePadding ? 'none' : 'default',\n    sortDirection: orderBy === headCell.id ? order : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TableSortLabel, {\n    active: orderBy === headCell.id,\n    direction: orderBy === headCell.id ? order : 'asc',\n    onClick: createSortHandler(headCell.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    noWrap: true,\n    weight: 'medium',\n    variant: 'body2',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 29\n    }\n  }, headCell.label))))));\n}\n\nconst UserList = () => {\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('calories');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [usersRows, setUsersRows] = React.useState([]);\n  var managementDispatch = useManagementDispatch();\n  var managementValue = useManagementState();\n\n  const openModal = cell => {\n    actions.doOpenConfirm(cell)(managementDispatch);\n  };\n\n  const closeModal = () => {\n    actions.doCloseConfirm()(managementDispatch);\n  };\n\n  const handleDelete = () => {\n    actions.doDelete(managementValue.idToDelete)(managementDispatch);\n    sendNotification('User deleted');\n  };\n\n  React.useEffect(() => {\n    sendNotification('This page is only available in React Material Admin Full with Node.js integration!');\n\n    async function fetchAPI() {\n      try {\n        await actions.doFetch({}, false)(managementDispatch);\n        setUsersRows(managementValue.rows);\n      } catch (e) {\n        console.log(e);\n      }\n    }\n\n    fetchAPI();\n  }, []);\n  const classes = useStyles();\n\n  function sendNotification(text) {\n    const componentProps = {\n      type: \"feedback\",\n      message: text,\n      variant: \"contained\",\n      color: \"success\"\n    };\n    const options = {\n      type: \"info\",\n      position: toast.POSITION.TOP_RIGHT,\n      progressClassName: classes.progress,\n      className: classes.notification,\n      timeOut: 1000\n    };\n    return toast( /*#__PURE__*/React.createElement(Notification, Object.assign({}, componentProps, {\n      className: classes.notificationComponent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }\n    })), options);\n  }\n\n  React.useEffect(() => {\n    setUsersRows(managementValue.rows);\n  }, [managementValue.rows]);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = managementValue.rows.map(n => n.id);\n      setSelected(newSelecteds);\n      return;\n    }\n\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const isSelected = name => selected.indexOf(name) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, usersRows.length - page * rowsPerPage);\n\n  const handleSearch = e => {\n    const newArr = usersRows.filter(c => {\n      return c.name.toLowerCase().includes(e.currentTarget.value.toLowerCase());\n    });\n    setUsersRows(newArr);\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Dialog, {\n    open: managementValue.modalOpen,\n    onClose: closeModal,\n    scroll: \"body\",\n    \"aria-labelledby\": \"scroll-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"alert-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 13\n    }\n  }, \"Are you sure that you want to delete user?\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DialogContentText, {\n    id: \"alert-dialog-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 15\n    }\n  }, \"User will be deleted.\")), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: closeModal,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 15\n    }\n  }, \"Disagree\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleDelete,\n    color: \"primary\",\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 15\n    }\n  }, \"Agree\"))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Widget, {\n    inheritHeight: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    justifyContent: 'space-between',\n    display: 'flex',\n    alignItems: 'flex-start',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    href: \"#/app/user/add\",\n    underline: \"none\",\n    color: \"#fff\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: 'contained',\n    color: 'success',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    mr: 1,\n    display: 'flex',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 41\n    }\n  })), \"Add\"))), /*#__PURE__*/React.createElement(Box, {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'flex-end',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: 'outlined',\n    color: 'secondary',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: 'flex',\n    mr: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(DownloadIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 37\n    }\n  })), \"Download\"), /*#__PURE__*/React.createElement(Input, {\n    id: \"search-field\",\n    label: \"Search\",\n    margin: \"dense\",\n    variant: \"outlined\",\n    onChange: e => handleSearch(e),\n    InputProps: {\n      startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(SearchIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 45\n        }\n      }))\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 29\n    }\n  }))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Widget, {\n    inheritHeight: true,\n    noBodyPadding: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    \"aria-labelledby\": \"tableTitle\",\n    size: dense ? 'small' : 'medium',\n    \"aria-label\": \"enhanced table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(EnhancedTableHead, {\n    numSelected: selected.length,\n    order: order,\n    orderBy: orderBy,\n    onSelectAllClick: handleSelectAllClick,\n    onRequestSort: handleRequestSort,\n    rowCount: usersRows.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 29\n    }\n  }, stableSort(usersRows, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\n    const isItemSelected = isSelected(row.id);\n    const labelId = `enhanced-table-checkbox-${index}`;\n    return /*#__PURE__*/React.createElement(TableRow, {\n      hover: true,\n      onClick: event => handleClick(event, row.id),\n      role: \"checkbox\",\n      \"aria-checked\": isItemSelected,\n      tabIndex: -1,\n      key: row.id,\n      selected: isItemSelected,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      padding: \"checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      checked: isItemSelected,\n      inputProps: {\n        'aria-labelledby': labelId\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 53\n      }\n    })), /*#__PURE__*/React.createElement(TableCell, {\n      component: \"th\",\n      id: labelId,\n      scope: \"row\",\n      padding: \"none\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: 'body2',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 53\n      }\n    }, index + 1)), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      display: 'flex',\n      alignItems: 'center',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 53\n      }\n    }, !row.avatars.length ? /*#__PURE__*/React.createElement(Avatar, {\n      alt: row.name,\n      style: {\n        marginRight: 15,\n        backgroundColor: '#536DFE'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 61\n      }\n    }, row.email.charAt(0).toUpperCase()) : /*#__PURE__*/React.createElement(Avatar, {\n      alt: row.name,\n      src: row.avatars && row.avatars[0].publicUrl && row.avatars[row.avatars.length - 1].publicUrl,\n      style: {\n        marginRight: 15\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 59\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      variant: 'body2',\n      noWrap: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 57\n      }\n    }, row.name))), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: 'body2',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 53\n      }\n    }, row.role)), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: 'body2',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 53\n      }\n    }, \"Flatlogic\")), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: 'body2',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 53\n      }\n    }, row.email)), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Chip, {\n      color: row.statusColor,\n      label: row.emailVerified && row.password ? 'active' : 'inactive',\n      style: {\n        color: '#fff',\n        height: 16,\n        backgroundColor: row.emailVerified && row.password ? '#3CD4A0' : '#FF5C93',\n        fontSize: 11,\n        fontWeight: 'bold'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 53\n      }\n    })), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: 'body2',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 53\n      }\n    }, moment(row.createdAt).format('YYYY-DD-MM'))), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      display: 'flex',\n      style: {\n        marginLeft: -12\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      color: 'primary',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      href: `#app/user/${row.id}/edit`,\n      color: \"#fff\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 59\n      }\n    }, /*#__PURE__*/React.createElement(CreateIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 61\n      }\n    }))), /*#__PURE__*/React.createElement(IconButton, {\n      color: 'primary',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      href: `#app/user/${row.id}`,\n      color: \"#fff\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(HelpIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 63\n      }\n    }))), /*#__PURE__*/React.createElement(IconButton, {\n      onClick: () => openModal(row.id),\n      color: 'primary',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(DeleteIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 61\n      }\n    })))));\n  }), emptyRows > 0 && /*#__PURE__*/React.createElement(TableRow, {\n    style: {\n      height: (dense ? 33 : 53) * emptyRows\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 41\n    }\n  }))))), /*#__PURE__*/React.createElement(TablePagination, {\n    rowsPerPageOptions: [5, 10, 25],\n    component: \"div\",\n    count: usersRows.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default UserList;","map":{"version":3,"sources":["/home/dekor/eqvium/react_material_test/admin-full/src/pages/user/UserList.js"],"names":["React","Grid","Box","InputAdornment","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","TextField","Input","moment","Widget","Button","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","TableSortLabel","Checkbox","IconButton","DeleteIcon","Notification","toast","Typography","Chip","Avatar","Link","useManagementDispatch","useManagementState","useStyles","Add","AddIcon","GetApp","DownloadIcon","Search","SearchIcon","CreateOutlined","CreateIcon","HelpOutline","HelpIcon","actions","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","headCells","id","numeric","disablePadding","label","EnhancedTableHead","props","onSelectAllClick","numSelected","rowCount","onRequestSort","createSortHandler","property","event","headCell","UserList","setOrder","useState","setOrderBy","selected","setSelected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","usersRows","setUsersRows","managementDispatch","managementValue","openModal","cell","doOpenConfirm","closeModal","doCloseConfirm","handleDelete","doDelete","idToDelete","sendNotification","useEffect","fetchAPI","doFetch","rows","e","console","log","classes","text","componentProps","type","message","variant","color","options","position","POSITION","TOP_RIGHT","progressClassName","progress","className","notification","timeOut","notificationComponent","handleRequestSort","isAsc","handleSelectAllClick","target","checked","newSelecteds","n","handleClick","name","selectedIndex","indexOf","newSelected","concat","slice","length","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","value","isSelected","emptyRows","Math","min","handleSearch","newArr","filter","c","toLowerCase","includes","currentTarget","modalOpen","startAdornment","row","isItemSelected","labelId","avatars","marginRight","backgroundColor","email","charAt","toUpperCase","publicUrl","role","statusColor","emailVerified","password","height","fontSize","fontWeight","createdAt","format","marginLeft"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {\n    Grid,\n    Box,\n    InputAdornment,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    TextField as Input,\n} from '@material-ui/core'\nimport moment from 'moment'\nimport Widget from '../../components/Widget'\nimport { Button } from '../../components/Wrappers'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport TableHead from '@material-ui/core/TableHead'\nimport TablePagination from '@material-ui/core/TablePagination'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport IconButton from '@material-ui/core/IconButton'\nimport DeleteIcon from '@material-ui/icons/DeleteOutlined'\nimport Notification from '../../components/Notification/Notification'\nimport { toast } from 'react-toastify'\n\nimport { Typography, Chip, Avatar, Link } from '../../components/Wrappers'\nimport {\n    useManagementDispatch,\n    useManagementState,\n} from '../../context/ManagementContext'\n\nimport useStyles from './styles'\n// Icons\nimport {\n    Add as AddIcon,\n    GetApp as DownloadIcon,\n    Search as SearchIcon,\n    CreateOutlined as CreateIcon,\n    HelpOutline as HelpIcon,\n} from '@material-ui/icons'\n\nimport { actions } from '../../context/ManagementContext'\n\n\n\nfunction descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1\n    }\n    return 0\n}\n\nfunction getComparator(order, orderBy) {\n    return order === 'desc'\n        ? (a, b) => descendingComparator(a, b, orderBy)\n        : (a, b) => -descendingComparator(a, b, orderBy)\n}\n\nfunction stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index])\n    stabilizedThis.sort((a, b) => {\n        const order = comparator(a[0], b[0])\n        if (order !== 0) return order\n        return a[1] - b[1]\n    })\n    return stabilizedThis.map(el => el[0])\n}\n\nconst headCells = [\n    { id: 'id', numeric: true, disablePadding: true, label: 'ID' },\n    { id: 'name', numeric: true, disablePadding: false, label: 'NAME' },\n    { id: 'role', numeric: true, disablePadding: false, label: 'ROLE' },\n    {\n        id: 'companyName',\n        numeric: true,\n        disablePadding: false,\n        label: 'COMPANY NAME',\n    },\n    { id: 'email', numeric: true, disablePadding: false, label: 'EMAIL' },\n    { id: 'status', numeric: true, disablePadding: false, label: 'STATUS' },\n    {\n        id: 'created',\n        numeric: false,\n        disablePadding: false,\n        label: 'CREATED AT',\n    },\n    { id: 'actions', numeric: true, disablePadding: false, label: 'ACTIONS' },\n]\n\nfunction EnhancedTableHead(props) {\n    const {\n        onSelectAllClick,\n        order,\n        orderBy,\n        numSelected,\n        rowCount,\n        onRequestSort,\n    } = props\n    const createSortHandler = property => event => {\n        onRequestSort(event, property)\n    }\n\n    return (\n        <TableHead>\n            <TableRow>\n                <TableCell padding=\"checkbox\">\n                    <Checkbox\n                        indeterminate={\n                            numSelected > 0 && numSelected < rowCount\n                        }\n                        checked={rowCount > 0 && numSelected === rowCount}\n                        onChange={onSelectAllClick}\n                        inputProps={{ 'aria-label': 'select all desserts' }}\n                    />\n                </TableCell>\n                {headCells.map(headCell => (\n                    <TableCell\n                        key={headCell.id}\n                        align={headCell.numeric ? 'left' : 'right'}\n                        padding={headCell.disablePadding ? 'none' : 'default'}\n                        sortDirection={orderBy === headCell.id ? order : false}\n                    >\n                        <TableSortLabel\n                            active={orderBy === headCell.id}\n                            direction={orderBy === headCell.id ? order : 'asc'}\n                            onClick={createSortHandler(headCell.id)}\n                        >\n                            <Typography\n                                noWrap\n                                weight={'medium'}\n                                variant={'body2'}\n                            >\n                                {headCell.label}\n                            </Typography>\n                        </TableSortLabel>\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    )\n}\n\nconst UserList = () => {\n    const [order, setOrder] = React.useState('asc')\n    const [orderBy, setOrderBy] = React.useState('calories')\n    const [selected, setSelected] = React.useState([])\n    const [page, setPage] = React.useState(0)\n    const [dense, setDense] = React.useState(false)\n    const [rowsPerPage, setRowsPerPage] = React.useState(5)\n    const [usersRows, setUsersRows] = React.useState([])\n\n    var managementDispatch = useManagementDispatch()\n    var managementValue = useManagementState()\n    const openModal = (cell) => {\n      actions.doOpenConfirm(cell)(managementDispatch);\n    }\n\n    const closeModal = () => {\n      actions.doCloseConfirm()(managementDispatch)\n    }\n\n    const handleDelete = () => {\n      actions.doDelete(managementValue.idToDelete)(managementDispatch);\n      sendNotification('User deleted')\n    }\n\n    React.useEffect(() => {\n      sendNotification('This page is only available in React Material Admin Full with Node.js integration!')\n      async function fetchAPI() {\n        try {\n          await actions.doFetch({}, false)(managementDispatch);\n          setUsersRows(managementValue.rows);\n        } catch (e) {\n          console.log(e);\n        }\n      }\n      fetchAPI();\n    }, []);\n\n    const classes = useStyles();\n\n    function sendNotification(text) {\n      const componentProps = {\n        type: \"feedback\",\n        message: text,\n        variant: \"contained\",\n        color: \"success\"\n      };\n      const options = {\n        type: \"info\",\n        position: toast.POSITION.TOP_RIGHT,\n        progressClassName: classes.progress,\n        className: classes.notification,\n        timeOut: 1000\n      };\n      return toast(\n        <Notification\n          {...componentProps}\n          className={classes.notificationComponent}\n        />,\n        options\n      );\n    }\n\n    React.useEffect(() => {\n      setUsersRows(managementValue.rows)\n    },[managementValue.rows]);\n\n    const handleRequestSort = (event, property) => {\n        const isAsc = orderBy === property && order === 'asc'\n        setOrder(isAsc ? 'desc' : 'asc')\n        setOrderBy(property)\n    }\n\n    const handleSelectAllClick = event => {\n        if (event.target.checked) {\n            const newSelecteds = managementValue.rows.map(n => n.id)\n            setSelected(newSelecteds)\n            return\n        }\n        setSelected([])\n    }\n\n    const handleClick = (event, name) => {\n        const selectedIndex = selected.indexOf(name)\n        let newSelected = []\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, name)\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1))\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1))\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1)\n            )\n        }\n\n        setSelected(newSelected)\n    }\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage)\n    }\n\n    const handleChangeRowsPerPage = event => {\n        setRowsPerPage(parseInt(event.target.value, 10))\n        setPage(0)\n    }\n\n    const isSelected = name => selected.indexOf(name) !== -1\n\n    const emptyRows =\n        rowsPerPage - Math.min(rowsPerPage, usersRows.length - page * rowsPerPage)\n\n    const handleSearch = e => {\n        const newArr = usersRows.filter(c => {\n            return c.name\n                .toLowerCase()\n                .includes(e.currentTarget.value.toLowerCase())\n        })\n        setUsersRows(newArr)\n    }\n\n    return (\n        <Grid container spacing={3}>\n          <Dialog\n            open={managementValue.modalOpen}\n            onClose={closeModal}\n            scroll={\"body\"}\n            aria-labelledby=\"scroll-dialog-title\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">\n              Are you sure that you want to delete user?\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText id=\"alert-dialog-description\">\n                User will be deleted.\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button\n                onClick={closeModal}\n                color=\"primary\"\n              >\n                Disagree\n              </Button>\n              <Button\n                onClick={handleDelete}\n                color=\"primary\"\n                autoFocus\n              >\n                Agree\n              </Button>\n            </DialogActions>\n          </Dialog>\n            <Grid item xs={12}>\n                <Widget inheritHeight>\n                    <Box\n                        justifyContent={'space-between'}\n                        display={'flex'}\n                        alignItems={'flex-start'}\n                    >\n                        <Box>\n                            <Link href=\"#/app/user/add\" underline=\"none\" color=\"#fff\">\n                                <Button variant={'contained'} color={'success'}>\n                                    <Box mr={1} display={'flex'}>\n                                        <AddIcon />\n                                    </Box>\n                                    Add\n                                </Button>\n                            </Link>\n                        </Box>\n                        <Box\n                            display={'flex'}\n                            flexDirection={'column'}\n                            alignItems={'flex-end'}\n                        >\n                            <Button variant={'outlined'} color={'secondary'}>\n                                <Box display={'flex'} mr={1}>\n                                    <DownloadIcon />\n                                </Box>\n                                Download\n                            </Button>\n                            <Input\n                                id=\"search-field\"\n                                label=\"Search\"\n                                margin=\"dense\"\n                                variant=\"outlined\"\n                                onChange={e => handleSearch(e)}\n                                InputProps={{\n                                    startAdornment: (\n                                        <InputAdornment position=\"start\">\n                                            <SearchIcon />\n                                        </InputAdornment>\n                                    ),\n                                }}\n                            />\n                        </Box>\n                    </Box>\n                </Widget>\n            </Grid>\n            <Grid item xs={12}>\n                <Widget inheritHeight noBodyPadding>\n                    <TableContainer>\n                        <Table\n                            aria-labelledby=\"tableTitle\"\n                            size={dense ? 'small' : 'medium'}\n                            aria-label=\"enhanced table\"\n                        >\n                            <EnhancedTableHead\n                                numSelected={selected.length}\n                                order={order}\n                                orderBy={orderBy}\n                                onSelectAllClick={handleSelectAllClick}\n                                onRequestSort={handleRequestSort}\n                                rowCount={usersRows.length}\n                            />\n                            <TableBody>\n                                {stableSort(\n                                    usersRows,\n                                    getComparator(order, orderBy)\n                                )\n                                    .slice(\n                                        page * rowsPerPage,\n                                        page * rowsPerPage + rowsPerPage\n                                    )\n                                    .map((row, index) => {\n                                        const isItemSelected = isSelected(\n                                            row.id\n                                        )\n                                        const labelId = `enhanced-table-checkbox-${index}`\n                                        return (\n                                            <TableRow\n                                                hover\n                                                onClick={event =>\n                                                    handleClick(event, row.id)\n                                                }\n                                                role=\"checkbox\"\n                                                aria-checked={isItemSelected}\n                                                tabIndex={-1}\n                                                key={row.id}\n                                                selected={isItemSelected}\n                                            >\n                                                <TableCell padding=\"checkbox\">\n                                                    <Checkbox\n                                                        checked={isItemSelected}\n                                                        inputProps={{\n                                                            'aria-labelledby': labelId,\n                                                        }}\n                                                    />\n                                                </TableCell>\n                                                <TableCell\n                                                    component=\"th\"\n                                                    id={labelId}\n                                                    scope=\"row\"\n                                                    padding=\"none\"\n                                                >\n                                                    <Typography\n                                                        variant={'body2'}\n                                                    >\n                                                        {index+1}\n                                                    </Typography>\n                                                </TableCell>\n                                                <TableCell align=\"left\">\n                                                    <Box\n                                                        display={'flex'}\n                                                        alignItems={'center'}\n                                                    >\n                                                        {!row.avatars.length ? (\n                                                            <Avatar\n                                                                alt={row.name}\n                                                                style={{\n                                                                    marginRight: 15,\n                                                                    backgroundColor: '#536DFE'\n                                                                }}\n                                                            >\n                                                                {row.email.charAt(0).toUpperCase()}\n                                                            </Avatar>\n                                                        ) : (\n                                                          <Avatar\n                                                              alt={row.name}\n                                                              src={row.avatars && row.avatars[0].publicUrl && row.avatars[row.avatars.length-1].publicUrl}\n                                                              style={{\n                                                                  marginRight: 15,\n                                                              }}\n                                                          />\n                                                        )}\n                                                        <Typography\n                                                            variant={'body2'}\n                                                            noWrap\n                                                        >\n                                                            {row.name}\n                                                        </Typography>\n                                                    </Box>\n                                                </TableCell>\n                                                <TableCell align=\"left\">\n                                                    <Typography\n                                                        variant={'body2'}\n                                                    >\n                                                        {row.role}\n                                                    </Typography>\n                                                </TableCell>\n                                                <TableCell align=\"left\">\n                                                    <Typography\n                                                        variant={'body2'}\n                                                    >\n                                                        Flatlogic\n                                                    </Typography>\n                                                </TableCell>\n                                                <TableCell align=\"left\">\n                                                    <Typography\n                                                        variant={'body2'}\n                                                    >\n                                                        {row.email}\n                                                    </Typography>\n                                                </TableCell>\n                                                <TableCell align=\"left\">\n                                                    <Chip\n                                                        color={\n                                                            row.statusColor\n                                                        }\n                                                        label={(row.emailVerified && row.password) ? 'active' : 'inactive'}\n                                                        style={{\n                                                            color: '#fff',\n                                                            height: 16,\n                                                            backgroundColor: (row.emailVerified && row.password) ? '#3CD4A0' : '#FF5C93',\n                                                            fontSize: 11,\n                                                            fontWeight:\n                                                                'bold',\n                                                        }}\n                                                    />\n                                                </TableCell>\n                                                <TableCell align=\"right\">\n                                                    <Typography\n                                                        variant={'body2'}\n                                                    >\n                                                        {moment(row.createdAt).format('YYYY-DD-MM')}\n                                                    </Typography>\n                                                </TableCell>\n                                                <TableCell align=\"left\">\n                                                    <Box\n                                                        display={'flex'}\n                                                        style={{\n                                                            marginLeft: -12,\n                                                        }}\n                                                    >\n                                                        <IconButton\n                                                            color={'primary'}\n                                                        >\n                                                          <Link href={`#app/user/${row.id}/edit`} color=\"#fff\">\n                                                            <CreateIcon />\n                                                          </Link>\n                                                        </IconButton>\n                                                        <IconButton\n                                                            color={'primary'}\n                                                        >\n                                                            <Link href={`#app/user/${row.id}`} color=\"#fff\">\n                                                              <HelpIcon />\n                                                            </Link>\n                                                        </IconButton>\n                                                        <IconButton\n                                                            onClick={() => openModal(row.id)}\n                                                            color={'primary'}\n                                                        >\n                                                            <DeleteIcon />\n                                                        </IconButton>\n                                                    </Box>\n                                                </TableCell>\n                                            </TableRow>\n                                        )\n                                    })}\n                                {emptyRows > 0 && (\n                                    <TableRow\n                                        style={{\n                                            height:\n                                                (dense ? 33 : 53) * emptyRows,\n                                        }}\n                                    >\n                                        <TableCell colSpan={6} />\n                                    </TableRow>\n                                )}\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                    <TablePagination\n                        rowsPerPageOptions={[5, 10, 25]}\n                        component=\"div\"\n                        count={usersRows.length}\n                        rowsPerPage={rowsPerPage}\n                        page={page}\n                        onChangePage={handleChangePage}\n                        onChangeRowsPerPage={handleChangeRowsPerPage}\n                    />\n                </Widget>\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default UserList\n"]},"metadata":{},"sourceType":"module"}