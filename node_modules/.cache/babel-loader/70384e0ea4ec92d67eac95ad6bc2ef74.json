{"ast":null,"code":"import React from\"react\";import{ComposableMap,ZoomableGroup,Geographies,Geography,Markers,Marker}from\"react-simple-maps\";import useStyles from\"./styles\";import map from\"../../images/map.json\";var markers=[{markerOffset:-25,name:\"Buenos Aires\",coordinates:[-58.3816,-34.6037]}];function VectorMap(){var classes=useStyles();return/*#__PURE__*/React.createElement(\"div\",{className:classes.vectorContainer},/*#__PURE__*/React.createElement(ComposableMap,{projectionConfig:{scale:205,rotation:[-11,0,0]},width:980,height:551,style:{width:\"100%\",height:\"auto\",overflow:\"auto\"}},/*#__PURE__*/React.createElement(ZoomableGroup,{center:[0,20],disablePanning:true},/*#__PURE__*/React.createElement(Geographies,{geography:map},function(geographies,projection){return geographies.map(function(geography,i){return geography.id!==\"ATA\"&&/*#__PURE__*/React.createElement(Geography,{key:i,geography:geography,projection:projection,style:{default:{fill:\"#ECEFF1\",stroke:\"#607D8B\",strokeWidth:0.75,outline:\"none\"},hover:{fill:\"#607D8B\",stroke:\"#607D8B\",strokeWidth:0.75,outline:\"none\"},pressed:{fill:\"#536DFE\",stroke:\"#607D8B\",strokeWidth:0.75,outline:\"none\"}}});});}),/*#__PURE__*/React.createElement(Markers,null,markers.map(function(marker,i){return/*#__PURE__*/React.createElement(Marker,{key:i,marker:marker,style:{default:{fill:\"#536DFE\"},hover:{fill:\"#FFFFFF\"},pressed:{fill:\"#536DFE\"}}},/*#__PURE__*/React.createElement(\"circle\",{cx:0,cy:0,r:5,style:{stroke:\"#536DFE\",strokeWidth:3,opacity:0.9}}),/*#__PURE__*/React.createElement(\"text\",{textAnchor:\"middle\",y:marker.markerOffset,style:{fontFamily:\"Roboto, sans-serif\",fill:\"#607D8B\"}},marker.name));})))));}export default VectorMap;","map":{"version":3,"sources":["/home/dekor/eqvium/react_material_test/admin-full/src/pages/maps/VectorMap.js"],"names":["React","ComposableMap","ZoomableGroup","Geographies","Geography","Markers","Marker","useStyles","map","markers","markerOffset","name","coordinates","VectorMap","classes","vectorContainer","scale","rotation","width","height","overflow","geographies","projection","geography","i","id","default","fill","stroke","strokeWidth","outline","hover","pressed","marker","opacity","fontFamily"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OACEC,aADF,CAEEC,aAFF,CAGEC,WAHF,CAIEC,SAJF,CAKEC,OALF,CAMEC,MANF,KAOO,mBAPP,CAQA,MAAOC,CAAAA,SAAP,KAAsB,UAAtB,CACA,MAAOC,CAAAA,GAAP,KAAgB,uBAAhB,CAEA,GAAMC,CAAAA,OAAO,CAAG,CACd,CACEC,YAAY,CAAE,CAAC,EADjB,CAEEC,IAAI,CAAE,cAFR,CAGEC,WAAW,CAAE,CAAC,CAAC,OAAF,CAAW,CAAC,OAAZ,CAHf,CADc,CAAhB,CAQA,QAASC,CAAAA,SAAT,EAAqB,CACnB,GAAMC,CAAAA,OAAO,CAAGP,SAAS,EAAzB,CACA,mBACE,2BAAK,SAAS,CAAEO,OAAO,CAACC,eAAxB,eACE,oBAAC,aAAD,EACE,gBAAgB,CAAE,CAChBC,KAAK,CAAE,GADS,CAEhBC,QAAQ,CAAE,CAAC,CAAC,EAAF,CAAM,CAAN,CAAS,CAAT,CAFM,CADpB,CAKE,KAAK,CAAE,GALT,CAME,MAAM,CAAE,GANV,CAOE,KAAK,CAAE,CACLC,KAAK,CAAE,MADF,CAELC,MAAM,CAAE,MAFH,CAGLC,QAAQ,CAAE,MAHL,CAPT,eAaE,oBAAC,aAAD,EAAe,MAAM,CAAE,CAAC,CAAD,CAAI,EAAJ,CAAvB,CAAgC,cAAc,KAA9C,eACE,oBAAC,WAAD,EAAa,SAAS,CAAEZ,GAAxB,EACG,SAACa,WAAD,CAAcC,UAAd,QACCD,CAAAA,WAAW,CAACb,GAAZ,CACE,SAACe,SAAD,CAAYC,CAAZ,QACED,CAAAA,SAAS,CAACE,EAAV,GAAiB,KAAjB,eACE,oBAAC,SAAD,EACE,GAAG,CAAED,CADP,CAEE,SAAS,CAAED,SAFb,CAGE,UAAU,CAAED,UAHd,CAIE,KAAK,CAAE,CACLI,OAAO,CAAE,CACPC,IAAI,CAAE,SADC,CAEPC,MAAM,CAAE,SAFD,CAGPC,WAAW,CAAE,IAHN,CAIPC,OAAO,CAAE,MAJF,CADJ,CAOLC,KAAK,CAAE,CACLJ,IAAI,CAAE,SADD,CAELC,MAAM,CAAE,SAFH,CAGLC,WAAW,CAAE,IAHR,CAILC,OAAO,CAAE,MAJJ,CAPF,CAaLE,OAAO,CAAE,CACPL,IAAI,CAAE,SADC,CAEPC,MAAM,CAAE,SAFD,CAGPC,WAAW,CAAE,IAHN,CAIPC,OAAO,CAAE,MAJF,CAbJ,CAJT,EAFJ,EADF,CADD,EADH,CADF,cAmCE,oBAAC,OAAD,MACGrB,OAAO,CAACD,GAAR,CAAY,SAACyB,MAAD,CAAST,CAAT,qBACX,oBAAC,MAAD,EACE,GAAG,CAAEA,CADP,CAEE,MAAM,CAAES,MAFV,CAGE,KAAK,CAAE,CACLP,OAAO,CAAE,CAAEC,IAAI,CAAE,SAAR,CADJ,CAELI,KAAK,CAAE,CAAEJ,IAAI,CAAE,SAAR,CAFF,CAGLK,OAAO,CAAE,CAAEL,IAAI,CAAE,SAAR,CAHJ,CAHT,eASE,8BACE,EAAE,CAAE,CADN,CAEE,EAAE,CAAE,CAFN,CAGE,CAAC,CAAE,CAHL,CAIE,KAAK,CAAE,CACLC,MAAM,CAAE,SADH,CAELC,WAAW,CAAE,CAFR,CAGLK,OAAO,CAAE,GAHJ,CAJT,EATF,cAmBE,4BACE,UAAU,CAAC,QADb,CAEE,CAAC,CAAED,MAAM,CAACvB,YAFZ,CAGE,KAAK,CAAE,CACLyB,UAAU,CAAE,oBADP,CAELR,IAAI,CAAE,SAFD,CAHT,EAQGM,MAAM,CAACtB,IARV,CAnBF,CADW,EAAZ,CADH,CAnCF,CAbF,CADF,CADF,CAwFD,CAED,cAAeE,CAAAA,SAAf","sourcesContent":["import React from \"react\";\nimport {\n  ComposableMap,\n  ZoomableGroup,\n  Geographies,\n  Geography,\n  Markers,\n  Marker\n} from \"react-simple-maps\";\nimport useStyles from \"./styles\";\nimport map from \"../../images/map.json\";\n\nconst markers = [\n  {\n    markerOffset: -25,\n    name: \"Buenos Aires\",\n    coordinates: [-58.3816, -34.6037]\n  }\n];\n\nfunction VectorMap() {\n  const classes = useStyles();\n  return (\n    <div className={classes.vectorContainer}>\n      <ComposableMap\n        projectionConfig={{\n          scale: 205,\n          rotation: [-11, 0, 0]\n        }}\n        width={980}\n        height={551}\n        style={{\n          width: \"100%\",\n          height: \"auto\",\n          overflow: \"auto\"\n        }}\n      >\n        <ZoomableGroup center={[0, 20]} disablePanning>\n          <Geographies geography={map}>\n            {(geographies, projection) =>\n              geographies.map(\n                (geography, i) =>\n                  geography.id !== \"ATA\" && (\n                    <Geography\n                      key={i}\n                      geography={geography}\n                      projection={projection}\n                      style={{\n                        default: {\n                          fill: \"#ECEFF1\",\n                          stroke: \"#607D8B\",\n                          strokeWidth: 0.75,\n                          outline: \"none\"\n                        },\n                        hover: {\n                          fill: \"#607D8B\",\n                          stroke: \"#607D8B\",\n                          strokeWidth: 0.75,\n                          outline: \"none\"\n                        },\n                        pressed: {\n                          fill: \"#536DFE\",\n                          stroke: \"#607D8B\",\n                          strokeWidth: 0.75,\n                          outline: \"none\"\n                        }\n                      }}\n                    />\n                  )\n              )\n            }\n          </Geographies>\n          <Markers>\n            {markers.map((marker, i) => (\n              <Marker\n                key={i}\n                marker={marker}\n                style={{\n                  default: { fill: \"#536DFE\" },\n                  hover: { fill: \"#FFFFFF\" },\n                  pressed: { fill: \"#536DFE\" }\n                }}\n              >\n                <circle\n                  cx={0}\n                  cy={0}\n                  r={5}\n                  style={{\n                    stroke: \"#536DFE\",\n                    strokeWidth: 3,\n                    opacity: 0.9\n                  }}\n                />\n                <text\n                  textAnchor=\"middle\"\n                  y={marker.markerOffset}\n                  style={{\n                    fontFamily: \"Roboto, sans-serif\",\n                    fill: \"#607D8B\"\n                  }}\n                >\n                  {marker.name}\n                </text>\n              </Marker>\n            ))}\n          </Markers>\n        </ZoomableGroup>\n      </ComposableMap>\n    </div>\n  );\n}\n\nexport default VectorMap;\n"]},"metadata":{},"sourceType":"module"}