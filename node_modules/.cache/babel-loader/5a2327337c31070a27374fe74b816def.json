{"ast":null,"code":"var _jsxFileName = \"/home/dekor/eqvium/react_material_test/admin-full-v2/src/pages/notifications/Notifications.js\";\nimport React, { useState } from \"react\";\nimport { Grid, Box } from \"@material-ui/core\";\nimport { toast } from \"react-toastify\";\nimport classnames from \"classnames\"; // styles\n\nimport \"react-toastify/dist/ReactToastify.css\";\nimport useStyles from \"./styles\"; // components\n\nimport Widget from \"../../components/Widget\";\nimport Notification from \"../../components/Notification\";\nimport Code from \"../../components/Code\";\nimport { Typography, Button } from \"../../components/Wrappers\";\nconst positions = [toast.POSITION.TOP_LEFT, toast.POSITION.TOP_CENTER, toast.POSITION.TOP_RIGHT, toast.POSITION.BOTTOM_LEFT, toast.POSITION.BOTTOM_CENTER, toast.POSITION.BOTTOM_RIGHT];\nexport default function NotificationsPage(props) {\n  var classes = useStyles(); // local\n\n  var [notificationsPosition, setNotificationPosition] = useState(2);\n  var [errorToastId, setErrorToastId] = useState(null);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    lg: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Widget, {\n    title: \"Layout Options\",\n    disableWidgetMenu: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, \"There are few position options available for notifications. You can click any of them to change notifications position:\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.layoutContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.layoutButtonsRow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => changeNotificationPosition(0),\n    className: classnames(classes.layoutButton, {\n      [classes.layoutButtonActive]: notificationsPosition === 0\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => changeNotificationPosition(1),\n    className: classnames(classes.layoutButton, {\n      [classes.layoutButtonActive]: notificationsPosition === 1\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => changeNotificationPosition(2),\n    className: classnames(classes.layoutButton, {\n      [classes.layoutButtonActive]: notificationsPosition === 2\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.layoutText,\n    size: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }, \"Click any position\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.layoutButtonsRow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => changeNotificationPosition(3),\n    className: classnames(classes.layoutButton, {\n      [classes.layoutButtonActive]: notificationsPosition === 3\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => changeNotificationPosition(4),\n    className: classnames(classes.layoutButton, {\n      [classes.layoutButtonActive]: notificationsPosition === 4\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => changeNotificationPosition(5),\n    className: classnames(classes.layoutButton, {\n      [classes.layoutButtonActive]: notificationsPosition === 5\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    lg: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Widget, {\n    title: \"Notifications Types\",\n    disableWidgetMenu: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, \"Different types of notifications for lost of use cases. Custom classes are also supported.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.buttonsContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: () => handleNotificationCall(\"info\"),\n    className: classnames(classes.notificationCallButton),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  }, \"Info Message\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: () => handleNotificationCall(\"error\"),\n    className: classnames(classes.notificationCallButton),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  }, \"Error + Retry Message\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"success\",\n    onClick: () => handleNotificationCall(\"success\"),\n    className: classnames(classes.notificationCallButton),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 15\n    }\n  }, \"Success Message\")))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    lg: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Widget, {\n    title: \"Usage\",\n    disableWidgetMenu: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, \"Notifications are created with the help of\", \" \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://github.com/fkhadra/react-toastify\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 15\n    }\n  }, \"react-toastify\")), /*#__PURE__*/React.createElement(Code, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, `\n  // import needed components, functions and styles\n  import { ToastContainer, toast } from 'react-toastify';\n  import 'react-toastify/dist/ReactToastify.css';\n\n  const Page = () => {\n    <div>\n      <ToastContainer />\n      <button onClick={() => toast('Toast Message')}>\n        show notification\n      </button>\n    </div>\n  };\n            `), /*#__PURE__*/React.createElement(Box, {\n    py: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"caption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 15\n    }\n  }, \"For more API information refer to the library documentation\")))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    lg: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Widget, {\n    title: \"Notification Types Examples\",\n    disableWidgetMenu: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Notification, {\n    className: classes.notificationItem,\n    shadowless: true,\n    type: \"message\",\n    message: \"Thanks for Checking out Messenger\",\n    variant: \"contained\",\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Notification, {\n    className: classes.notificationItem,\n    shadowless: true,\n    type: \"feedback\",\n    message: \"New user feedback received\",\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Notification, {\n    className: classes.notificationItem,\n    shadowless: true,\n    type: \"customer\",\n    message: \"New customer is registered\",\n    variant: \"contained\",\n    color: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Notification, {\n    className: classes.notificationItem,\n    shadowless: true,\n    type: \"shipped\",\n    message: \"The order was shipped\",\n    variant: \"contained\",\n    color: \"warning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Notification, {\n    className: classes.notificationItem,\n    shadowless: true,\n    type: \"delivered\",\n    message: \"The order was delivered\",\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Notification, {\n    className: classes.notificationItem,\n    shadowless: true,\n    type: \"defence\",\n    message: \"5 Defence alerts\",\n    variant: \"contained\",\n    color: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    lg: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Widget, {\n    title: \"Notification Types Examples\",\n    disableWidgetMenu: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Notification, {\n    className: classes.notificationItem,\n    type: \"report\",\n    message: \"New report has been received\",\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Notification, {\n    className: classes.notificationItem,\n    type: \"feedback\",\n    message: \"New user feedback received\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Notification, {\n    className: classes.notificationItem,\n    type: \"shipped\",\n    message: \"The item was shipped\",\n    color: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Notification, {\n    className: classes.notificationItem,\n    type: \"message\",\n    message: \"The new message from user @nahawaii\",\n    color: \"warning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Notification, {\n    className: classes.notificationItem,\n    type: \"upload\",\n    message: \"Your file is ready to upload\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Notification, {\n    className: classes.notificationItem,\n    type: \"disc\",\n    message: \"The disc is full\",\n    color: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    lg: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Widget, {\n    title: \"Notification Types Examples\",\n    disableWidgetMenu: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Notification, {\n    className: classes.notificationItem,\n    type: \"report\",\n    message: \"New report has been received\",\n    variant: \"rounded\",\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Notification, {\n    className: classes.notificationItem,\n    type: \"feedback\",\n    message: \"New user feedback received\",\n    variant: \"rounded\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Notification, {\n    className: classes.notificationItem,\n    type: \"shipped\",\n    message: \"The item was shipped\",\n    variant: \"rounded\",\n    color: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Notification, {\n    className: classes.notificationItem,\n    type: \"message\",\n    message: \"The new message from user @nahawaii\",\n    variant: \"rounded\",\n    color: \"warning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Notification, {\n    className: classes.notificationItem,\n    type: \"upload\",\n    message: \"Your file is ready to upload\",\n    variant: \"rounded\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Notification, {\n    className: classes.notificationItem,\n    type: \"disc\",\n    message: \"The disc is full\",\n    variant: \"rounded\",\n    color: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 13\n    }\n  }))))); // #############################################################\n\n  function sendNotification(componentProps, options) {\n    return toast( /*#__PURE__*/React.createElement(Notification, Object.assign({}, componentProps, {\n      className: classes.notificationComponent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 7\n      }\n    })), options);\n  }\n\n  function retryErrorNotification() {\n    var componentProps = {\n      type: \"message\",\n      message: \"Message was sent successfully!\",\n      variant: \"contained\",\n      color: \"success\"\n    };\n    toast.update(errorToastId, {\n      render: /*#__PURE__*/React.createElement(Notification, Object.assign({}, componentProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 15\n        }\n      })),\n      type: \"success\"\n    });\n    setErrorToastId(null);\n  }\n\n  function handleNotificationCall(notificationType) {\n    var componentProps;\n    if (errorToastId && notificationType === \"error\") return;\n\n    switch (notificationType) {\n      case \"info\":\n        componentProps = {\n          type: \"feedback\",\n          message: \"New user feedback received\",\n          variant: \"contained\",\n          color: \"primary\"\n        };\n        break;\n\n      case \"error\":\n        componentProps = {\n          type: \"message\",\n          message: \"Message was not sent!\",\n          variant: \"contained\",\n          color: \"secondary\",\n          extraButton: \"Resend\",\n          extraButtonClick: retryErrorNotification\n        };\n        break;\n\n      default:\n        componentProps = {\n          type: \"shipped\",\n          message: \"The item was shipped\",\n          variant: \"contained\",\n          color: \"success\"\n        };\n    }\n\n    var toastId = sendNotification(componentProps, {\n      type: notificationType,\n      position: positions[notificationsPosition],\n      progressClassName: classes.progress,\n      onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\n      className: classes.notification\n    });\n    if (notificationType === \"error\") setErrorToastId(toastId);\n  }\n\n  function changeNotificationPosition(positionId) {\n    setNotificationPosition(positionId);\n  }\n}","map":{"version":3,"sources":["/home/dekor/eqvium/react_material_test/admin-full-v2/src/pages/notifications/Notifications.js"],"names":["React","useState","Grid","Box","toast","classnames","useStyles","Widget","Notification","Code","Typography","Button","positions","POSITION","TOP_LEFT","TOP_CENTER","TOP_RIGHT","BOTTOM_LEFT","BOTTOM_CENTER","BOTTOM_RIGHT","NotificationsPage","props","classes","notificationsPosition","setNotificationPosition","errorToastId","setErrorToastId","layoutContainer","layoutButtonsRow","changeNotificationPosition","layoutButton","layoutButtonActive","layoutText","buttonsContainer","handleNotificationCall","notificationCallButton","notificationItem","sendNotification","componentProps","options","notificationComponent","retryErrorNotification","type","message","variant","color","update","render","notificationType","extraButton","extraButtonClick","toastId","position","progressClassName","progress","onClose","className","notification","positionId"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Grid, Box } from \"@material-ui/core\";\nimport { toast } from \"react-toastify\";\nimport classnames from \"classnames\";\n\n// styles\nimport \"react-toastify/dist/ReactToastify.css\";\nimport useStyles from \"./styles\";\n\n// components\nimport Widget from \"../../components/Widget\";\nimport Notification from \"../../components/Notification\";\nimport Code from \"../../components/Code\";\nimport { Typography, Button } from \"../../components/Wrappers\";\n\nconst positions = [\n  toast.POSITION.TOP_LEFT,\n  toast.POSITION.TOP_CENTER,\n  toast.POSITION.TOP_RIGHT,\n  toast.POSITION.BOTTOM_LEFT,\n  toast.POSITION.BOTTOM_CENTER,\n  toast.POSITION.BOTTOM_RIGHT\n];\n\nexport default function NotificationsPage(props) {\n  var classes = useStyles();\n\n  // local\n  var [notificationsPosition, setNotificationPosition] = useState(2);\n  var [errorToastId, setErrorToastId] = useState(null);\n\n  return (\n    <>\n      <Grid container spacing={3}>\n        <Grid item xs={12} md={6} lg={4}>\n          <Widget title=\"Layout Options\" disableWidgetMenu>\n            <Typography>\n              There are few position options available for notifications. You\n              can click any of them to change notifications position:\n            </Typography>\n            <div className={classes.layoutContainer}>\n              <div className={classes.layoutButtonsRow}>\n                <button\n                  onClick={() => changeNotificationPosition(0)}\n                  className={classnames(classes.layoutButton, {\n                    [classes.layoutButtonActive]: notificationsPosition === 0\n                  })}\n                />\n                <button\n                  onClick={() => changeNotificationPosition(1)}\n                  className={classnames(classes.layoutButton, {\n                    [classes.layoutButtonActive]: notificationsPosition === 1\n                  })}\n                />\n                <button\n                  onClick={() => changeNotificationPosition(2)}\n                  className={classnames(classes.layoutButton, {\n                    [classes.layoutButtonActive]: notificationsPosition === 2\n                  })}\n                />\n              </div>\n              <Typography className={classes.layoutText} size=\"md\">\n                Click any position\n              </Typography>\n              <div className={classes.layoutButtonsRow}>\n                <button\n                  onClick={() => changeNotificationPosition(3)}\n                  className={classnames(classes.layoutButton, {\n                    [classes.layoutButtonActive]: notificationsPosition === 3\n                  })}\n                />\n                <button\n                  onClick={() => changeNotificationPosition(4)}\n                  className={classnames(classes.layoutButton, {\n                    [classes.layoutButtonActive]: notificationsPosition === 4\n                  })}\n                />\n                <button\n                  onClick={() => changeNotificationPosition(5)}\n                  className={classnames(classes.layoutButton, {\n                    [classes.layoutButtonActive]: notificationsPosition === 5\n                  })}\n                />\n              </div>\n            </div>\n          </Widget>\n        </Grid>\n        <Grid item xs={12} md={6} lg={4}>\n          <Widget title=\"Notifications Types\" disableWidgetMenu>\n            <Typography>\n              Different types of notifications for lost of use cases. Custom\n              classes are also supported.\n            </Typography>\n            <div className={classes.buttonsContainer}>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => handleNotificationCall(\"info\")}\n                className={classnames(classes.notificationCallButton)}\n              >\n                Info Message\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                onClick={() => handleNotificationCall(\"error\")}\n                className={classnames(classes.notificationCallButton)}\n              >\n                Error + Retry Message\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"success\"\n                onClick={() => handleNotificationCall(\"success\")}\n                className={classnames(classes.notificationCallButton)}\n              >\n                Success Message\n              </Button>\n            </div>\n          </Widget>\n        </Grid>\n        <Grid item xs={12} md={6} lg={4}>\n          <Widget title=\"Usage\" disableWidgetMenu>\n            <Typography>\n              Notifications are created with the help of{\" \"}\n              <a href=\"https://github.com/fkhadra/react-toastify\">\n                react-toastify\n              </a>\n            </Typography>\n            <Code>{`\n  // import needed components, functions and styles\n  import { ToastContainer, toast } from 'react-toastify';\n  import 'react-toastify/dist/ReactToastify.css';\n\n  const Page = () => {\n    <div>\n      <ToastContainer />\n      <button onClick={() => toast('Toast Message')}>\n        show notification\n      </button>\n    </div>\n  };\n            `}</Code>\n            <Box py={1}>\n              <Typography variant=\"caption\">\n                For more API information refer to the library documentation\n              </Typography>\n            </Box>\n          </Widget>\n        </Grid>\n        <Grid item xs={12} md={6} lg={4}>\n          <Widget title=\"Notification Types Examples\" disableWidgetMenu>\n            <Notification\n              className={classes.notificationItem}\n              shadowless\n              type=\"message\"\n              message=\"Thanks for Checking out Messenger\"\n              variant=\"contained\"\n              color=\"secondary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              shadowless\n              type=\"feedback\"\n              message=\"New user feedback received\"\n              variant=\"contained\"\n              color=\"primary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              shadowless\n              type=\"customer\"\n              message=\"New customer is registered\"\n              variant=\"contained\"\n              color=\"success\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              shadowless\n              type=\"shipped\"\n              message=\"The order was shipped\"\n              variant=\"contained\"\n              color=\"warning\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              shadowless\n              type=\"delivered\"\n              message=\"The order was delivered\"\n              variant=\"contained\"\n              color=\"primary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              shadowless\n              type=\"defence\"\n              message=\"5 Defence alerts\"\n              variant=\"contained\"\n              color=\"info\"\n            />\n          </Widget>\n        </Grid>\n        <Grid item xs={12} md={6} lg={4}>\n          <Widget title=\"Notification Types Examples\" disableWidgetMenu>\n            <Notification\n              className={classes.notificationItem}\n              type=\"report\"\n              message=\"New report has been received\"\n              color=\"secondary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"feedback\"\n              message=\"New user feedback received\"\n              color=\"primary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"shipped\"\n              message=\"The item was shipped\"\n              color=\"success\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"message\"\n              message=\"The new message from user @nahawaii\"\n              color=\"warning\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"upload\"\n              message=\"Your file is ready to upload\"\n              color=\"primary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"disc\"\n              message=\"The disc is full\"\n              color=\"info\"\n            />\n          </Widget>\n        </Grid>\n        <Grid item xs={12} md={6} lg={4}>\n          <Widget title=\"Notification Types Examples\" disableWidgetMenu>\n            <Notification\n              className={classes.notificationItem}\n              type=\"report\"\n              message=\"New report has been received\"\n              variant=\"rounded\"\n              color=\"secondary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"feedback\"\n              message=\"New user feedback received\"\n              variant=\"rounded\"\n              color=\"primary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"shipped\"\n              message=\"The item was shipped\"\n              variant=\"rounded\"\n              color=\"success\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"message\"\n              message=\"The new message from user @nahawaii\"\n              variant=\"rounded\"\n              color=\"warning\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"upload\"\n              message=\"Your file is ready to upload\"\n              variant=\"rounded\"\n              color=\"primary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"disc\"\n              message=\"The disc is full\"\n              variant=\"rounded\"\n              color=\"info\"\n            />\n          </Widget>\n        </Grid>\n      </Grid>\n    </>\n  );\n\n  // #############################################################\n  function sendNotification(componentProps, options) {\n    return toast(\n      <Notification\n        {...componentProps}\n        className={classes.notificationComponent}\n      />,\n      options\n    );\n  }\n\n  function retryErrorNotification() {\n    var componentProps = {\n      type: \"message\",\n      message: \"Message was sent successfully!\",\n      variant: \"contained\",\n      color: \"success\"\n    };\n    toast.update(errorToastId, {\n      render: <Notification {...componentProps} />,\n      type: \"success\"\n    });\n    setErrorToastId(null);\n  }\n\n  function handleNotificationCall(notificationType) {\n    var componentProps;\n\n    if (errorToastId && notificationType === \"error\") return;\n\n    switch (notificationType) {\n      case \"info\":\n        componentProps = {\n          type: \"feedback\",\n          message: \"New user feedback received\",\n          variant: \"contained\",\n          color: \"primary\"\n        };\n        break;\n      case \"error\":\n        componentProps = {\n          type: \"message\",\n          message: \"Message was not sent!\",\n          variant: \"contained\",\n          color: \"secondary\",\n          extraButton: \"Resend\",\n          extraButtonClick: retryErrorNotification\n        };\n        break;\n      default:\n        componentProps = {\n          type: \"shipped\",\n          message: \"The item was shipped\",\n          variant: \"contained\",\n          color: \"success\"\n        };\n    }\n\n    var toastId = sendNotification(componentProps, {\n      type: notificationType,\n      position: positions[notificationsPosition],\n      progressClassName: classes.progress,\n      onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\n      className: classes.notification\n    });\n\n    if (notificationType === \"error\") setErrorToastId(toastId);\n  }\n\n  function changeNotificationPosition(positionId) {\n    setNotificationPosition(positionId);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}