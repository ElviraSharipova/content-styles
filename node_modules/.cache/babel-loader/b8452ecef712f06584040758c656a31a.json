{"ast":null,"code":"var _jsxFileName = \"/home/dekor/eqvium/react_material_test/admin-full/src/components/Header/Header.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { AppBar, Toolbar, IconButton, InputBase, Menu, MenuItem, Fab } from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/styles\";\nimport { Menu as MenuIcon, MailOutline as MailIcon, NotificationsNone as NotificationsIcon, Person as AccountIcon, Search as SearchIcon, Send as SendIcon, ArrowBack as ArrowBackIcon } from \"@material-ui/icons\";\nimport classNames from \"classnames\"; //images\n\nimport profile from \"../../images/main-profile.png\";\nimport config from \"../../config\"; // styles\n\nimport useStyles from \"./styles\"; // components\n\nimport { Badge, Typography, Avatar } from \"../Wrappers/Wrappers\";\nimport Notification from \"../Notification/Notification\";\nimport UserAvatar from \"../UserAvatar/UserAvatar\"; // context\n\nimport { useLayoutState, useLayoutDispatch, toggleSidebar } from \"../../context/LayoutContext\";\nimport { useManagementDispatch, useManagementState } from '../../context/ManagementContext';\nimport { actions } from '../../context/ManagementContext';\nimport { useUserDispatch, signOut } from \"../../context/UserContext\";\nconst messages = [{\n  id: 3,\n  variant: \"secondary\",\n  name: \"Liana Dutti\",\n  message: \"Good news from sale department\",\n  time: \"9:09\"\n}];\nconst notifications = [{\n  id: 0,\n  color: \"warning\",\n  message: \"Check out this awesome ticket\"\n}];\nexport default function Header(props) {\n  var classes = useStyles();\n  var theme = useTheme(); // global\n\n  var layoutState = useLayoutState();\n  var layoutDispatch = useLayoutDispatch();\n  var userDispatch = useUserDispatch();\n  const managementDispatch = useManagementDispatch(); // local\n\n  var [mailMenu, setMailMenu] = useState(null);\n  var [isMailsUnread, setIsMailsUnread] = useState(true);\n  var [notificationsMenu, setNotificationsMenu] = useState(null);\n  var [isNotificationsUnread, setIsNotificationsUnread] = useState(true);\n  var [profileMenu, setProfileMenu] = useState(null);\n  var [isSearchOpen, setSearchOpen] = useState(false);\n  const [isSmall, setSmall] = useState(false);\n  const managementValue = useManagementState();\n  useEffect(() => {\n    actions.doFind(sessionStorage.getItem('user_id'))(managementDispatch);\n  }, []);\n  useEffect(function () {\n    window.addEventListener(\"resize\", handleWindowWidthChange);\n    handleWindowWidthChange();\n    return function cleanup() {\n      window.removeEventListener(\"resize\", handleWindowWidthChange);\n    };\n  });\n\n  function handleWindowWidthChange() {\n    var windowWidth = window.innerWidth;\n    var breakpointWidth = theme.breakpoints.values.md;\n    var isSmallScreen = windowWidth < breakpointWidth;\n    setSmall(isSmallScreen);\n  }\n\n  return /*#__PURE__*/React.createElement(AppBar, {\n    position: \"fixed\",\n    className: classes.appBar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    className: classes.toolbar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    weight: \"medium\",\n    className: classes.logotype,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, \"EQVIUM\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.grow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(IconButton, {\n    color: \"black\",\n    \"aria-haspopup\": \"true\",\n    \"aria-controls\": \"mail-menu\",\n    onClick: e => {\n      setNotificationsMenu(e.currentTarget);\n      setIsNotificationsUnread(false);\n    },\n    className: classes.headerMenuButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Badge, {\n    badgeContent: isNotificationsUnread ? notifications.length : null,\n    color: \"warning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(NotificationsIcon, {\n    classes: {\n      root: classes.headerIcon\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(IconButton, {\n    color: \"inherit\",\n    \"aria-haspopup\": \"true\",\n    \"aria-controls\": \"mail-menu\",\n    onClick: e => {\n      setMailMenu(e.currentTarget);\n      setIsMailsUnread(false);\n    },\n    className: classes.headerMenuButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Badge, {\n    badgeContent: isMailsUnread ? messages.length : null,\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MailIcon, {\n    classes: {\n      root: classes.headerIcon\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-haspopup\": \"true\",\n    color: \"inherit\",\n    className: classes.headerMenuButton,\n    \"aria-controls\": \"profile-menu\",\n    onClick: e => setProfileMenu(e.currentTarget),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    alt: \"Robert Cotton\",\n    src: config.isBackend ? managementValue.currentUser && managementValue.currentUser.avatar.length >= 1 && managementValue.currentUser.avatar[managementValue.currentUser.avatar.length - 1].publicUrl || profile : profile,\n    classes: {\n      root: classes.headerIcon\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Menu, {\n    id: \"mail-menu\",\n    open: Boolean(mailMenu),\n    anchorEl: mailMenu,\n    onClose: () => setMailMenu(null),\n    MenuListProps: {\n      className: classes.headerMenuList\n    },\n    className: classes.headerMenu,\n    classes: {\n      paper: classes.profileMenu\n    },\n    disableAutoFocusItem: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.profileMenuUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    weight: \"medium\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  }, \"New Messages\"), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.profileMenuLink,\n    component: \"a\",\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }, messages.length, \" New Messages\")), messages.map(message => /*#__PURE__*/React.createElement(MenuItem, {\n    key: message.id,\n    className: classes.messageNotification,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.messageNotificationSide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(UserAvatar, {\n    color: message.variant,\n    name: message.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    size: \"sm\",\n    color: \"text\",\n    colorBrightness: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 17\n    }\n  }, message.time)), /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(classes.messageNotificationSide, classes.messageNotificationBodySide),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    weight: \"medium\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 17\n    }\n  }, message.name), /*#__PURE__*/React.createElement(Typography, {\n    color: \"text\",\n    colorBrightness: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 17\n    }\n  }, message.message)))), /*#__PURE__*/React.createElement(Fab, {\n    variant: \"extended\",\n    color: \"primary\",\n    \"aria-label\": \"Add\",\n    className: classes.sendMessageButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 11\n    }\n  }, \"Send New Message\", /*#__PURE__*/React.createElement(SendIcon, {\n    className: classes.sendButtonIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Menu, {\n    id: \"notifications-menu\",\n    open: Boolean(notificationsMenu),\n    anchorEl: notificationsMenu,\n    onClose: () => setNotificationsMenu(null),\n    className: classes.headerMenu,\n    disableAutoFocusItem: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 9\n    }\n  }, notifications.map(notification => /*#__PURE__*/React.createElement(MenuItem, {\n    key: notification.id,\n    onClick: () => setNotificationsMenu(null),\n    className: classes.headerMenuItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Notification, Object.assign({}, notification, {\n    typographyVariant: \"inherit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(Menu, {\n    id: \"profile-menu\",\n    open: Boolean(profileMenu),\n    anchorEl: profileMenu,\n    onClose: () => setProfileMenu(null),\n    className: classes.headerMenu,\n    classes: {\n      paper: classes.profileMenu\n    },\n    disableAutoFocusItem: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.profileMenuUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(MenuItem, {\n    className: classNames(classes.profileMenuItem, classes.headerMenuItem),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(AccountIcon, {\n    className: classes.profileMenuIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 13\n    }\n  }), \" Profile\"), /*#__PURE__*/React.createElement(MenuItem, {\n    className: classNames(classes.profileMenuItem, classes.headerMenuItem),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(AccountIcon, {\n    className: classes.profileMenuIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 13\n    }\n  }), \" Tasks\"), /*#__PURE__*/React.createElement(MenuItem, {\n    className: classNames(classes.profileMenuItem, classes.headerMenuItem),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(AccountIcon, {\n    className: classes.profileMenuIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 13\n    }\n  }), \" Messages\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.profileMenuUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.profileMenuLink,\n    color: \"primary\",\n    onClick: () => signOut(userDispatch, props.history),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 13\n    }\n  }, \"Sign Out\")))));\n}","map":{"version":3,"sources":["/home/dekor/eqvium/react_material_test/admin-full/src/components/Header/Header.js"],"names":["React","useState","useEffect","AppBar","Toolbar","IconButton","InputBase","Menu","MenuItem","Fab","useTheme","MenuIcon","MailOutline","MailIcon","NotificationsNone","NotificationsIcon","Person","AccountIcon","Search","SearchIcon","Send","SendIcon","ArrowBack","ArrowBackIcon","classNames","profile","config","useStyles","Badge","Typography","Avatar","Notification","UserAvatar","useLayoutState","useLayoutDispatch","toggleSidebar","useManagementDispatch","useManagementState","actions","useUserDispatch","signOut","messages","id","variant","name","message","time","notifications","color","Header","props","classes","theme","layoutState","layoutDispatch","userDispatch","managementDispatch","mailMenu","setMailMenu","isMailsUnread","setIsMailsUnread","notificationsMenu","setNotificationsMenu","isNotificationsUnread","setIsNotificationsUnread","profileMenu","setProfileMenu","isSearchOpen","setSearchOpen","isSmall","setSmall","managementValue","doFind","sessionStorage","getItem","window","addEventListener","handleWindowWidthChange","cleanup","removeEventListener","windowWidth","innerWidth","breakpointWidth","breakpoints","values","md","isSmallScreen","appBar","toolbar","logotype","grow","e","currentTarget","headerMenuButton","length","root","headerIcon","isBackend","currentUser","avatar","publicUrl","Boolean","className","headerMenuList","headerMenu","paper","profileMenuUser","profileMenuLink","map","messageNotification","messageNotificationSide","messageNotificationBodySide","sendMessageButton","sendButtonIcon","notification","headerMenuItem","profileMenuItem","profileMenuIcon","history"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  InputBase,\n  Menu,\n  MenuItem,\n  Fab\n} from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/styles\";\nimport {\n  Menu as MenuIcon,\n  MailOutline as MailIcon,\n  NotificationsNone as NotificationsIcon,\n  Person as AccountIcon,\n  Search as SearchIcon,\n  Send as SendIcon,\n  ArrowBack as ArrowBackIcon\n} from \"@material-ui/icons\";\nimport classNames from \"classnames\";\n\n//images\nimport profile from \"../../images/main-profile.png\";\nimport config from \"../../config\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport { Badge, Typography, Avatar } from \"../Wrappers/Wrappers\";\nimport Notification from \"../Notification/Notification\";\nimport UserAvatar from \"../UserAvatar/UserAvatar\";\n\n// context\nimport {\n  useLayoutState,\n  useLayoutDispatch,\n  toggleSidebar\n} from \"../../context/LayoutContext\";\nimport {\n  useManagementDispatch,\n  useManagementState,\n} from '../../context/ManagementContext'\n\nimport { actions } from '../../context/ManagementContext'\nimport { useUserDispatch, signOut } from \"../../context/UserContext\";\n\nconst messages = [\n  {\n    id: 3,\n    variant: \"secondary\",\n    name: \"Liana Dutti\",\n    message: \"Good news from sale department\",\n    time: \"9:09\"\n  }\n];\n\nconst notifications = [\n  { id: 0, color: \"warning\", message: \"Check out this awesome ticket\" }\n];\n\nexport default function Header(props) {\n  var classes = useStyles();\n  var theme = useTheme();\n\n  // global\n  var layoutState = useLayoutState();\n  var layoutDispatch = useLayoutDispatch();\n  var userDispatch = useUserDispatch();\n  const managementDispatch = useManagementDispatch();\n\n  // local\n  var [mailMenu, setMailMenu] = useState(null);\n  var [isMailsUnread, setIsMailsUnread] = useState(true);\n  var [notificationsMenu, setNotificationsMenu] = useState(null);\n  var [isNotificationsUnread, setIsNotificationsUnread] = useState(true);\n  var [profileMenu, setProfileMenu] = useState(null);\n  var [isSearchOpen, setSearchOpen] = useState(false);\n  const [isSmall, setSmall] = useState(false);\n\n  const managementValue = useManagementState()\n\n  useEffect(() => {\n    actions.doFind(sessionStorage.getItem('user_id'))(managementDispatch)\n  }, [])\n\n  useEffect(function() {\n    window.addEventListener(\"resize\", handleWindowWidthChange);\n    handleWindowWidthChange();\n    return function cleanup() {\n      window.removeEventListener(\"resize\", handleWindowWidthChange);\n    };\n  });\n\n  function handleWindowWidthChange() {\n    var windowWidth = window.innerWidth;\n    var breakpointWidth = theme.breakpoints.values.md;\n    var isSmallScreen = windowWidth < breakpointWidth;\n    setSmall(isSmallScreen);\n  }\n\n  return (\n    <AppBar position=\"fixed\" className={classes.appBar}>\n      <Toolbar className={classes.toolbar}>\n        <Typography variant=\"h6\" weight=\"medium\" className={classes.logotype}>\n          EQVIUM\n        </Typography>\n        <div className={classes.grow} />\n        <IconButton\n          color=\"black\"\n          aria-haspopup=\"true\"\n          aria-controls=\"mail-menu\"\n          onClick={e => {\n            setNotificationsMenu(e.currentTarget);\n            setIsNotificationsUnread(false);\n          }}\n          className={classes.headerMenuButton}\n        >\n          <Badge\n            badgeContent={isNotificationsUnread ? notifications.length : null}\n            color=\"warning\"\n          >\n            <NotificationsIcon classes={{ root: classes.headerIcon }} />\n          </Badge>\n        </IconButton>\n        <IconButton\n          color=\"inherit\"\n          aria-haspopup=\"true\"\n          aria-controls=\"mail-menu\"\n          onClick={e => {\n            setMailMenu(e.currentTarget);\n            setIsMailsUnread(false);\n          }}\n          className={classes.headerMenuButton}\n        >\n          <Badge\n            badgeContent={isMailsUnread ? messages.length : null}\n            color=\"secondary\"\n          >\n            <MailIcon classes={{ root: classes.headerIcon }} />\n          </Badge>\n        </IconButton>\n        <IconButton\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n          className={classes.headerMenuButton}\n          aria-controls=\"profile-menu\"\n          onClick={e => setProfileMenu(e.currentTarget)}\n        >\n          <Avatar\n            alt=\"Robert Cotton\"\n            src={config.isBackend ? (managementValue.currentUser && managementValue.currentUser.avatar.length >=1 && managementValue.currentUser.avatar[managementValue.currentUser.avatar.length-1].publicUrl || profile) : profile}\n            classes={{ root: classes.headerIcon }}\n          />\n        </IconButton>\n        <Menu\n          id=\"mail-menu\"\n          open={Boolean(mailMenu)}\n          anchorEl={mailMenu}\n          onClose={() => setMailMenu(null)}\n          MenuListProps={{ className: classes.headerMenuList }}\n          className={classes.headerMenu}\n          classes={{ paper: classes.profileMenu }}\n          disableAutoFocusItem\n        >\n          <div className={classes.profileMenuUser}>\n            <Typography variant=\"h4\" weight=\"medium\">\n              New Messages\n            </Typography>\n            <Typography\n              className={classes.profileMenuLink}\n              component=\"a\"\n              color=\"secondary\"\n            >\n              {messages.length} New Messages\n            </Typography>\n          </div>\n          {messages.map(message => (\n            <MenuItem key={message.id} className={classes.messageNotification}>\n              <div className={classes.messageNotificationSide}>\n                <UserAvatar color={message.variant} name={message.name} />\n                <Typography size=\"sm\" color=\"text\" colorBrightness=\"secondary\">\n                  {message.time}\n                </Typography>\n              </div>\n              <div\n                className={classNames(\n                  classes.messageNotificationSide,\n                  classes.messageNotificationBodySide\n                )}\n              >\n                <Typography weight=\"medium\" gutterBottom>\n                  {message.name}\n                </Typography>\n                <Typography color=\"text\" colorBrightness=\"secondary\">\n                  {message.message}\n                </Typography>\n              </div>\n            </MenuItem>\n          ))}\n          <Fab\n            variant=\"extended\"\n            color=\"primary\"\n            aria-label=\"Add\"\n            className={classes.sendMessageButton}\n          >\n            Send New Message\n            <SendIcon className={classes.sendButtonIcon} />\n          </Fab>\n        </Menu>\n        <Menu\n          id=\"notifications-menu\"\n          open={Boolean(notificationsMenu)}\n          anchorEl={notificationsMenu}\n          onClose={() => setNotificationsMenu(null)}\n          className={classes.headerMenu}\n          disableAutoFocusItem\n        >\n          {notifications.map(notification => (\n            <MenuItem\n              key={notification.id}\n              onClick={() => setNotificationsMenu(null)}\n              className={classes.headerMenuItem}\n            >\n              <Notification {...notification} typographyVariant=\"inherit\" />\n            </MenuItem>\n          ))}\n        </Menu>\n        <Menu\n          id=\"profile-menu\"\n          open={Boolean(profileMenu)}\n          anchorEl={profileMenu}\n          onClose={() => setProfileMenu(null)}\n          className={classes.headerMenu}\n          classes={{ paper: classes.profileMenu }}\n          disableAutoFocusItem\n        >\n          <div className={classes.profileMenuUser}>\n          </div>\n          <MenuItem\n            className={classNames(\n              classes.profileMenuItem,\n              classes.headerMenuItem\n            )}\n          >\n            <AccountIcon className={classes.profileMenuIcon} /> Profile\n          </MenuItem>\n          <MenuItem\n            className={classNames(\n              classes.profileMenuItem,\n              classes.headerMenuItem\n            )}\n          >\n            <AccountIcon className={classes.profileMenuIcon} /> Tasks\n          </MenuItem>\n          <MenuItem\n            className={classNames(\n              classes.profileMenuItem,\n              classes.headerMenuItem\n            )}\n          >\n            <AccountIcon className={classes.profileMenuIcon} /> Messages\n          </MenuItem>\n          <div className={classes.profileMenuUser}>\n            <Typography\n              className={classes.profileMenuLink}\n              color=\"primary\"\n              onClick={() => signOut(userDispatch, props.history)}\n            >\n              Sign Out\n            </Typography>\n          </div>\n        </Menu>\n      </Toolbar>\n    </AppBar>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}