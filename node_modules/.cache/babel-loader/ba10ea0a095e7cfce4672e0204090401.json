{"ast":null,"code":"var _jsxFileName = \"/home/dekor/eqvium/react_material_test/admin-full/src/pages/charts/LineCharts.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/styles\";\nimport { Typography, Button } from '../../components/Wrappers';\nimport ReactApexChart from \"react-apexcharts\";\nimport ApexCharts from \"apexcharts\";\nimport ApexLineChart from \"./components/ApexLineChart\"; // components\n\nimport Widget from \"../../components/Widget/Widget\";\nexport default function Charts(props) {\n  //    const pol_series =  [14, 23, 21, 17, 15, 10, 12, 17, 21];\n  var zero_array = new Array(20).fill([0, 0]);\n  const ws = useRef(null); //const [data1, updateData1] = useState([0,0,0,0,0,0,0]);\n\n  const [data1, updateData1] = useState(zero_array);\n  const [data2, updateData2] = useState(zero_array); //const [data2, updateData2] = useState(array);\n  //const [data1, updateData1] = useState([0,0,0]);\n  //const [data2, updateData2] = useState([0,0,0,0,0,0,0]);\n\n  useEffect(() => {\n    ws.current = new WebSocket(\"ws://79.143.25.41:8080/gear\");\n    ws.current.binaryType = 'arraybuffer';\n\n    ws.current.onopen = () => console.log(\"ws opened\");\n\n    ws.current.onclose = () => console.log(\"ws closed\");\n\n    return () => {\n      ws.current.close();\n    };\n  }, []);\n  useEffect(() => {\n    if (!ws.current) return;\n\n    ws.current.onmessage = e => {\n      console.log(JSON.parse(e.data));\n      const message = JSON.parse(e.data); ////if (!isNaN(parseInt(e.data))) {\n      ////  let array1 = [...data1, parseInt(e.data)];\n      //console.log(parseInt(e.data));\n      ////array1.shift();\n      ////updateData1(array1);\n      ////console.log(\"ws recieved: \", data1);\n      ////}\n      //console.log(\"ws recieved: \", message);\n\n      let array1;\n      let array2;\n\n      if (message[\"data\"][\"sensor\"] == \"head\") {\n        array1 = [...data1, [message[\"data\"][\"data\"][0][0], message[\"data\"][\"data\"][0][1]]];\n        array2 = [...data2, [message[\"data\"][\"data\"][0][0], message[\"data\"][\"data\"][0][2]]];\n        array1.shift();\n        array2.shift();\n        updateData1(array1);\n        updateData2(array2);\n      } //const pos = parseInt(message[\"data\"][\"data\"][0][0]);\n      //array.fill(0);\n      //let array2 = [...data1, parseInt(e.data)];\n      //array[pos] = message[\"data\"][\"data\"][0][1];\n      ////  let array1 = [...data1, parseInt(e.data)];\n      //updateData1(array1);\n      ////   console.log(data1);\n\n    };\n  }, [[data1], [data2]]); // local\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Widget, {\n    title: \"Лазер\",\n    noBodyPadding: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ApexLineChart, {\n    data: data1,\n    type: \"line\",\n    height: \"350\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Widget, {\n    title: \"УЗ\",\n    noBodyPadding: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(ApexLineChart, {\n    data: data2,\n    type: \"line\",\n    height: \"350\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 12\n    }\n  }, \"Set Stream\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/home/dekor/eqvium/react_material_test/admin-full/src/pages/charts/LineCharts.js"],"names":["React","useState","useEffect","useRef","Grid","useTheme","Typography","Button","ReactApexChart","ApexCharts","ApexLineChart","Widget","Charts","props","zero_array","Array","fill","ws","data1","updateData1","data2","updateData2","current","WebSocket","binaryType","onopen","console","log","onclose","close","onmessage","e","JSON","parse","data","message","array1","array2","shift"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/styles\";\nimport { Typography, Button } from '../../components/Wrappers'\nimport ReactApexChart from \"react-apexcharts\";\nimport ApexCharts from \"apexcharts\";\nimport ApexLineChart from \"./components/ApexLineChart\";\n\n// components\nimport Widget from \"../../components/Widget/Widget\";\n\n\n\nexport default function Charts(props) {\n\n//    const pol_series =  [14, 23, 21, 17, 15, 10, 12, 17, 21];\n  var zero_array = new Array(20).fill([0,0]);\n\n  const ws = useRef(null);\n  //const [data1, updateData1] = useState([0,0,0,0,0,0,0]);\n  const [data1, updateData1] = useState(zero_array);\n  const [data2, updateData2] = useState(zero_array);\n  //const [data2, updateData2] = useState(array);\n  //const [data1, updateData1] = useState([0,0,0]);\n  //const [data2, updateData2] = useState([0,0,0,0,0,0,0]);\n\n  useEffect(() => {\n        ws.current = new WebSocket(\"ws://79.143.25.41:8080/gear\");\n        ws.current.binaryType = 'arraybuffer';\n        ws.current.onopen = () => console.log(\"ws opened\");\n        ws.current.onclose = () => console.log(\"ws closed\");\n\n        return () => {\n            ws.current.close();\n        };\n    }, []);\n\n    useEffect(() => {\n        if (!ws.current) return;\n\n        ws.current.onmessage = e => {\n            console.log(JSON.parse(e.data));\n            const message = JSON.parse(e.data);\n            ////if (!isNaN(parseInt(e.data))) {\n            ////  let array1 = [...data1, parseInt(e.data)];\n              //console.log(parseInt(e.data));\n              ////array1.shift();\n              ////updateData1(array1);\n              ////console.log(\"ws recieved: \", data1);\n            ////}\n            //console.log(\"ws recieved: \", message);\n            let array1;\n            let array2;\n            if (message[\"data\"][\"sensor\"] == \"head\") {\n              array1 = [...data1, [ message[\"data\"][\"data\"][0][0], message[\"data\"][\"data\"][0][1]]]; \n              array2 = [...data2, [ message[\"data\"][\"data\"][0][0], message[\"data\"][\"data\"][0][2]]]; \n              array1.shift();\n              array2.shift();\n              updateData1(array1);\n              updateData2(array2);\n            }\n            //const pos = parseInt(message[\"data\"][\"data\"][0][0]);\n            //array.fill(0);\n            //let array2 = [...data1, parseInt(e.data)];\n            //array[pos] = message[\"data\"][\"data\"][0][1];\n            ////  let array1 = [...data1, parseInt(e.data)];\n            //updateData1(array1);\n         ////   console.log(data1);\n        };\n    }, [[data1], [data2]]);\n  \n\n  // local\n\n  return (\n    <>\n      <Grid container spacing={4}>\n        <Grid item md={6} xs={6}>\n          <Widget title={\"Лазер\"} noBodyPadding>\n            <ApexLineChart\n              data={data1}\n              type=\"line\"\n              height=\"350\"\n            />\n          </Widget>\n        </Grid>\n        <Grid item md={6} xs={6}>\n           <Widget title={\"УЗ\"} noBodyPadding>\n            <ApexLineChart\n              data={data2}\n              type=\"line\"\n              height=\"350\"\n            />\n          </Widget>\n\n        </Grid>\n        <Grid item md={6} xs={2}>\n           <Button  variant=\"contained\" color=\"secondary\" >Set Stream</Button>\n        </Grid>\n        <Grid item md={6} xs={12}>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\n\n"]},"metadata":{},"sourceType":"module"}