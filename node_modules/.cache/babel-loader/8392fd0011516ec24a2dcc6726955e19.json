{"ast":null,"code":"var _jsxFileName = \"/home/dekor/eqvium/react_material_test/admin-full-v2/src/pages/confirm/Confirm.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Grid, CircularProgress, Tabs, Tab, Fade, TextField as Input } from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\nimport classnames from \"classnames\"; // styles\n\nimport useStyles from \"./styles\"; // logo\n\nimport logo from \"./logo.svg\";\nimport google from \"../../images/google.svg\"; // context\n\nimport { useUserDispatch, loginUser, registerUser, confirmUser, sendPasswordResetEmail } from \"../../context/UserContext\";\nimport { receiveToken, doInit } from \"../../context/UserContext\"; //components\n\nimport { Button, Typography } from \"../../components/Wrappers\";\nimport Widget from \"../../components/Widget\";\nimport config from \"../../config\";\n\nconst getGreeting = () => {\n  return \"Подтвердите регистрацию в Eqvium\";\n};\n\nfunction Confirm(props) {\n  var classes = useStyles(); // global\n\n  var userDispatch = useUserDispatch();\n  useEffect(() => {\n    const params = new URLSearchParams(props.location.search);\n    const token = params.get(\"token\");\n\n    if (token) {\n      receiveToken(token, userDispatch);\n      doInit()(userDispatch);\n    }\n  }, []); // eslint-disable-line\n  // local\n\n  var [isLoading, setIsLoading] = useState(false);\n  var [error, setError] = useState(null);\n  var [activeTabId, setActiveTabId] = useState(0);\n  var [nameValue, setNameValue] = useState(\"\");\n  var [loginValue, setLoginValue] = useState(\"\");\n  var [passwordValue, setPasswordValue] = useState(\"\");\n  var [keyValue, setKeyValue] = useState(\"\");\n  var [forgotEmail, setForgotEmail] = useState(\"\");\n  var [isForgot, setIsForgot] = useState(false);\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: !isForgot ? classes.formContainer : classes.customFormContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, config.isBackend ? /*#__PURE__*/React.createElement(Widget, {\n    disableWidgetMenu: true,\n    inheritHeight: true,\n    style: {\n      marginTop: 32\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    block: true,\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 19\n    }\n  }, \"This is a real app with Node.js backend - use\", /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    weight: \"bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }, \"\\\"admin@flatlogic.com / password\\\"\"), \" \", \"to login!\")) : null, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h2\",\n    className: classes.greeting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }, getGreeting()), /*#__PURE__*/React.createElement(Fade, {\n    in: error,\n    style: !error ? {\n      display: \"none\"\n    } : {\n      display: \"inline-block\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    color: \"secondary\",\n    className: classes.errorMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C \\u0438\\u043B\\u0438 \\u043B\\u043E\\u0433\\u0438\\u043D \\u043D\\u0435\\u0432\\u0435\\u0440\\u043D\\u044B :(\")), /*#__PURE__*/React.createElement(Input, {\n    id: \"email\",\n    InputProps: {\n      classes: {\n        underline: classes.InputUnderline,\n        input: classes.Input\n      }\n    },\n    value: loginValue,\n    onChange: e => setLoginValue(e.target.value),\n    margin: \"normal\",\n    placeholder: \"Email\",\n    type: \"email\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"password\",\n    InputProps: {\n      classes: {\n        underline: classes.InputUnderline,\n        input: classes.Input\n      }\n    },\n    value: passwordValue,\n    onChange: e => setPasswordValue(e.target.value),\n    margin: \"normal\",\n    placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n    type: \"password\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"key\",\n    InputProps: {\n      classes: {\n        underline: classes.InputUnderline,\n        input: classes.Input\n      }\n    },\n    value: keyValue,\n    onChange: e => setKeyValue(e.target.value),\n    margin: \"normal\",\n    placeholder: \"\\u041A\\u043E\\u0434\",\n    type: \"password\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.formButtons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    disabled: loginValue.length === 0 || passwordValue.length === 0 || keyValue.length === 0,\n    onClick: () => {\n      confirmUser(userDispatch, loginValue, passwordValue, keyValue, props.history, setIsLoading, setError)();\n    },\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 19\n    }\n  }, \"\\u0412\\u043E\\u0439\\u0442\\u0438\")))))));\n}\n\nexport default withRouter(Confirm);","map":{"version":3,"sources":["/home/dekor/eqvium/react_material_test/admin-full-v2/src/pages/confirm/Confirm.js"],"names":["React","useState","useEffect","Grid","CircularProgress","Tabs","Tab","Fade","TextField","Input","withRouter","classnames","useStyles","useUserDispatch","loginUser","registerUser","confirmUser","sendPasswordResetEmail","receiveToken","doInit","Button","Typography","Widget","config","getGreeting","Confirm","props","classes","userDispatch","params","URLSearchParams","location","search","token","get","isLoading","setIsLoading","error","setError","activeTabId","setActiveTabId","nameValue","setNameValue","loginValue","setLoginValue","passwordValue","setPasswordValue","keyValue","setKeyValue","forgotEmail","setForgotEmail","isForgot","setIsForgot","container","formContainer","customFormContainer","form","isBackend","marginTop","textAlign","greeting","display","errorMessage","underline","InputUnderline","input","e","target","value","formButtons","length","history"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Grid,\n  CircularProgress,\n  Tabs,\n  Tab,\n  Fade,\n  TextField as Input\n} from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\nimport classnames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// logo\nimport logo from \"./logo.svg\";\nimport google from \"../../images/google.svg\";\n\n// context\nimport { useUserDispatch, loginUser, registerUser, confirmUser, sendPasswordResetEmail } from \"../../context/UserContext\";\nimport { receiveToken, doInit } from \"../../context/UserContext\";\n\n//components\nimport { Button, Typography } from \"../../components/Wrappers\";\nimport Widget from \"../../components/Widget\";\nimport config from \"../../config\";\n\nconst getGreeting = () => {\n    return \"Подтвердите регистрацию в Eqvium\";\n};\n\nfunction Confirm(props) {\n  var classes = useStyles();\n\n  // global\n  var userDispatch = useUserDispatch();\n\n  useEffect(() => {\n    const params = new URLSearchParams(props.location.search);\n    const token = params.get(\"token\");\n    if (token) {\n      receiveToken(token, userDispatch);\n      doInit()(userDispatch);\n    }\n  }, []); // eslint-disable-line\n  \n\n  // local\n  var [isLoading, setIsLoading] = useState(false);\n  var [error, setError] = useState(null);\n  var [activeTabId, setActiveTabId] = useState(0);\n  var [nameValue, setNameValue] = useState(\"\");\n  var [loginValue, setLoginValue] = useState(\"\");\n  var [passwordValue, setPasswordValue] = useState(\"\");\n  var [keyValue, setKeyValue] = useState(\"\");\n  var [forgotEmail, setForgotEmail] = useState(\"\");\n  var [isForgot, setIsForgot] = useState(false);\n\n  return (\n    <Grid container className={classes.container}>\n      <div className={!isForgot ? classes.formContainer : classes.customFormContainer}>\n        <div className={classes.form}>\n            <>\n            <React.Fragment>\n              {config.isBackend ? (\n                <Widget\n                  disableWidgetMenu\n                  inheritHeight\n                  style={{ marginTop: 32 }}\n                >\n                  <Typography\n                    variant={\"body2\"}\n                    block\n                    style={{ textAlign: \"center\" }}\n                  >\n                    This is a real app with Node.js backend - use\n                    <Typography variant={\"body2\"} weight={\"bold\"}>\n                      \"admin@flatlogic.com / password\"\n                    </Typography>{\" \"}\n                    to login!\n                  </Typography>\n                </Widget>\n              ) : null}\n              <Typography variant=\"h2\" className={classes.greeting}>\n                {getGreeting()}\n              </Typography>\n              <Fade\n                in={error}\n                style={\n                  !error ? { display: \"none\" } : { display: \"inline-block\" }\n                }\n              >\n                <Typography color=\"secondary\" className={classes.errorMessage}>\n                  Пароль или логин неверны :(\n                </Typography>\n              </Fade>\n              <Input\n                id=\"email\"\n                InputProps={{\n                  classes: {\n                    underline: classes.InputUnderline,\n                    input: classes.Input\n                  }\n                }}\n                value={loginValue}\n                onChange={e => setLoginValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Email\"\n                type=\"email\"\n                fullWidth\n              />\n              <Input\n                id=\"password\"\n                InputProps={{\n                  classes: {\n                    underline: classes.InputUnderline,\n                    input: classes.Input\n                  }\n                }}\n                value={passwordValue}\n                onChange={e => setPasswordValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Пароль\"\n                type=\"password\"\n                fullWidth\n              />\n              <Input\n                id=\"key\"\n                InputProps={{\n                  classes: {\n                    underline: classes.InputUnderline,\n                    input: classes.Input\n                  }\n                }}\n                value={keyValue}\n                onChange={e => setKeyValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Код\"\n                type=\"password\"\n                fullWidth\n              />\n              <div className={classes.formButtons}>\n                  <Button\n                    disabled={\n                      loginValue.length === 0 || passwordValue.length === 0 || keyValue.length === 0\n                    }\n\n                    onClick={() => {\n                      confirmUser(\n                        userDispatch,\n                        loginValue,\n                        passwordValue,\n                        keyValue,\n                        props.history,\n                        setIsLoading,\n                        setError\n                      )()\n                      }\n                    }\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"large\"\n                  >\n                    Войти\n                  </Button>\n              </div>\n            </React.Fragment>\n          </>\n        </div>\n      </div>\n    </Grid>\n  );\n}\n\nexport default withRouter(Confirm);\n"]},"metadata":{},"sourceType":"module"}