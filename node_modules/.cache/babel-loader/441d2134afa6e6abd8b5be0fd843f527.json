{"ast":null,"code":"var _jsxFileName = \"/home/dekor/eqvium/react_material_test/admin-full/src/context/UserContext.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport jwt from \"jsonwebtoken\";\nimport { toast } from \"react-toastify\";\nimport { mockUser } from \"./mock\";\nimport Cookies from 'js-cookie'; //config\n\nimport config from \"../../src/config\";\nvar UserStateContext = React.createContext();\nvar UserDispatchContext = React.createContext();\n\nfunction userReducer(state, action) {\n  switch (action.type) {\n    case \"LOGIN_SUCCESS\":\n      return { ...state,\n        ...action.payload\n      };\n\n    case \"REGISTER_REQUEST\":\n    case \"RESET_REQUEST\":\n    case \"PASSWORD_RESET_EMAIL_REQUEST\":\n      return { ...state,\n        isFetching: true,\n        errorMessage: ''\n      };\n\n    case \"SIGN_OUT_SUCCESS\":\n      return { ...state\n      };\n\n    case \"AUTH_INIT_ERROR\":\n      return Object.assign({}, state, {\n        currentUser: null,\n        loadingInit: false\n      });\n\n    case \"REGISTER_SUCCESS\":\n    case \"RESET_SUCCESS\":\n    case \"PASSWORD_RESET_EMAIL_SUCCESS\":\n      return Object.assign({}, state, {\n        isFetching: false,\n        errorMessage: ''\n      });\n\n    case 'AUTH_FAILURE':\n      return Object.assign({}, state, {\n        isFetching: false,\n        errorMessage: action.payload\n      });\n\n    default:\n      {\n        throw new Error(`Unhandled action type: ${action.type}`);\n      }\n  }\n}\n\nfunction UserProvider({\n  children\n}) {\n  var [state, dispatch] = React.useReducer(userReducer, {\n    isAuthenticated: () => {\n      const token = localStorage.getItem(\"token\");\n\n      if (config.isBackend && token) {\n        const date = new Date().getTime() / 1000;\n        const data = jwt.decode(token);\n        if (!data) return false;\n        return date < data.exp;\n      } else if (token) {\n        return true;\n      }\n\n      return false;\n    },\n    isFetching: false,\n    errorMessage: '',\n    currentUser: null,\n    loadingInit: true\n  });\n  return /*#__PURE__*/React.createElement(UserStateContext.Provider, {\n    value: state,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(UserDispatchContext.Provider, {\n    value: dispatch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, children));\n}\n\nfunction useUserState() {\n  var context = React.useContext(UserStateContext);\n\n  if (context === undefined) {\n    throw new Error(\"useUserState must be used within a UserProvider\");\n  }\n\n  return context;\n}\n\nfunction useUserDispatch() {\n  var context = React.useContext(UserDispatchContext);\n\n  if (context === undefined) {\n    throw new Error(\"useUserDispatch must be used within a UserProvider\");\n  }\n\n  return context;\n}\n\nexport { UserProvider, useUserState, useUserDispatch, loginUser, signOut }; // ###########################################################\n\nfunction loginUser(dispatch, login, password, history, setIsLoading, setError, social = \"\") {\n  setError(false);\n  setIsLoading(true);\n\n  if (login.length > 0 && password.length > 0) {\n    axios.post(\"/token/\", {\n      \"username\": login,\n      \"password\": password\n    }).then(res => {\n      const token = res.data;\n      setTimeout(() => {\n        setError(null);\n        setIsLoading(false);\n        receiveToken(token, dispatch);\n        doInit()(dispatch);\n      }, 2000);\n    }).catch(() => {\n      setError(true);\n      setIsLoading(false);\n    });\n  } else {\n    dispatch({\n      type: \"LOGIN_FAILURE\"\n    });\n  }\n}\n\nexport function sendPasswordResetEmail(email) {\n  return dispatch => {\n    if (!config.isBackend) {\n      return;\n    } else {\n      dispatch({\n        type: 'PASSWORD_RESET_EMAIL_REQUEST'\n      });\n      axios.post(\"/auth/send-password-reset-email\", {\n        email\n      }).then(res => {\n        dispatch({\n          type: 'PASSWORD_RESET_EMAIL_SUCCESS'\n        });\n        toast.success(\"Email with resetting instructions has been sent\");\n      }).catch(err => {\n        dispatch(authError(err.response.data));\n      });\n    }\n  };\n}\n\nfunction signOut(dispatch, history) {\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"user\");\n  localStorage.removeItem('user_id');\n  document.cookie = \"token=;expires=Thu, 01 Jan 1970 00:00:01 GMT;\";\n  axios.defaults.headers.common[\"Authorization\"] = \"\";\n  dispatch({\n    type: \"SIGN_OUT_SUCCESS\"\n  });\n  history.push(\"/login\");\n}\n\nexport function receiveToken(token, dispatch) {\n  let user; // We check if app runs with backend mode\n\n  if (config.isBackend) {\n    user = jwt.decode(token).user;\n    delete user.id;\n  } else {\n    user = {\n      email: config.auth.email\n    };\n  }\n\n  user = jwt.decode(token.access).user_id;\n  axios.get(\"/profiles/\" + user).then(res => {\n    localStorage.setItem(\"nickname\", res.data.nickname);\n    console.log(res.data.nickname);\n  }).catch(err => console.error(err));\n  delete user.id;\n  localStorage.setItem(\"token\", token);\n  localStorage.setItem(\"user\", JSON.stringify(user));\n  localStorage.setItem(\"theme\", \"default\");\n  axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + token;\n  dispatch({\n    type: \"LOGIN_SUCCESS\"\n  });\n}\n\nasync function findMe() {\n  if (config.isBackend) {\n    const response = await axios.get('/auth/me');\n    return response.data;\n  } else {\n    return mockUser;\n  }\n}\n\nexport function authError(payload) {\n  return {\n    type: 'AUTH_FAILURE',\n    payload\n  };\n}\nexport function doInit() {\n  return async dispatch => {\n    let currentUser = null;\n\n    if (!config.isBackend) {\n      currentUser = mockUser;\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: {\n          currentUser\n        }\n      });\n    } else {\n      try {\n        let token = localStorage.getItem('token');\n\n        if (token) {\n          currentUser = await findMe();\n        }\n\n        sessionStorage.setItem('user_id', currentUser.id);\n        dispatch({\n          type: 'LOGIN_SUCCESS',\n          payload: {\n            currentUser\n          }\n        });\n      } catch (error) {\n        console.log(error);\n        dispatch({\n          type: 'AUTH_INIT_ERROR',\n          payload: error\n        });\n      }\n    }\n  };\n}\nexport function registerUser(dispatch, login, history, setIsLoading, setError, social = \"\") {\n  return () => {\n    dispatch({\n      type: 'REGISTER_REQUEST'\n    });\n\n    if (login.length > 0) {\n      //        console.log(login, password);\n      //        axios.defaults.xsrfCookieName = 'csrftoken';\n      //       axios.defaults.headers.xsrfHeaderName = \"X-CSRFTOKEN\"; \n      axios.defaults.headers['X-CSRFTOKEN'] = Cookies.get('csrftoken');\n      axios.post(\"/register/email/\", {\n        email: login\n      }).then(res => {\n        console.log(res.data.key);\n        dispatch({\n          type: 'REGISTER_SUCCESS'\n        });\n        toast.success(\"You've been registered successfully. Please check your email for verification link\");\n        history.push('/confirm');\n      }).catch(err => {//console.log(err.response.data); \n        //dispatch(authError(err.response.data));\n      });\n    } else {\n      dispatch(authError('Something was wrong. Try again'));\n    }\n  };\n}\nexport function verifyEmail(token, history) {\n  return dispatch => {\n    if (!config.isBackend) {\n      history.push('/login');\n    } else {\n      axios.put(\"/auth/verify-email\", {\n        token\n      }).then(verified => {\n        if (verified) {\n          toast.success(\"Your email was verified\");\n        }\n      }).catch(err => {\n        toast.error(err.response.data);\n      }).finally(() => {\n        history.push('/login');\n      });\n    }\n  };\n}\nexport function resetPassword(token, password, history) {\n  return dispatch => {\n    if (!config.isBackend) {\n      history.push('/login');\n    } else {\n      dispatch({\n        type: 'RESET_REQUEST'\n      });\n      axios.put(\"/auth/password-reset\", {\n        token,\n        password\n      }).then(res => {\n        dispatch({\n          type: 'RESET_SUCCESS'\n        });\n        toast.success(\"Password has been updated\");\n        history.push('/login');\n      }).catch(err => {\n        dispatch(authError(err.response.data));\n      });\n    }\n  };\n}","map":{"version":3,"sources":["/home/dekor/eqvium/react_material_test/admin-full/src/context/UserContext.js"],"names":["React","axios","jwt","toast","mockUser","Cookies","config","UserStateContext","createContext","UserDispatchContext","userReducer","state","action","type","payload","isFetching","errorMessage","Object","assign","currentUser","loadingInit","Error","UserProvider","children","dispatch","useReducer","isAuthenticated","token","localStorage","getItem","isBackend","date","Date","getTime","data","decode","exp","useUserState","context","useContext","undefined","useUserDispatch","loginUser","signOut","login","password","history","setIsLoading","setError","social","length","post","then","res","setTimeout","receiveToken","doInit","catch","sendPasswordResetEmail","email","success","err","authError","response","removeItem","document","cookie","defaults","headers","common","push","user","id","auth","access","user_id","get","setItem","nickname","console","log","error","JSON","stringify","findMe","sessionStorage","registerUser","key","verifyEmail","put","verified","finally","resetPassword"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport jwt from \"jsonwebtoken\";\nimport { toast } from \"react-toastify\";\nimport { mockUser } from \"./mock\";\n\nimport Cookies from 'js-cookie';\n\n//config\nimport config from \"../../src/config\";\n\nvar UserStateContext = React.createContext();\nvar UserDispatchContext = React.createContext();\n\nfunction userReducer(state, action) {\n  switch (action.type) {\n    case \"LOGIN_SUCCESS\":\n      return {\n        ...state,\n        ...action.payload\n      };\n    case \"REGISTER_REQUEST\":\n    case \"RESET_REQUEST\":\n    case \"PASSWORD_RESET_EMAIL_REQUEST\":\n      return {\n        ...state,\n        isFetching: true,\n        errorMessage: '',\n      };\n    case \"SIGN_OUT_SUCCESS\":\n      return { ...state };\n    case \"AUTH_INIT_ERROR\":\n      return Object.assign({}, state, {\n          currentUser: null,\n          loadingInit: false,\n      });\n    case \"REGISTER_SUCCESS\":\n    case \"RESET_SUCCESS\":\n    case \"PASSWORD_RESET_EMAIL_SUCCESS\":\n      return Object.assign({}, state, {\n          isFetching: false,\n          errorMessage: '',\n      });\n    case 'AUTH_FAILURE':\n      return Object.assign({}, state, {\n          isFetching: false,\n          errorMessage: action.payload,\n      });\n    default: {\n      throw new Error(`Unhandled action type: ${action.type}`);\n    }\n  }\n}\n\nfunction UserProvider({ children }) {\n  var [state, dispatch] = React.useReducer(userReducer, {\n    isAuthenticated: () => {\n      const token = localStorage.getItem(\"token\")\n      if (config.isBackend && token) {\n        const date = new Date().getTime() / 1000;\n        const data = jwt.decode(token);\n        if (!data) return false;\n        return date < data.exp;\n      } else if (token) {\n        return true\n      }\n      return false;\n    },\n    isFetching: false,\n    errorMessage: '',\n    currentUser: null,\n    loadingInit: true,\n  });\n\n  return (\n    <UserStateContext.Provider value={state}>\n      <UserDispatchContext.Provider value={dispatch}>\n        {children}\n      </UserDispatchContext.Provider>\n    </UserStateContext.Provider>\n  );\n}\n\nfunction useUserState() {\n  var context = React.useContext(UserStateContext);\n  if (context === undefined) {\n    throw new Error(\"useUserState must be used within a UserProvider\");\n  }\n  return context;\n}\n\nfunction useUserDispatch() {\n  var context = React.useContext(UserDispatchContext);\n  if (context === undefined) {\n    throw new Error(\"useUserDispatch must be used within a UserProvider\");\n  }\n  return context;\n}\n\nexport { UserProvider, useUserState, useUserDispatch, loginUser, signOut };\n\n// ###########################################################\n\nfunction loginUser(\n  dispatch,\n  login,\n  password,\n  history,\n  setIsLoading,\n  setError,\n  social = \"\"\n) {\n  setError(false);\n  setIsLoading(true);\n    if (login.length > 0 && password.length > 0) {\n      axios\n        .post(\"/token/\", { \"username\": login, \"password\" : password })\n        .then(res => {\n          const token = res.data;\n          setTimeout(() => {\n            setError(null);\n            setIsLoading(false);\n            receiveToken(token, dispatch);\n            doInit()(dispatch);\n          }, 2000);\n        })\n        .catch(() => {\n          setError(true);\n          setIsLoading(false);\n        });\n    } else {\n      dispatch({ type: \"LOGIN_FAILURE\" });\n    }\n}\n\nexport function sendPasswordResetEmail(email) {\n  return (dispatch) => {\n    if (!config.isBackend) {\n      return\n    } else {\n      dispatch({\n        type: 'PASSWORD_RESET_EMAIL_REQUEST',\n      });\n      axios.post(\"/auth/send-password-reset-email\", {email}).then(res => {\n        dispatch({\n          type: 'PASSWORD_RESET_EMAIL_SUCCESS',\n        });\n        toast.success(\"Email with resetting instructions has been sent\");\n      }).catch(err => {\n        dispatch(authError(err.response.data));\n      })\n    }\n  }\n}\n\nfunction signOut(dispatch, history) {\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"user\");\n  localStorage.removeItem('user_id');\n  document.cookie = \"token=;expires=Thu, 01 Jan 1970 00:00:01 GMT;\";\n  axios.defaults.headers.common[\"Authorization\"] = \"\";\n  dispatch({ type: \"SIGN_OUT_SUCCESS\" });\n  history.push(\"/login\");\n}\n\nexport function receiveToken(token, dispatch) {\n  let user;\n  // We check if app runs with backend mode\n  if (config.isBackend) {\n    user = jwt.decode(token).user;\n    delete user.id;\n  } else {\n    user = {\n      email: config.auth.email\n    };\n  }\n  \n  user = jwt.decode(token.access).user_id;\n  axios.get(\"/profiles/\"+user).then(res => { localStorage.setItem(\"nickname\", res.data.nickname); console.log(res.data.nickname) }).catch(err => console.error(err));\n \n\n  delete user.id;\n\n  \n \n\n  localStorage.setItem(\"token\", token);\n  localStorage.setItem(\"user\", JSON.stringify(user));\n  localStorage.setItem(\"theme\", \"default\");\n  axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + token;\n  dispatch({ type: \"LOGIN_SUCCESS\" });\n}\n\nasync function findMe() {\n  if (config.isBackend) {\n    const response = await axios.get('/auth/me');\n    return response.data;    \n  } else {\n    return mockUser;\n  }\n}\n\nexport function authError(payload) {\n  return {\n    type: 'AUTH_FAILURE',\n    payload,\n  };\n}\n\nexport function doInit() {\n  return async (dispatch) => {\n    let currentUser = null;\n    if (!config.isBackend) {\n      currentUser = mockUser;\n      \n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: {\n          currentUser,\n        },\n      });\n    } else {\n      try {\n        let token = localStorage.getItem('token');\n        if (token) {\n          currentUser = await findMe();\n        }\n        sessionStorage.setItem('user_id', currentUser.id);\n        dispatch({\n          type: 'LOGIN_SUCCESS',\n          payload: {\n            currentUser,\n          },\n        });\n      } catch (error) {\n        console.log(error);\n\n        dispatch({\n          type: 'AUTH_INIT_ERROR',\n          payload: error,\n        });\n      }\n    }\n  }\n}\n\nexport function registerUser(\n  dispatch,\n  login,\n  history,\n  setIsLoading,\n  setError,\n  social = \"\"\n) {\n  return () => {\n      dispatch({\n        type: 'REGISTER_REQUEST',\n      });\n      if (login.length > 0) {\n//        console.log(login, password);\n//        axios.defaults.xsrfCookieName = 'csrftoken';\n//       axios.defaults.headers.xsrfHeaderName = \"X-CSRFTOKEN\"; \n        axios.defaults.headers['X-CSRFTOKEN'] = Cookies.get('csrftoken');\n        axios.post(\"/register/email/\", {email: login}).then(res => {\n          console.log(res.data.key);\n          dispatch({\n            type: 'REGISTER_SUCCESS'\n          });\n          toast.success(\"You've been registered successfully. Please check your email for verification link\");\n          history.push('/confirm');\n        }).catch(err => {\n          //console.log(err.response.data); \n          //dispatch(authError(err.response.data));\n        })\n  \n      } else {\n        dispatch(authError('Something was wrong. Try again'));\n      }\n  };\n}\n\nexport function verifyEmail(token, history) {\n  return(dispatch) => {\n    if (!config.isBackend) {\n      history.push('/login');\n    } else {\n      axios.put(\"/auth/verify-email\", {token}).then(verified => {\n        if (verified) {\n          toast.success(\"Your email was verified\");\n        }\n      }).catch(err => {\n        toast.error(err.response.data);\n      }).finally(() => {\n        history.push('/login');\n      })\n    }\n  }\n}\n\nexport function resetPassword(token, password, history) {\n  return (dispatch) => {\n    if (!config.isBackend) {\n      history.push('/login');\n    } else {\n      dispatch({\n        type: 'RESET_REQUEST',\n      });\n      axios.put(\"/auth/password-reset\", {token, password}).then(res => {\n          dispatch({\n            type: 'RESET_SUCCESS',\n          });\n          toast.success(\"Password has been updated\");\n        history.push('/login');\n      }).catch(err => {\n        dispatch(authError(err.response.data));\n      })\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}