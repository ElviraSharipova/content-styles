{"ast":null,"code":"import _defineProperty from\"/home/dekor/eqvium/react_material_test/admin-full/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _slicedToArray from\"/home/dekor/eqvium/react_material_test/admin-full/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{Grid,Box}from\"@material-ui/core\";import{toast}from\"react-toastify\";import classnames from\"classnames\";// styles\nimport\"react-toastify/dist/ReactToastify.css\";import useStyles from\"./styles\";// components\nimport Widget from\"../../components/Widget\";import Notification from\"../../components/Notification\";import Code from\"../../components/Code\";import{Typography,Button}from\"../../components/Wrappers\";var positions=[toast.POSITION.TOP_LEFT,toast.POSITION.TOP_CENTER,toast.POSITION.TOP_RIGHT,toast.POSITION.BOTTOM_LEFT,toast.POSITION.BOTTOM_CENTER,toast.POSITION.BOTTOM_RIGHT];export default function NotificationsPage(props){var classes=useStyles();// local\nvar _useState=useState(2),_useState2=_slicedToArray(_useState,2),notificationsPosition=_useState2[0],setNotificationPosition=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),errorToastId=_useState4[0],setErrorToastId=_useState4[1];return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Grid,{container:true,spacing:3},/*#__PURE__*/React.createElement(Grid,{item:true,xs:12,md:6,lg:4},/*#__PURE__*/React.createElement(Widget,{title:\"Layout Options\",disableWidgetMenu:true},/*#__PURE__*/React.createElement(Typography,null,\"There are few position options available for notifications. You can click any of them to change notifications position:\"),/*#__PURE__*/React.createElement(\"div\",{className:classes.layoutContainer},/*#__PURE__*/React.createElement(\"div\",{className:classes.layoutButtonsRow},/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return changeNotificationPosition(0);},className:classnames(classes.layoutButton,_defineProperty({},classes.layoutButtonActive,notificationsPosition===0))}),/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return changeNotificationPosition(1);},className:classnames(classes.layoutButton,_defineProperty({},classes.layoutButtonActive,notificationsPosition===1))}),/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return changeNotificationPosition(2);},className:classnames(classes.layoutButton,_defineProperty({},classes.layoutButtonActive,notificationsPosition===2))})),/*#__PURE__*/React.createElement(Typography,{className:classes.layoutText,size:\"md\"},\"Click any position\"),/*#__PURE__*/React.createElement(\"div\",{className:classes.layoutButtonsRow},/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return changeNotificationPosition(3);},className:classnames(classes.layoutButton,_defineProperty({},classes.layoutButtonActive,notificationsPosition===3))}),/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return changeNotificationPosition(4);},className:classnames(classes.layoutButton,_defineProperty({},classes.layoutButtonActive,notificationsPosition===4))}),/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return changeNotificationPosition(5);},className:classnames(classes.layoutButton,_defineProperty({},classes.layoutButtonActive,notificationsPosition===5))}))))),/*#__PURE__*/React.createElement(Grid,{item:true,xs:12,md:6,lg:4},/*#__PURE__*/React.createElement(Widget,{title:\"Notifications Types\",disableWidgetMenu:true},/*#__PURE__*/React.createElement(Typography,null,\"Different types of notifications for lost of use cases. Custom classes are also supported.\"),/*#__PURE__*/React.createElement(\"div\",{className:classes.buttonsContainer},/*#__PURE__*/React.createElement(Button,{variant:\"contained\",color:\"primary\",onClick:function onClick(){return handleNotificationCall(\"info\");},className:classnames(classes.notificationCallButton)},\"Info Message\"),/*#__PURE__*/React.createElement(Button,{variant:\"contained\",color:\"secondary\",onClick:function onClick(){return handleNotificationCall(\"error\");},className:classnames(classes.notificationCallButton)},\"Error + Retry Message\"),/*#__PURE__*/React.createElement(Button,{variant:\"contained\",color:\"success\",onClick:function onClick(){return handleNotificationCall(\"success\");},className:classnames(classes.notificationCallButton)},\"Success Message\")))),/*#__PURE__*/React.createElement(Grid,{item:true,xs:12,md:6,lg:4},/*#__PURE__*/React.createElement(Widget,{title:\"Usage\",disableWidgetMenu:true},/*#__PURE__*/React.createElement(Typography,null,\"Notifications are created with the help of\",\" \",/*#__PURE__*/React.createElement(\"a\",{href:\"https://github.com/fkhadra/react-toastify\"},\"react-toastify\")),/*#__PURE__*/React.createElement(Code,null,\"\\n  // import needed components, functions and styles\\n  import { ToastContainer, toast } from 'react-toastify';\\n  import 'react-toastify/dist/ReactToastify.css';\\n\\n  const Page = () => {\\n    <div>\\n      <ToastContainer />\\n      <button onClick={() => toast('Toast Message')}>\\n        show notification\\n      </button>\\n    </div>\\n  };\\n            \"),/*#__PURE__*/React.createElement(Box,{py:1},/*#__PURE__*/React.createElement(Typography,{variant:\"caption\"},\"For more API information refer to the library documentation\")))),/*#__PURE__*/React.createElement(Grid,{item:true,xs:12,md:6,lg:4},/*#__PURE__*/React.createElement(Widget,{title:\"Notification Types Examples\",disableWidgetMenu:true},/*#__PURE__*/React.createElement(Notification,{className:classes.notificationItem,shadowless:true,type:\"message\",message:\"Thanks for Checking out Messenger\",variant:\"contained\",color:\"secondary\"}),/*#__PURE__*/React.createElement(Notification,{className:classes.notificationItem,shadowless:true,type:\"feedback\",message:\"New user feedback received\",variant:\"contained\",color:\"primary\"}),/*#__PURE__*/React.createElement(Notification,{className:classes.notificationItem,shadowless:true,type:\"customer\",message:\"New customer is registered\",variant:\"contained\",color:\"success\"}),/*#__PURE__*/React.createElement(Notification,{className:classes.notificationItem,shadowless:true,type:\"shipped\",message:\"The order was shipped\",variant:\"contained\",color:\"warning\"}),/*#__PURE__*/React.createElement(Notification,{className:classes.notificationItem,shadowless:true,type:\"delivered\",message:\"The order was delivered\",variant:\"contained\",color:\"primary\"}),/*#__PURE__*/React.createElement(Notification,{className:classes.notificationItem,shadowless:true,type:\"defence\",message:\"5 Defence alerts\",variant:\"contained\",color:\"info\"}))),/*#__PURE__*/React.createElement(Grid,{item:true,xs:12,md:6,lg:4},/*#__PURE__*/React.createElement(Widget,{title:\"Notification Types Examples\",disableWidgetMenu:true},/*#__PURE__*/React.createElement(Notification,{className:classes.notificationItem,type:\"report\",message:\"New report has been received\",color:\"secondary\"}),/*#__PURE__*/React.createElement(Notification,{className:classes.notificationItem,type:\"feedback\",message:\"New user feedback received\",color:\"primary\"}),/*#__PURE__*/React.createElement(Notification,{className:classes.notificationItem,type:\"shipped\",message:\"The item was shipped\",color:\"success\"}),/*#__PURE__*/React.createElement(Notification,{className:classes.notificationItem,type:\"message\",message:\"The new message from user @nahawaii\",color:\"warning\"}),/*#__PURE__*/React.createElement(Notification,{className:classes.notificationItem,type:\"upload\",message:\"Your file is ready to upload\",color:\"primary\"}),/*#__PURE__*/React.createElement(Notification,{className:classes.notificationItem,type:\"disc\",message:\"The disc is full\",color:\"info\"}))),/*#__PURE__*/React.createElement(Grid,{item:true,xs:12,md:6,lg:4},/*#__PURE__*/React.createElement(Widget,{title:\"Notification Types Examples\",disableWidgetMenu:true},/*#__PURE__*/React.createElement(Notification,{className:classes.notificationItem,type:\"report\",message:\"New report has been received\",variant:\"rounded\",color:\"secondary\"}),/*#__PURE__*/React.createElement(Notification,{className:classes.notificationItem,type:\"feedback\",message:\"New user feedback received\",variant:\"rounded\",color:\"primary\"}),/*#__PURE__*/React.createElement(Notification,{className:classes.notificationItem,type:\"shipped\",message:\"The item was shipped\",variant:\"rounded\",color:\"success\"}),/*#__PURE__*/React.createElement(Notification,{className:classes.notificationItem,type:\"message\",message:\"The new message from user @nahawaii\",variant:\"rounded\",color:\"warning\"}),/*#__PURE__*/React.createElement(Notification,{className:classes.notificationItem,type:\"upload\",message:\"Your file is ready to upload\",variant:\"rounded\",color:\"primary\"}),/*#__PURE__*/React.createElement(Notification,{className:classes.notificationItem,type:\"disc\",message:\"The disc is full\",variant:\"rounded\",color:\"info\"})))));// #############################################################\nfunction sendNotification(componentProps,options){return toast(/*#__PURE__*/React.createElement(Notification,Object.assign({},componentProps,{className:classes.notificationComponent})),options);}function retryErrorNotification(){var componentProps={type:\"message\",message:\"Message was sent successfully!\",variant:\"contained\",color:\"success\"};toast.update(errorToastId,{render:/*#__PURE__*/React.createElement(Notification,componentProps),type:\"success\"});setErrorToastId(null);}function handleNotificationCall(notificationType){var componentProps;if(errorToastId&&notificationType===\"error\")return;switch(notificationType){case\"info\":componentProps={type:\"feedback\",message:\"New user feedback received\",variant:\"contained\",color:\"primary\"};break;case\"error\":componentProps={type:\"message\",message:\"Message was not sent!\",variant:\"contained\",color:\"secondary\",extraButton:\"Resend\",extraButtonClick:retryErrorNotification};break;default:componentProps={type:\"shipped\",message:\"The item was shipped\",variant:\"contained\",color:\"success\"};}var toastId=sendNotification(componentProps,{type:notificationType,position:positions[notificationsPosition],progressClassName:classes.progress,onClose:notificationType===\"error\"&&function(){return setErrorToastId(null);},className:classes.notification});if(notificationType===\"error\")setErrorToastId(toastId);}function changeNotificationPosition(positionId){setNotificationPosition(positionId);}}","map":{"version":3,"sources":["/home/dekor/eqvium/react_material_test/admin-full/src/pages/notifications/Notifications.js"],"names":["React","useState","Grid","Box","toast","classnames","useStyles","Widget","Notification","Code","Typography","Button","positions","POSITION","TOP_LEFT","TOP_CENTER","TOP_RIGHT","BOTTOM_LEFT","BOTTOM_CENTER","BOTTOM_RIGHT","NotificationsPage","props","classes","notificationsPosition","setNotificationPosition","errorToastId","setErrorToastId","layoutContainer","layoutButtonsRow","changeNotificationPosition","layoutButton","layoutButtonActive","layoutText","buttonsContainer","handleNotificationCall","notificationCallButton","notificationItem","sendNotification","componentProps","options","notificationComponent","retryErrorNotification","type","message","variant","color","update","render","notificationType","extraButton","extraButtonClick","toastId","position","progressClassName","progress","onClose","className","notification","positionId"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Grid, Box } from \"@material-ui/core\";\nimport { toast } from \"react-toastify\";\nimport classnames from \"classnames\";\n\n// styles\nimport \"react-toastify/dist/ReactToastify.css\";\nimport useStyles from \"./styles\";\n\n// components\nimport Widget from \"../../components/Widget\";\nimport Notification from \"../../components/Notification\";\nimport Code from \"../../components/Code\";\nimport { Typography, Button } from \"../../components/Wrappers\";\n\nconst positions = [\n  toast.POSITION.TOP_LEFT,\n  toast.POSITION.TOP_CENTER,\n  toast.POSITION.TOP_RIGHT,\n  toast.POSITION.BOTTOM_LEFT,\n  toast.POSITION.BOTTOM_CENTER,\n  toast.POSITION.BOTTOM_RIGHT\n];\n\nexport default function NotificationsPage(props) {\n  var classes = useStyles();\n\n  // local\n  var [notificationsPosition, setNotificationPosition] = useState(2);\n  var [errorToastId, setErrorToastId] = useState(null);\n\n  return (\n    <>\n      <Grid container spacing={3}>\n        <Grid item xs={12} md={6} lg={4}>\n          <Widget title=\"Layout Options\" disableWidgetMenu>\n            <Typography>\n              There are few position options available for notifications. You\n              can click any of them to change notifications position:\n            </Typography>\n            <div className={classes.layoutContainer}>\n              <div className={classes.layoutButtonsRow}>\n                <button\n                  onClick={() => changeNotificationPosition(0)}\n                  className={classnames(classes.layoutButton, {\n                    [classes.layoutButtonActive]: notificationsPosition === 0\n                  })}\n                />\n                <button\n                  onClick={() => changeNotificationPosition(1)}\n                  className={classnames(classes.layoutButton, {\n                    [classes.layoutButtonActive]: notificationsPosition === 1\n                  })}\n                />\n                <button\n                  onClick={() => changeNotificationPosition(2)}\n                  className={classnames(classes.layoutButton, {\n                    [classes.layoutButtonActive]: notificationsPosition === 2\n                  })}\n                />\n              </div>\n              <Typography className={classes.layoutText} size=\"md\">\n                Click any position\n              </Typography>\n              <div className={classes.layoutButtonsRow}>\n                <button\n                  onClick={() => changeNotificationPosition(3)}\n                  className={classnames(classes.layoutButton, {\n                    [classes.layoutButtonActive]: notificationsPosition === 3\n                  })}\n                />\n                <button\n                  onClick={() => changeNotificationPosition(4)}\n                  className={classnames(classes.layoutButton, {\n                    [classes.layoutButtonActive]: notificationsPosition === 4\n                  })}\n                />\n                <button\n                  onClick={() => changeNotificationPosition(5)}\n                  className={classnames(classes.layoutButton, {\n                    [classes.layoutButtonActive]: notificationsPosition === 5\n                  })}\n                />\n              </div>\n            </div>\n          </Widget>\n        </Grid>\n        <Grid item xs={12} md={6} lg={4}>\n          <Widget title=\"Notifications Types\" disableWidgetMenu>\n            <Typography>\n              Different types of notifications for lost of use cases. Custom\n              classes are also supported.\n            </Typography>\n            <div className={classes.buttonsContainer}>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => handleNotificationCall(\"info\")}\n                className={classnames(classes.notificationCallButton)}\n              >\n                Info Message\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                onClick={() => handleNotificationCall(\"error\")}\n                className={classnames(classes.notificationCallButton)}\n              >\n                Error + Retry Message\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"success\"\n                onClick={() => handleNotificationCall(\"success\")}\n                className={classnames(classes.notificationCallButton)}\n              >\n                Success Message\n              </Button>\n            </div>\n          </Widget>\n        </Grid>\n        <Grid item xs={12} md={6} lg={4}>\n          <Widget title=\"Usage\" disableWidgetMenu>\n            <Typography>\n              Notifications are created with the help of{\" \"}\n              <a href=\"https://github.com/fkhadra/react-toastify\">\n                react-toastify\n              </a>\n            </Typography>\n            <Code>{`\n  // import needed components, functions and styles\n  import { ToastContainer, toast } from 'react-toastify';\n  import 'react-toastify/dist/ReactToastify.css';\n\n  const Page = () => {\n    <div>\n      <ToastContainer />\n      <button onClick={() => toast('Toast Message')}>\n        show notification\n      </button>\n    </div>\n  };\n            `}</Code>\n            <Box py={1}>\n              <Typography variant=\"caption\">\n                For more API information refer to the library documentation\n              </Typography>\n            </Box>\n          </Widget>\n        </Grid>\n        <Grid item xs={12} md={6} lg={4}>\n          <Widget title=\"Notification Types Examples\" disableWidgetMenu>\n            <Notification\n              className={classes.notificationItem}\n              shadowless\n              type=\"message\"\n              message=\"Thanks for Checking out Messenger\"\n              variant=\"contained\"\n              color=\"secondary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              shadowless\n              type=\"feedback\"\n              message=\"New user feedback received\"\n              variant=\"contained\"\n              color=\"primary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              shadowless\n              type=\"customer\"\n              message=\"New customer is registered\"\n              variant=\"contained\"\n              color=\"success\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              shadowless\n              type=\"shipped\"\n              message=\"The order was shipped\"\n              variant=\"contained\"\n              color=\"warning\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              shadowless\n              type=\"delivered\"\n              message=\"The order was delivered\"\n              variant=\"contained\"\n              color=\"primary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              shadowless\n              type=\"defence\"\n              message=\"5 Defence alerts\"\n              variant=\"contained\"\n              color=\"info\"\n            />\n          </Widget>\n        </Grid>\n        <Grid item xs={12} md={6} lg={4}>\n          <Widget title=\"Notification Types Examples\" disableWidgetMenu>\n            <Notification\n              className={classes.notificationItem}\n              type=\"report\"\n              message=\"New report has been received\"\n              color=\"secondary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"feedback\"\n              message=\"New user feedback received\"\n              color=\"primary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"shipped\"\n              message=\"The item was shipped\"\n              color=\"success\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"message\"\n              message=\"The new message from user @nahawaii\"\n              color=\"warning\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"upload\"\n              message=\"Your file is ready to upload\"\n              color=\"primary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"disc\"\n              message=\"The disc is full\"\n              color=\"info\"\n            />\n          </Widget>\n        </Grid>\n        <Grid item xs={12} md={6} lg={4}>\n          <Widget title=\"Notification Types Examples\" disableWidgetMenu>\n            <Notification\n              className={classes.notificationItem}\n              type=\"report\"\n              message=\"New report has been received\"\n              variant=\"rounded\"\n              color=\"secondary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"feedback\"\n              message=\"New user feedback received\"\n              variant=\"rounded\"\n              color=\"primary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"shipped\"\n              message=\"The item was shipped\"\n              variant=\"rounded\"\n              color=\"success\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"message\"\n              message=\"The new message from user @nahawaii\"\n              variant=\"rounded\"\n              color=\"warning\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"upload\"\n              message=\"Your file is ready to upload\"\n              variant=\"rounded\"\n              color=\"primary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"disc\"\n              message=\"The disc is full\"\n              variant=\"rounded\"\n              color=\"info\"\n            />\n          </Widget>\n        </Grid>\n      </Grid>\n    </>\n  );\n\n  // #############################################################\n  function sendNotification(componentProps, options) {\n    return toast(\n      <Notification\n        {...componentProps}\n        className={classes.notificationComponent}\n      />,\n      options\n    );\n  }\n\n  function retryErrorNotification() {\n    var componentProps = {\n      type: \"message\",\n      message: \"Message was sent successfully!\",\n      variant: \"contained\",\n      color: \"success\"\n    };\n    toast.update(errorToastId, {\n      render: <Notification {...componentProps} />,\n      type: \"success\"\n    });\n    setErrorToastId(null);\n  }\n\n  function handleNotificationCall(notificationType) {\n    var componentProps;\n\n    if (errorToastId && notificationType === \"error\") return;\n\n    switch (notificationType) {\n      case \"info\":\n        componentProps = {\n          type: \"feedback\",\n          message: \"New user feedback received\",\n          variant: \"contained\",\n          color: \"primary\"\n        };\n        break;\n      case \"error\":\n        componentProps = {\n          type: \"message\",\n          message: \"Message was not sent!\",\n          variant: \"contained\",\n          color: \"secondary\",\n          extraButton: \"Resend\",\n          extraButtonClick: retryErrorNotification\n        };\n        break;\n      default:\n        componentProps = {\n          type: \"shipped\",\n          message: \"The item was shipped\",\n          variant: \"contained\",\n          color: \"success\"\n        };\n    }\n\n    var toastId = sendNotification(componentProps, {\n      type: notificationType,\n      position: positions[notificationsPosition],\n      progressClassName: classes.progress,\n      onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\n      className: classes.notification\n    });\n\n    if (notificationType === \"error\") setErrorToastId(toastId);\n  }\n\n  function changeNotificationPosition(positionId) {\n    setNotificationPosition(positionId);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}