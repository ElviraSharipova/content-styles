{"ast":null,"code":"var _jsxFileName = \"/home/dekor/eqvium/react_material_test/admin-full-v2/src/pages/maps/VectorMap.js\";\nimport React from \"react\";\nimport { ComposableMap, ZoomableGroup, Geographies, Geography, Markers, Marker } from \"react-simple-maps\";\nimport useStyles from \"./styles\";\nimport map from \"../../images/map.json\";\nconst markers = [{\n  markerOffset: -25,\n  name: \"Buenos Aires\",\n  coordinates: [-58.3816, -34.6037]\n}];\n\nfunction VectorMap() {\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.vectorContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ComposableMap, {\n    projectionConfig: {\n      scale: 205,\n      rotation: [-11, 0, 0]\n    },\n    width: 980,\n    height: 551,\n    style: {\n      width: \"100%\",\n      height: \"auto\",\n      overflow: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ZoomableGroup, {\n    center: [0, 20],\n    disablePanning: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Geographies, {\n    geography: map,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, (geographies, projection) => geographies.map((geography, i) => geography.id !== \"ATA\" && /*#__PURE__*/React.createElement(Geography, {\n    key: i,\n    geography: geography,\n    projection: projection,\n    style: {\n      default: {\n        fill: \"#ECEFF1\",\n        stroke: \"#607D8B\",\n        strokeWidth: 0.75,\n        outline: \"none\"\n      },\n      hover: {\n        fill: \"#607D8B\",\n        stroke: \"#607D8B\",\n        strokeWidth: 0.75,\n        outline: \"none\"\n      },\n      pressed: {\n        fill: \"#536DFE\",\n        stroke: \"#607D8B\",\n        strokeWidth: 0.75,\n        outline: \"none\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Markers, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, markers.map((marker, i) => /*#__PURE__*/React.createElement(Marker, {\n    key: i,\n    marker: marker,\n    style: {\n      default: {\n        fill: \"#536DFE\"\n      },\n      hover: {\n        fill: \"#FFFFFF\"\n      },\n      pressed: {\n        fill: \"#536DFE\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 0,\n    cy: 0,\n    r: 5,\n    style: {\n      stroke: \"#536DFE\",\n      strokeWidth: 3,\n      opacity: 0.9\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"text\", {\n    textAnchor: \"middle\",\n    y: marker.markerOffset,\n    style: {\n      fontFamily: \"Roboto, sans-serif\",\n      fill: \"#607D8B\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, marker.name)))))));\n}\n\nexport default VectorMap;","map":{"version":3,"sources":["/home/dekor/eqvium/react_material_test/admin-full-v2/src/pages/maps/VectorMap.js"],"names":["React","ComposableMap","ZoomableGroup","Geographies","Geography","Markers","Marker","useStyles","map","markers","markerOffset","name","coordinates","VectorMap","classes","vectorContainer","scale","rotation","width","height","overflow","geographies","projection","geography","i","id","default","fill","stroke","strokeWidth","outline","hover","pressed","marker","opacity","fontFamily"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  ComposableMap,\n  ZoomableGroup,\n  Geographies,\n  Geography,\n  Markers,\n  Marker\n} from \"react-simple-maps\";\nimport useStyles from \"./styles\";\nimport map from \"../../images/map.json\";\n\nconst markers = [\n  {\n    markerOffset: -25,\n    name: \"Buenos Aires\",\n    coordinates: [-58.3816, -34.6037]\n  }\n];\n\nfunction VectorMap() {\n  const classes = useStyles();\n  return (\n    <div className={classes.vectorContainer}>\n      <ComposableMap\n        projectionConfig={{\n          scale: 205,\n          rotation: [-11, 0, 0]\n        }}\n        width={980}\n        height={551}\n        style={{\n          width: \"100%\",\n          height: \"auto\",\n          overflow: \"auto\"\n        }}\n      >\n        <ZoomableGroup center={[0, 20]} disablePanning>\n          <Geographies geography={map}>\n            {(geographies, projection) =>\n              geographies.map(\n                (geography, i) =>\n                  geography.id !== \"ATA\" && (\n                    <Geography\n                      key={i}\n                      geography={geography}\n                      projection={projection}\n                      style={{\n                        default: {\n                          fill: \"#ECEFF1\",\n                          stroke: \"#607D8B\",\n                          strokeWidth: 0.75,\n                          outline: \"none\"\n                        },\n                        hover: {\n                          fill: \"#607D8B\",\n                          stroke: \"#607D8B\",\n                          strokeWidth: 0.75,\n                          outline: \"none\"\n                        },\n                        pressed: {\n                          fill: \"#536DFE\",\n                          stroke: \"#607D8B\",\n                          strokeWidth: 0.75,\n                          outline: \"none\"\n                        }\n                      }}\n                    />\n                  )\n              )\n            }\n          </Geographies>\n          <Markers>\n            {markers.map((marker, i) => (\n              <Marker\n                key={i}\n                marker={marker}\n                style={{\n                  default: { fill: \"#536DFE\" },\n                  hover: { fill: \"#FFFFFF\" },\n                  pressed: { fill: \"#536DFE\" }\n                }}\n              >\n                <circle\n                  cx={0}\n                  cy={0}\n                  r={5}\n                  style={{\n                    stroke: \"#536DFE\",\n                    strokeWidth: 3,\n                    opacity: 0.9\n                  }}\n                />\n                <text\n                  textAnchor=\"middle\"\n                  y={marker.markerOffset}\n                  style={{\n                    fontFamily: \"Roboto, sans-serif\",\n                    fill: \"#607D8B\"\n                  }}\n                >\n                  {marker.name}\n                </text>\n              </Marker>\n            ))}\n          </Markers>\n        </ZoomableGroup>\n      </ComposableMap>\n    </div>\n  );\n}\n\nexport default VectorMap;\n"]},"metadata":{},"sourceType":"module"}