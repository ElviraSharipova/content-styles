{"ast":null,"code":"var _jsxFileName = \"/home/dekor/eqvium/react_material_test/admin-full/src/pages/login/Login.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Grid, CircularProgress, Tabs, Tab, Fade, TextField as Input } from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\nimport classnames from \"classnames\"; // styles\n\nimport useStyles from \"./styles\"; // logo\n\nimport logo from \"./logo.svg\";\nimport google from \"../../images/google.svg\"; // context\n\nimport { useUserDispatch, loginUser, registerUser, sendPasswordResetEmail } from \"../../context/UserContext\";\nimport { receiveToken, doInit } from \"../../context/UserContext\"; //components\n\nimport { Button, Typography } from \"../../components/Wrappers\";\nimport Widget from \"../../components/Widget\";\nimport config from \"../../config\";\n\nconst getGreeting = () => {\n  const d = new Date();\n\n  if (d.getHours() >= 4 && d.getHours() <= 12) {\n    return \"Good Morning\";\n  } else if (d.getHours() >= 13 && d.getHours() <= 16) {\n    return \"Good Day\";\n  } else if (d.getHours() >= 17 && d.getHours() <= 23) {\n    return \"Good Evening\";\n  } else {\n    return \"Good Night\";\n  }\n};\n\nfunction Login(props) {\n  var classes = useStyles(); // global\n\n  var userDispatch = useUserDispatch();\n  useEffect(() => {\n    const params = new URLSearchParams(props.location.search);\n    const token = params.get(\"token\");\n\n    if (token) {\n      receiveToken(token, userDispatch);\n      doInit()(userDispatch);\n    }\n  }, []); // eslint-disable-line\n  // local\n\n  var [isLoading, setIsLoading] = useState(false);\n  var [error, setError] = useState(null);\n  var [activeTabId, setActiveTabId] = useState(0);\n  var [nameValue, setNameValue] = useState(\"\");\n  var [loginValue, setLoginValue] = useState(\"admin@flatlogic.com\");\n  var [passwordValue, setPasswordValue] = useState(\"password\");\n  var [forgotEmail, setForgotEmail] = useState(\"\");\n  var [isForgot, setIsForgot] = useState(false);\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: !isForgot ? classes.formContainer : classes.customFormContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, isForgot ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"password\",\n    InputProps: {\n      classes: {\n        underline: classes.InputUnderline,\n        input: classes.Input\n      }\n    },\n    value: forgotEmail,\n    onChange: e => setForgotEmail(e.target.value),\n    margin: \"normal\",\n    placeholder: \"Email\",\n    type: \"Email\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.formButtons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }, isLoading ? /*#__PURE__*/React.createElement(CircularProgress, {\n    size: 26,\n    className: classes.loginLoader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 19\n    }\n  }) : /*#__PURE__*/React.createElement(Button, {\n    disabled: forgotEmail.length === 0,\n    onClick: () => sendPasswordResetEmail(forgotEmail)(userDispatch),\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 19\n    }\n  }, \"Send\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    size: \"large\",\n    onClick: () => setIsForgot(!isForgot),\n    className: classes.forgetButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, \"Back to login\"))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Tabs, {\n    value: activeTabId,\n    onChange: (e, id) => setActiveTabId(id),\n    indicatorColor: \"primary\",\n    textColor: \"primary\",\n    centered: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Tab, {\n    label: \"Login\",\n    classes: {\n      root: classes.tab\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Tab, {\n    label: \"New User\",\n    classes: {\n      root: classes.tab\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  })), activeTabId === 0 && /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, config.isBackend ? /*#__PURE__*/React.createElement(Widget, {\n    disableWidgetMenu: true,\n    inheritHeight: true,\n    style: {\n      marginTop: 32\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    block: true,\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 19\n    }\n  }, \"This is a real app with Node.js backend - use\", /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    weight: \"bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 21\n    }\n  }, \"\\\"admin@flatlogic.com / password\\\"\"), \" \", \"to login!\")) : null, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h1\",\n    className: classes.greeting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 15\n    }\n  }, getGreeting(), \", User\"), /*#__PURE__*/React.createElement(Button, {\n    size: \"large\",\n    className: classes.googleButton,\n    onClick: () => loginUser(userDispatch, loginValue, passwordValue, props.history, setIsLoading, setError, \"google\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: google,\n    alt: \"google\",\n    className: classes.googleIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 17\n    }\n  }), \"\\xA0Sign in with Google\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.formDividerContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.formDivider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.formDividerWord,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }\n  }, \"or\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.formDivider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Fade, {\n    in: error,\n    style: !error ? {\n      display: \"none\"\n    } : {\n      display: \"inline-block\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    color: \"secondary\",\n    className: classes.errorMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 17\n    }\n  }, \"Something is wrong with your login or password :(\")), /*#__PURE__*/React.createElement(Input, {\n    id: \"email\",\n    InputProps: {\n      classes: {\n        underline: classes.InputUnderline,\n        input: classes.Input\n      }\n    },\n    value: loginValue,\n    onChange: e => setLoginValue(e.target.value),\n    margin: \"normal\",\n    placeholder: \"Email Adress\",\n    type: \"email\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"password\",\n    InputProps: {\n      classes: {\n        underline: classes.InputUnderline,\n        input: classes.Input\n      }\n    },\n    value: passwordValue,\n    onChange: e => setPasswordValue(e.target.value),\n    margin: \"normal\",\n    placeholder: \"Password\",\n    type: \"password\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.formButtons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 15\n    }\n  }, isLoading ? /*#__PURE__*/React.createElement(CircularProgress, {\n    size: 26,\n    className: classes.loginLoader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 19\n    }\n  }) : /*#__PURE__*/React.createElement(Button, {\n    disabled: loginValue.length === 0 || passwordValue.length === 0,\n    onClick: () => loginUser(userDispatch, loginValue, passwordValue, props.history, setIsLoading, setError),\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 19\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    size: \"large\",\n    onClick: () => setIsForgot(!isForgot),\n    className: classes.forgetButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 17\n    }\n  }, \"Forgot Password?\"))), activeTabId === 1 && /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h1\",\n    className: classes.greeting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 15\n    }\n  }, \"Welcome!\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h2\",\n    className: classes.subGreeting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 15\n    }\n  }, \"Create your account\"), /*#__PURE__*/React.createElement(Fade, {\n    in: error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    color: \"secondary\",\n    className: classes.errorMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 17\n    }\n  }, \"Something is wrong with your login or password :(\")), /*#__PURE__*/React.createElement(Input, {\n    id: \"name\",\n    InputProps: {\n      classes: {\n        underline: classes.InputUnderline,\n        input: classes.Input\n      }\n    },\n    value: nameValue,\n    onChange: e => setNameValue(e.target.value),\n    margin: \"normal\",\n    placeholder: \"Full Name\",\n    type: \"email\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"email\",\n    InputProps: {\n      classes: {\n        underline: classes.InputUnderline,\n        input: classes.Input\n      }\n    },\n    value: loginValue,\n    onChange: e => setLoginValue(e.target.value),\n    margin: \"normal\",\n    placeholder: \"Email Adress\",\n    type: \"email\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"password\",\n    InputProps: {\n      classes: {\n        underline: classes.InputUnderline,\n        input: classes.Input\n      }\n    },\n    value: passwordValue,\n    onChange: e => setPasswordValue(e.target.value),\n    margin: \"normal\",\n    placeholder: \"Password\",\n    type: \"password\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.creatingButtonContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 15\n    }\n  }, isLoading ? /*#__PURE__*/React.createElement(CircularProgress, {\n    size: 26,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 19\n    }\n  }) : /*#__PURE__*/React.createElement(Button, {\n    onClick: () => registerUser(userDispatch, loginValue, passwordValue, props.history, setIsLoading, setError)(),\n    disabled: loginValue.length === 0 || passwordValue.length === 0 || nameValue.length === 0,\n    size: \"large\",\n    variant: \"contained\",\n    color: \"primary\",\n    fullWidth: true,\n    className: classes.createAccountButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 19\n    }\n  }, \"Create your account\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.formDividerContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.formDivider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.formDividerWord,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 17\n    }\n  }, \"or\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.formDivider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    size: \"large\",\n    className: classnames(classes.googleButton, classes.googleButtonCreating),\n    onClick: () => loginUser(userDispatch, loginValue, passwordValue, props.history, setIsLoading, setError, \"google\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: google,\n    alt: \"google\",\n    className: classes.googleIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 17\n    }\n  }), \"\\xA0Sign in with Google\")))), /*#__PURE__*/React.createElement(Typography, {\n    color: \"primary\",\n    className: classes.copyright,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 9\n    }\n  }, \"\\xA9 2014-2020 Flatlogic, LLC. All rights reserved.\")));\n}\n\nexport default withRouter(Login);","map":{"version":3,"sources":["/home/dekor/eqvium/react_material_test/admin-full/src/pages/login/Login.js"],"names":["React","useState","useEffect","Grid","CircularProgress","Tabs","Tab","Fade","TextField","Input","withRouter","classnames","useStyles","useUserDispatch","loginUser","registerUser","sendPasswordResetEmail","receiveToken","doInit","Button","Typography","Widget","config","getGreeting","d","Date","getHours","Login","props","classes","userDispatch","params","URLSearchParams","location","search","token","get","isLoading","setIsLoading","error","setError","activeTabId","setActiveTabId","nameValue","setNameValue","loginValue","setLoginValue","passwordValue","setPasswordValue","forgotEmail","setForgotEmail","isForgot","setIsForgot","container","formContainer","customFormContainer","form","underline","InputUnderline","input","e","target","value","formButtons","loginLoader","length","forgetButton","id","root","tab","isBackend","marginTop","textAlign","greeting","googleButton","history","google","googleIcon","formDividerContainer","formDivider","formDividerWord","display","errorMessage","subGreeting","creatingButtonContainer","createAccountButton","googleButtonCreating","copyright"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Grid,\n  CircularProgress,\n  Tabs,\n  Tab,\n  Fade,\n  TextField as Input\n} from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\nimport classnames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// logo\nimport logo from \"./logo.svg\";\nimport google from \"../../images/google.svg\";\n\n// context\nimport { useUserDispatch, loginUser, registerUser, sendPasswordResetEmail } from \"../../context/UserContext\";\nimport { receiveToken, doInit } from \"../../context/UserContext\";\n\n//components\nimport { Button, Typography } from \"../../components/Wrappers\";\nimport Widget from \"../../components/Widget\";\nimport config from \"../../config\";\n\nconst getGreeting = () => {\n  const d = new Date();\n  if (d.getHours() >= 4 && d.getHours() <= 12) {\n    return \"Good Morning\";\n  } else if (d.getHours() >= 13 && d.getHours() <= 16) {\n    return \"Good Day\";\n  } else if (d.getHours() >= 17 && d.getHours() <= 23) {\n    return \"Good Evening\";\n  } else {\n    return \"Good Night\";\n  }\n};\n\nfunction Login(props) {\n  var classes = useStyles();\n\n  // global\n  var userDispatch = useUserDispatch();\n\n  useEffect(() => {\n    const params = new URLSearchParams(props.location.search);\n    const token = params.get(\"token\");\n    if (token) {\n      receiveToken(token, userDispatch);\n      doInit()(userDispatch);\n    }\n  }, []); // eslint-disable-line\n  \n\n  // local\n  var [isLoading, setIsLoading] = useState(false);\n  var [error, setError] = useState(null);\n  var [activeTabId, setActiveTabId] = useState(0);\n  var [nameValue, setNameValue] = useState(\"\");\n  var [loginValue, setLoginValue] = useState(\"admin@flatlogic.com\");\n  var [passwordValue, setPasswordValue] = useState(\"password\");\n  var [forgotEmail, setForgotEmail] = useState(\"\");\n  var [isForgot, setIsForgot] = useState(false);\n\n  return (\n    <Grid container className={classes.container}>\n      <div className={!isForgot ? classes.formContainer : classes.customFormContainer}>\n        <div className={classes.form}>\n          {isForgot ? (\n            <div>\n            <Input\n                id=\"password\"\n                InputProps={{\n                  classes: {\n                    underline: classes.InputUnderline,\n                    input: classes.Input\n                  }\n                }}\n                value={forgotEmail}\n                onChange={e => setForgotEmail(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Email\"\n                type=\"Email\"\n                fullWidth\n              />\n              <div className={classes.formButtons}>\n                {isLoading ? (\n                  <CircularProgress size={26} className={classes.loginLoader} />\n                ) : (\n                  <Button\n                    disabled={\n                      forgotEmail.length === 0\n                    }\n                    onClick={() =>\n                      sendPasswordResetEmail(\n                        forgotEmail,\n                      )(userDispatch)\n                    }\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"large\"\n                  >\n                    Send\n                  </Button>\n                )}\n                <Button\n                  color=\"primary\"\n                  size=\"large\"\n                  onClick={() => setIsForgot(!isForgot)}\n                  className={classes.forgetButton}\n                >\n                  Back to login\n                </Button>\n              </div>\n            </div>\n          ) : (\n            <>\n          <Tabs\n            value={activeTabId}\n            onChange={(e, id) => setActiveTabId(id)}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            centered\n          >\n            <Tab label=\"Login\" classes={{ root: classes.tab }} />\n            <Tab label=\"New User\" classes={{ root: classes.tab }} />\n          </Tabs>\n          {activeTabId === 0 && (\n            <React.Fragment>\n              {config.isBackend ? (\n                <Widget\n                  disableWidgetMenu\n                  inheritHeight\n                  style={{ marginTop: 32 }}\n                >\n                  <Typography\n                    variant={\"body2\"}\n                    block\n                    style={{ textAlign: \"center\" }}\n                  >\n                    This is a real app with Node.js backend - use\n                    <Typography variant={\"body2\"} weight={\"bold\"}>\n                      \"admin@flatlogic.com / password\"\n                    </Typography>{\" \"}\n                    to login!\n                  </Typography>\n                </Widget>\n              ) : null}\n              <Typography variant=\"h1\" className={classes.greeting}>\n                {getGreeting()}, User\n              </Typography>\n              <Button\n                size=\"large\"\n                className={classes.googleButton}\n                onClick={() =>\n                  loginUser(\n                    userDispatch,\n                    loginValue,\n                    passwordValue,\n                    props.history,\n                    setIsLoading,\n                    setError,\n                    \"google\"\n                  )\n                }\n              >\n                <img src={google} alt=\"google\" className={classes.googleIcon} />\n                &nbsp;Sign in with Google\n              </Button>\n              <div className={classes.formDividerContainer}>\n                <div className={classes.formDivider} />\n                <Typography className={classes.formDividerWord}>or</Typography>\n                <div className={classes.formDivider} />\n              </div>\n              <Fade\n                in={error}\n                style={\n                  !error ? { display: \"none\" } : { display: \"inline-block\" }\n                }\n              >\n                <Typography color=\"secondary\" className={classes.errorMessage}>\n                  Something is wrong with your login or password :(\n                </Typography>\n              </Fade>\n              <Input\n                id=\"email\"\n                InputProps={{\n                  classes: {\n                    underline: classes.InputUnderline,\n                    input: classes.Input\n                  }\n                }}\n                value={loginValue}\n                onChange={e => setLoginValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Email Adress\"\n                type=\"email\"\n                fullWidth\n              />\n              <Input\n                id=\"password\"\n                InputProps={{\n                  classes: {\n                    underline: classes.InputUnderline,\n                    input: classes.Input\n                  }\n                }}\n                value={passwordValue}\n                onChange={e => setPasswordValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Password\"\n                type=\"password\"\n                fullWidth\n              />\n              <div className={classes.formButtons}>\n                {isLoading ? (\n                  <CircularProgress size={26} className={classes.loginLoader} />\n                ) : (\n                  <Button\n                    disabled={\n                      loginValue.length === 0 || passwordValue.length === 0\n                    }\n                    onClick={() =>\n                      loginUser(\n                        userDispatch,\n                        loginValue,\n                        passwordValue,\n                        props.history,\n                        setIsLoading,\n                        setError\n                      )\n                    }\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"large\"\n                  >\n                    Login\n                  </Button>\n                )}\n                <Button\n                  color=\"primary\"\n                  size=\"large\"\n                  onClick={() => setIsForgot(!isForgot)}\n                  className={classes.forgetButton}\n                >\n                  Forgot Password?\n                </Button>\n              </div>\n            </React.Fragment>\n          )}\n          {activeTabId === 1 && (\n            <React.Fragment>\n              <Typography variant=\"h1\" className={classes.greeting}>\n                Welcome!\n              </Typography>\n              <Typography variant=\"h2\" className={classes.subGreeting}>\n                Create your account\n              </Typography>\n              <Fade in={error}>\n                <Typography color=\"secondary\" className={classes.errorMessage}>\n                  Something is wrong with your login or password :(\n                </Typography>\n              </Fade>\n              <Input\n                id=\"name\"\n                InputProps={{\n                  classes: {\n                    underline: classes.InputUnderline,\n                    input: classes.Input\n                  }\n                }}\n                value={nameValue}\n                onChange={e => setNameValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Full Name\"\n                type=\"email\"\n                fullWidth\n              />\n              <Input\n                id=\"email\"\n                InputProps={{\n                  classes: {\n                    underline: classes.InputUnderline,\n                    input: classes.Input\n                  }\n                }}\n                value={loginValue}\n                onChange={e => setLoginValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Email Adress\"\n                type=\"email\"\n                fullWidth\n              />\n              <Input\n                id=\"password\"\n                InputProps={{\n                  classes: {\n                    underline: classes.InputUnderline,\n                    input: classes.Input\n                  }\n                }}\n                value={passwordValue}\n                onChange={e => setPasswordValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Password\"\n                type=\"password\"\n                fullWidth\n              />\n              <div className={classes.creatingButtonContainer}>\n                {isLoading ? (\n                  <CircularProgress size={26} />\n                ) : (\n                  <Button\n                    onClick={() =>\n                      registerUser(\n                        userDispatch,\n                        loginValue,\n                        passwordValue,\n                        props.history,\n                        setIsLoading,\n                        setError\n                      )()\n                    }\n                    disabled={\n                      loginValue.length === 0 ||\n                      passwordValue.length === 0 ||\n                      nameValue.length === 0\n                    }\n                    size=\"large\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    fullWidth\n                    className={classes.createAccountButton}\n                  >\n                    Create your account\n                  </Button>\n                )}\n              </div>\n              <div className={classes.formDividerContainer}>\n                <div className={classes.formDivider} />\n                <Typography className={classes.formDividerWord}>or</Typography>\n                <div className={classes.formDivider} />\n              </div>\n              <Button\n                size=\"large\"\n                className={classnames(\n                  classes.googleButton,\n                  classes.googleButtonCreating\n                )}\n                onClick={() =>\n                  loginUser(\n                    userDispatch,\n                    loginValue,\n                    passwordValue,\n                    props.history,\n                    setIsLoading,\n                    setError,\n                    \"google\"\n                  )\n                }\n              >\n                <img src={google} alt=\"google\" className={classes.googleIcon} />\n                &nbsp;Sign in with Google\n              </Button>\n            </React.Fragment>\n          )}\n          </>\n        )}\n        </div>\n        <Typography color=\"primary\" className={classes.copyright}>\n          © 2014-2020 Flatlogic, LLC. All rights reserved.\n        </Typography>\n      </div>\n    </Grid>\n  );\n}\n\nexport default withRouter(Login);\n"]},"metadata":{},"sourceType":"module"}