{"ast":null,"code":"var _jsxFileName = \"/home/dekor/eqvium/react_material_test/admin-full/src/pages/charts/LineCharts.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/styles\";\nimport { Typography, Button } from '../../components/Wrappers';\nimport ReactApexChart from \"react-apexcharts\";\nimport ApexCharts from \"apexcharts\";\nimport ApexLineChart from \"./components/ApexLineChart\"; // components\n\nimport Widget from \"../../components/Widget/Widget\";\nexport default function Charts(props) {\n  const ws = useRef(null); //const [data1, updateData1] = useState([0,0,0,0,0,0,0]);\n\n  const [data1, updateData1] = useState([0, 0]);\n  const [data2, updateData2] = useState([0, 0, 0, 0, 0, 0, 0]);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const val2 = Math.floor(Math.random() * (10 - 3 + 1)) + 3; //const val2 = Math.floor(Math.random()*100);\n\n      let array2 = [...data2, val2];\n      array2.shift();\n      updateData2(array2);\n    }, 1000);\n    return () => {\n      window.clearInterval(interval);\n    };\n  }, [data2]);\n  useEffect(() => {\n    ws.current = new WebSocket(\"ws://79.143.25.41:8080/gear\");\n\n    ws.current.onopen = () => console.log(\"ws opened\");\n\n    ws.current.onclose = () => console.log(\"ws closed\");\n\n    return () => {\n      ws.current.close();\n    };\n  }, []);\n  useEffect(() => {\n    if (!ws.current) return;\n\n    ws.current.onmessage = e => {\n      //const message = JSON.parse(e.data);\n      //console.log(\"ws recieved: \", JSON.parse(e.data));\n      let array1 = [...data1, parseInt(e.data)]; //            let array1 = [...data1, e.data];\n      //            let array1 = [...data1, 1];\n\n      array1.shift();\n      updateData1(array1);\n      console.log(\"ws recieved: \", data1);\n    };\n  }, [data1]); // local\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Widget, {\n    title: \"Поток данных\",\n    noBodyPadding: true,\n    button: \"Set Stream\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ApexLineChart, {\n    data: data1,\n    type: \"line\",\n    height: \"350\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 1\n    }\n  }, \"Set Stream\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/home/dekor/eqvium/react_material_test/admin-full/src/pages/charts/LineCharts.js"],"names":["React","useState","useEffect","useRef","Grid","useTheme","Typography","Button","ReactApexChart","ApexCharts","ApexLineChart","Widget","Charts","props","ws","data1","updateData1","data2","updateData2","interval","setInterval","val2","Math","floor","random","array2","shift","window","clearInterval","current","WebSocket","onopen","console","log","onclose","close","onmessage","e","array1","parseInt","data"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/styles\";\nimport { Typography, Button } from '../../components/Wrappers'\nimport ReactApexChart from \"react-apexcharts\";\nimport ApexCharts from \"apexcharts\";\nimport ApexLineChart from \"./components/ApexLineChart\";\n\n// components\nimport Widget from \"../../components/Widget/Widget\";\n\n\n\nexport default function Charts(props) {\n\n  const ws = useRef(null);\n  //const [data1, updateData1] = useState([0,0,0,0,0,0,0]);\n  const [data1, updateData1] = useState([0,0]);\n  const [data2, updateData2] = useState([0,0,0,0,0,0,0]);\n\nuseEffect(() => {\n    const interval = setInterval(() => {\n      const val2 = Math.floor(Math.random() * (10 - 3 + 1)) + 3;\n      //const val2 = Math.floor(Math.random()*100);\n      let array2 = [...data2, val2];\n      array2.shift();\n      updateData2(array2);\n    }, 1000);\n    return () => {\n      window.clearInterval(interval);\n    };\n  }, [data2]);\n \n  useEffect(() => {\n        ws.current = new WebSocket(\"ws://79.143.25.41:8080/gear\");\n        ws.current.onopen = () => console.log(\"ws opened\");\n        ws.current.onclose = () => console.log(\"ws closed\");\n\n        return () => {\n            ws.current.close();\n        };\n    }, []);\n\n    useEffect(() => {\n        if (!ws.current) return;\n\n        ws.current.onmessage = e => {\n            //const message = JSON.parse(e.data);\n            //console.log(\"ws recieved: \", JSON.parse(e.data));\n            let array1 = [...data1, parseInt(e.data)];\n//            let array1 = [...data1, e.data];\n//            let array1 = [...data1, 1];\n            array1.shift();\n            updateData1(array1);\n            console.log(\"ws recieved: \", data1);\n        };\n    }, [data1]);\n  \n\n  // local\n\n  return (\n    <>\n      <Grid container spacing={4}>\n        <Grid item md={6} xs={12}>\n          <Widget title={\"Поток данных\"} noBodyPadding  button=\"Set Stream\">\n            <ApexLineChart\n              data={data1}\n              type=\"line\"\n              height=\"350\"\n            />\n          </Widget>\n        </Grid>\n        <Grid item md={6} xs={12}>\n<Button\n                      variant=\"contained\"\n                      color=\"secondary\"\n                  >\n Set Stream\n                  </Button>\n        </Grid>\n        <Grid item md={6} xs={12}>\n        </Grid>\n        <Grid item md={6} xs={12}>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\n\n"]},"metadata":{},"sourceType":"module"}