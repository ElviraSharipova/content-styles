{"ast":null,"code":"var _jsxFileName = \"/home/dekor/eqvium/react_material_test/admin-full/src/components/Sidebar/components/SidebarLink/SidebarLink.js\";\nimport React, { useState } from \"react\";\nimport { Box, Collapse, Divider, List, ListItem, ListItemIcon, ListItemText, Popover, TextField as Input, Typography } from \"@material-ui/core\";\nimport { Inbox as InboxIcon, ExpandMore as ExpandIcon } from \"@material-ui/icons\";\nimport { Link } from \"react-router-dom\";\nimport classnames from \"classnames\"; // styles\n\nimport useStyles from \"./styles\";\nimport useStyles2 from \"../../styles\"; // components\n\nimport Dot from \"../Dot\";\nimport { Button, Badge } from \"../../../Wrappers\";\nimport Chat from \"../../../Chat\";\nexport default function SidebarLink({\n  link,\n  icon,\n  label,\n  children,\n  location,\n  isSidebarOpened,\n  nested,\n  type,\n  toggleDrawer,\n  click,\n  ...props\n}) {\n  // local\n  var [isOpen, setIsOpen] = useState(false); // Add Section Popover state\n\n  const [anchorEl, setAnchorEl] = React.useState(null); // Chat Modal state\n\n  const [isChat, setChat] = useState(false); // Login page onClick\n\n  function onLogin() {\n    localStorage.removeItem(\"token\");\n    window.location.reload();\n  }\n\n  onLogin.clickName = \"onLogin\";\n  var classes = useStyles(isOpen);\n  const classes2 = useStyles2();\n  var isLinkActive = link && (location.pathname === link || location.pathname.includes(link));\n  if (type === \"title\") return /*#__PURE__*/React.createElement(Typography, {\n    className: classnames(classes.linkText, classes.sectionTitle, {\n      [classes.linkTextHidden]: !isSidebarOpened\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, label);\n  if (type === \"divider\") return /*#__PURE__*/React.createElement(Divider, {\n    className: classes.divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 34\n    }\n  });\n  if (type === \"margin\") return /*#__PURE__*/React.createElement(\"section\", {\n    style: {\n      marginTop: 240\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 33\n    }\n  }); // Add Section Popover\n\n  const open = Boolean(anchorEl);\n  const id = open ? \"add-section-popover\" : undefined;\n\n  function addSectionClick(event) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  addSectionClick.clickName = \"addSectionClick\";\n\n  const addSectionClose = () => {\n    setAnchorEl(null);\n  }; // Chat Popper\n\n\n  function chatSetOpen() {\n    setChat(true);\n  }\n\n  chatSetOpen.clickName = \"chatSetOpen\";\n\n  const chatSetClose = () => {\n    setChat(false);\n  };\n\n  if (!children) return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ListItem, {\n    onClick: e => {\n      if (click) {\n        return click(e, addSectionClick, chatSetOpen, onLogin);\n      }\n\n      return toggleDrawer(e);\n    },\n    onKeyPress: toggleDrawer,\n    button: true,\n    component: link && Link,\n    to: link,\n    className: classes.link,\n    classes: {\n      root: classnames(classes.link, {\n        [classes.linkActive]: isLinkActive && !nested,\n        [classes.linkNested]: nested\n      })\n    },\n    disableRipple: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    className: classnames(classes.linkIcon, {\n      [classes.linkIconActive]: isLinkActive\n    }),\n    style: {\n      margin: nested && -11\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }, nested ? /*#__PURE__*/React.createElement(Dot, {\n    color: isLinkActive && \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 23\n    }\n  }) : icon), /*#__PURE__*/React.createElement(ListItemText, {\n    classes: {\n      primary: classnames(classes.linkText, {\n        [classes.linkTextActive]: isLinkActive,\n        [classes.linkTextHidden]: !isSidebarOpened\n      })\n    },\n    primary: label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Chat, {\n    open: isChat,\n    onClose: chatSetClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Popover, {\n    id: id,\n    open: open,\n    anchorEl: anchorEl,\n    onClose: addSectionClose,\n    anchorOrigin: {\n      vertical: \"bottom\",\n      horizontal: \"left\"\n    },\n    transformOrigin: {\n      vertical: \"top\",\n      horizontal: \"left\"\n    },\n    classes: {\n      paper: classes2.popover\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    m: 3,\n    display: \"flex\",\n    flexDirection: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }, \"Add section\"), /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Section Name\",\n    classes: {\n      root: classes2.input\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    mt: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    variant: \"contained\",\n    className: classes2.noBoxShadow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 15\n    }\n  }, \"Add\"), /*#__PURE__*/React.createElement(Button, {\n    classes: {\n      label: classes2.buttonLabel\n    },\n    onClick: addSectionClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 15\n    }\n  }, \"Cancel\")))));\n  return /*#__PURE__*/React.createElement(React.Fragment, null, props.badge ? /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    component: link && Link,\n    onClick: toggleCollapse,\n    className: classnames(classes.link, {\n      [classes.linkActive]: isLinkActive,\n      [classes.nestedMenu]: type === \"nested\"\n    }),\n    to: link,\n    disableRipple: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    className: classnames(classes.linkIcon, {\n      [classes.linkIconActive]: isLinkActive\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 11\n    }\n  }, icon ? icon : /*#__PURE__*/React.createElement(InboxIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 28\n    }\n  })), /*#__PURE__*/React.createElement(Badge, {\n    badgeContent: props.badge,\n    color: props.badgeColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    classes: {\n      primary: classnames(classes.linkText, {\n        [classes.linkTextActive]: isLinkActive,\n        [classes.linkTextHidden]: !isSidebarOpened\n      })\n    },\n    primary: label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(ExpandIcon, {\n    className: classnames({\n      [classes.expand]: isOpen,\n      [classes.linkTextHidden]: !isSidebarOpened\n    }, classes.expandWrapper),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 11\n    }\n  })) : /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    component: link && Link,\n    onClick: toggleCollapse,\n    className: classnames(classes.link, {\n      [classes.linkActive]: isLinkActive,\n      [classes.nestedMenu]: type === \"nested\"\n    }),\n    to: link,\n    disableRipple: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    className: classnames(classes.linkIcon, {\n      [classes.linkIconActive]: isLinkActive\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 11\n    }\n  }, icon ? icon : /*#__PURE__*/React.createElement(InboxIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 28\n    }\n  })), /*#__PURE__*/React.createElement(ListItemText, {\n    classes: {\n      primary: classnames(classes.linkText, {\n        [classes.linkTextActive]: isLinkActive,\n        [classes.linkTextHidden]: !isSidebarOpened\n      })\n    },\n    primary: label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ExpandIcon, {\n    className: classnames({\n      [classes.expand]: isOpen,\n      [classes.linkTextHidden]: !isSidebarOpened\n    }, classes.expandWrapper),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 11\n    }\n  })), children && /*#__PURE__*/React.createElement(Collapse, {\n    in: isOpen && isSidebarOpened,\n    timeout: \"auto\",\n    unmountOnExit: true,\n    className: classnames(classes.nestedList, {\n      [classes.nestedMenuItem]: type === \"nested\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    component: \"div\",\n    disablePadding: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 11\n    }\n  }, children.map(childrenLink => /*#__PURE__*/React.createElement(SidebarLink, Object.assign({\n    key: childrenLink && childrenLink.link || childrenLink.label,\n    location: location,\n    isSidebarOpened: isSidebarOpened,\n    classes: classes,\n    toggleDrawer: toggleDrawer,\n    nested: true\n  }, childrenLink, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 15\n    }\n  })))))); // ###########################################################\n\n  function toggleCollapse(e) {\n    if (isSidebarOpened) {\n      e.preventDefault();\n      setIsOpen(!isOpen);\n    }\n  }\n}","map":{"version":3,"sources":["/home/dekor/eqvium/react_material_test/admin-full/src/components/Sidebar/components/SidebarLink/SidebarLink.js"],"names":["React","useState","Box","Collapse","Divider","List","ListItem","ListItemIcon","ListItemText","Popover","TextField","Input","Typography","Inbox","InboxIcon","ExpandMore","ExpandIcon","Link","classnames","useStyles","useStyles2","Dot","Button","Badge","Chat","SidebarLink","link","icon","label","children","location","isSidebarOpened","nested","type","toggleDrawer","click","props","isOpen","setIsOpen","anchorEl","setAnchorEl","isChat","setChat","onLogin","localStorage","removeItem","window","reload","clickName","classes","classes2","isLinkActive","pathname","includes","linkText","sectionTitle","linkTextHidden","divider","marginTop","open","Boolean","id","undefined","addSectionClick","event","currentTarget","addSectionClose","chatSetOpen","chatSetClose","e","root","linkActive","linkNested","linkIcon","linkIconActive","margin","primary","linkTextActive","vertical","horizontal","paper","popover","input","noBoxShadow","buttonLabel","badge","toggleCollapse","nestedMenu","badgeColor","expand","expandWrapper","nestedList","nestedMenuItem","map","childrenLink","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Box,\n  Collapse,\n  Divider,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Popover,\n  TextField as Input,\n  Typography\n} from \"@material-ui/core\";\nimport {\n  Inbox as InboxIcon,\n  ExpandMore as ExpandIcon\n} from \"@material-ui/icons\";\nimport { Link } from \"react-router-dom\";\nimport classnames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\nimport useStyles2 from \"../../styles\";\n\n// components\nimport Dot from \"../Dot\";\nimport { Button, Badge } from \"../../../Wrappers\";\nimport Chat from \"../../../Chat\";\n\nexport default function SidebarLink({\n  link,\n  icon,\n  label,\n  children,\n  location,\n  isSidebarOpened,\n  nested,\n  type,\n  toggleDrawer,\n  click,\n  ...props\n}) {\n  // local\n  var [isOpen, setIsOpen] = useState(false);\n  // Add Section Popover state\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  // Chat Modal state\n  const [isChat, setChat] = useState(false);\n\n  // Login page onClick\n  function onLogin() {\n    localStorage.removeItem(\"token\");\n    window.location.reload();\n  }\n\n  onLogin.clickName = \"onLogin\";\n\n  var classes = useStyles(isOpen);\n  const classes2 = useStyles2();\n  var isLinkActive =\n    link && (location.pathname === link || location.pathname.includes(link));\n\n  if (type === \"title\")\n    return (\n      <Typography\n        className={classnames(classes.linkText, classes.sectionTitle, {\n          [classes.linkTextHidden]: !isSidebarOpened\n        })}\n      >\n        {label}\n      </Typography>\n    );\n\n  if (type === \"divider\") return <Divider className={classes.divider} />;\n\n  if (type === \"margin\") return <section style={{ marginTop: 240 }} />;\n\n  // Add Section Popover\n\n  const open = Boolean(anchorEl);\n  const id = open ? \"add-section-popover\" : undefined;\n\n  function addSectionClick(event) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  addSectionClick.clickName = \"addSectionClick\";\n\n  const addSectionClose = () => {\n    setAnchorEl(null);\n  };\n\n  // Chat Popper\n\n  function chatSetOpen() {\n    setChat(true);\n  }\n\n  chatSetOpen.clickName = \"chatSetOpen\";\n\n  const chatSetClose = () => {\n    setChat(false);\n  };\n\n  if (!children)\n    return (\n      <>\n        <ListItem\n          onClick={e => {\n            if (click) {\n              return click(e, addSectionClick, chatSetOpen, onLogin);\n            }\n            return toggleDrawer(e);\n          }}\n          onKeyPress={toggleDrawer}\n          button\n          component={link && Link}\n          to={link}\n          className={classes.link}\n          classes={{\n            root: classnames(classes.link, {\n              [classes.linkActive]: isLinkActive && !nested,\n              [classes.linkNested]: nested\n            })\n          }}\n          disableRipple\n        >\n          <ListItemIcon\n            className={classnames(classes.linkIcon, {\n              [classes.linkIconActive]: isLinkActive\n            })}\n            style={{ margin: nested && -11 }}\n          >\n            {nested ? <Dot color={isLinkActive && \"primary\"} /> : icon}\n          </ListItemIcon>\n          <ListItemText\n            classes={{\n              primary: classnames(classes.linkText, {\n                [classes.linkTextActive]: isLinkActive,\n                [classes.linkTextHidden]: !isSidebarOpened\n              })\n            }}\n            primary={label}\n          />\n        </ListItem>\n        <Chat open={isChat} onClose={chatSetClose} />\n        <Popover\n          id={id}\n          open={open}\n          anchorEl={anchorEl}\n          onClose={addSectionClose}\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"left\"\n          }}\n          transformOrigin={{\n            vertical: \"top\",\n            horizontal: \"left\"\n          }}\n          classes={{ paper: classes2.popover }}\n        >\n          <Box m={3} display=\"flex\" flexDirection=\"column\">\n            <Typography>Add section</Typography>\n            <Input\n              placeholder=\"Section Name\"\n              classes={{ root: classes2.input }}\n            />\n            <Box display=\"flex\" justifyContent=\"flex-end\" mt={2}>\n              <Button\n                color=\"secondary\"\n                variant=\"contained\"\n                className={classes2.noBoxShadow}\n              >\n                Add\n              </Button>\n              <Button\n                classes={{ label: classes2.buttonLabel }}\n                onClick={addSectionClose}\n              >\n                Cancel\n              </Button>\n            </Box>\n          </Box>\n        </Popover>\n      </>\n    );\n\n  return (\n    <>\n      {props.badge ? (\n        <ListItem\n          button\n          component={link && Link}\n          onClick={toggleCollapse}\n          className={classnames(classes.link, {\n            [classes.linkActive]: isLinkActive,\n            [classes.nestedMenu]: type === \"nested\"\n          })}\n          to={link}\n          disableRipple\n        >\n          <ListItemIcon\n            className={classnames(classes.linkIcon, {\n              [classes.linkIconActive]: isLinkActive\n            })}\n          >\n            {icon ? icon : <InboxIcon />}\n          </ListItemIcon>\n          <Badge badgeContent={props.badge} color={props.badgeColor}>\n            <ListItemText\n              classes={{\n                primary: classnames(classes.linkText, {\n                  [classes.linkTextActive]: isLinkActive,\n                  [classes.linkTextHidden]: !isSidebarOpened\n                })\n              }}\n              primary={label}\n            />\n          </Badge>\n          <ExpandIcon\n            className={classnames(\n              {\n                [classes.expand]: isOpen,\n                [classes.linkTextHidden]: !isSidebarOpened\n              },\n              classes.expandWrapper\n            )}\n          />\n        </ListItem>\n      ) : (\n        <ListItem\n          button\n          component={link && Link}\n          onClick={toggleCollapse}\n          className={classnames(classes.link, {\n            [classes.linkActive]: isLinkActive,\n            [classes.nestedMenu]: type === \"nested\"\n          })}\n          to={link}\n          disableRipple\n        >\n          <ListItemIcon\n            className={classnames(classes.linkIcon, {\n              [classes.linkIconActive]: isLinkActive\n            })}\n          >\n            {icon ? icon : <InboxIcon />}\n          </ListItemIcon>\n          <ListItemText\n            classes={{\n              primary: classnames(classes.linkText, {\n                [classes.linkTextActive]: isLinkActive,\n                [classes.linkTextHidden]: !isSidebarOpened\n              })\n            }}\n            primary={label}\n          />\n          <ExpandIcon\n            className={classnames(\n              {\n                [classes.expand]: isOpen,\n                [classes.linkTextHidden]: !isSidebarOpened\n              },\n              classes.expandWrapper\n            )}\n          />\n        </ListItem>\n      )}\n      {children && (\n        <Collapse\n          in={isOpen && isSidebarOpened}\n          timeout=\"auto\"\n          unmountOnExit\n          className={classnames(classes.nestedList, {\n            [classes.nestedMenuItem]: type === \"nested\"\n          })}\n        >\n          <List component=\"div\" disablePadding>\n            {children.map(childrenLink => (\n              <SidebarLink\n                key={(childrenLink && childrenLink.link) || childrenLink.label}\n                location={location}\n                isSidebarOpened={isSidebarOpened}\n                classes={classes}\n                toggleDrawer={toggleDrawer}\n                nested\n                {...childrenLink}\n              />\n            ))}\n          </List>\n        </Collapse>\n      )}\n    </>\n  );\n\n  // ###########################################################\n\n  function toggleCollapse(e) {\n    if (isSidebarOpened) {\n      e.preventDefault();\n      setIsOpen(!isOpen);\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}