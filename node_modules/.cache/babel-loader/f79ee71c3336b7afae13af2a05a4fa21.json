{"ast":null,"code":"import _toConsumableArray from\"/home/dekor/eqvium/react_material_test/admin-full/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/home/dekor/eqvium/react_material_test/admin-full/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectSpread from\"/home/dekor/eqvium/react_material_test/admin-full/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React from\"react\";import{Grid,Box,Dialog,DialogActions,DialogContent,DialogContentText,DialogTitle,TextField}from\"@material-ui/core\";import cn from\"classnames\";import useStyles from\"./styles\";// components\nimport Widget from\"../../components/Widget\";import Code from\"../../components/Code\";import{Typography,Button,Paper}from\"../../components/Wrappers\";var reducer=function reducer(state,action){switch(action.type){case\"OPEN_MODAL\":return _objectSpread(_objectSpread({},state),{},{toggleModal:true});case\"CLOSE_MODAL\":return _objectSpread(_objectSpread({},state),{},{toggleModal:false});case\"OPEN_BODY\":return _objectSpread(_objectSpread({},state),{},{toggleBody:true});case\"CLOSE_BODY\":return _objectSpread(_objectSpread({},state),{},{toggleBody:false});case\"OPEN_SMALL\":return _objectSpread(_objectSpread({},state),{},{toggleSmall:true});case\"CLOSE_SMALL\":return _objectSpread(_objectSpread({},state),{},{toggleSmall:false});case\"OPEN_LARGE\":return _objectSpread(_objectSpread({},state),{},{toggleLarge:true});case\"CLOSE_LARGE\":return _objectSpread(_objectSpread({},state),{},{toggleLarge:false});case\"OPEN_GRID\":return _objectSpread(_objectSpread({},state),{},{toggleGrid:true});case\"CLOSE_GRID\":return _objectSpread(_objectSpread({},state),{},{toggleGrid:false});case\"OPEN_INPUT_MODAL\":return _objectSpread(_objectSpread({},state),{},{toggleInputModal:true});case\"CLOSE_INPUT_MODAL\":return _objectSpread(_objectSpread({},state),{},{toggleInputModal:false});default:return null;}};export default function ModalComp(){var classes=useStyles();var _React$useReducer=React.useReducer(reducer,{toggleModal:false,toggleBody:false,toggleSmall:false,toggleGrid:false,toggleLarge:false,toggleInputModal:false}),_React$useReducer2=_slicedToArray(_React$useReducer,2),state=_React$useReducer2[0],dispatch=_React$useReducer2[1];return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Grid,{container:true,spacing:6,alignItems:\"flex-start\"},/*#__PURE__*/React.createElement(Grid,{container:true,item:true,md:6,xs:12},/*#__PURE__*/React.createElement(Box,{display:\"flex\",flexDirection:\"column\",width:\"100%\"},/*#__PURE__*/React.createElement(Box,{mb:6},/*#__PURE__*/React.createElement(Widget,{title:\"Live Demo\",disableWidgetMenu:true},/*#__PURE__*/React.createElement(Typography,null,\"Toggle a working modal demo by clicking the button below. It will slide down and fade in from the top of the page.\"),/*#__PURE__*/React.createElement(Box,{my:2},/*#__PURE__*/React.createElement(Button,{color:\"primary\",variant:\"contained\",className:classes.marginRight,onClick:function onClick(){return dispatch({type:\"OPEN_MODAL\"});}},\"Demo\"),/*#__PURE__*/React.createElement(Dialog,{open:state.toggleModal,onClose:function onClose(){return dispatch({type:\"CLOSE_MODAL\"});},scroll:\"body\",\"aria-labelledby\":\"scroll-dialog-title\"},/*#__PURE__*/React.createElement(DialogTitle,{id:\"alert-dialog-title\"},\"Use Google's location service?\"),/*#__PURE__*/React.createElement(DialogContent,null,/*#__PURE__*/React.createElement(DialogContentText,{id:\"alert-dialog-description\"},\"Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.\")),/*#__PURE__*/React.createElement(DialogActions,null,/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){return dispatch({type:\"CLOSE_MODAL\"});},color:\"primary\"},\"Disagree\"),/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){return dispatch({type:\"CLOSE_MODAL\"});},color:\"primary\",autoFocus:true},\"Agree\"))),/*#__PURE__*/React.createElement(Button,{color:\"secondary\",variant:\"contained\",onClick:function onClick(){return dispatch({type:\"OPEN_BODY\"});}},\"Scrolling long content\"),/*#__PURE__*/React.createElement(Dialog,{open:state.toggleBody,onClose:function onClose(){return dispatch({type:\"CLOSE_BODY\"});},scroll:\"body\",\"aria-labelledby\":\"scroll-dialog-title\"},/*#__PURE__*/React.createElement(DialogTitle,{id:\"scroll-dialog-title\"},\"Subscribe\"),/*#__PURE__*/React.createElement(DialogContent,null,/*#__PURE__*/React.createElement(DialogContentText,null,_toConsumableArray(new Array(50)).map(function(){return\"Cras mattis consectetur purus sit amet fermentum.\\nCras justo odio, dapibus ac facilisis in, egestas eget quam.\\nMorbi leo risus, porta ac consectetur ac, vestibulum at eros.\\nPraesent commodo cursus magna, vel scelerisque nisl consectetur et.\";}).join(\"\\n\"))),/*#__PURE__*/React.createElement(DialogActions,null,/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){return dispatch({type:\"CLOSE_BODY\"});},color:\"primary\"},\"Cancel\"),/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){return dispatch({type:\"CLOSE_BODY\"});},color:\"primary\"},\"Subscribe\")))))),/*#__PURE__*/React.createElement(Box,{mb:6},/*#__PURE__*/React.createElement(Widget,{title:\"Optional Sizes\",disableWidgetMenu:true},/*#__PURE__*/React.createElement(Typography,{block:true},\"To appoint modal's width size, equal maxWidth attribute to one of values: \",/*#__PURE__*/React.createElement(Code,{row:true,inline:true},\"xs, sm, md, lg, xl\")),/*#__PURE__*/React.createElement(Box,{my:2},/*#__PURE__*/React.createElement(Button,{color:\"primary\",variant:\"contained\",className:classes.marginRight,onClick:function onClick(){return dispatch({type:\"OPEN_LARGE\"});}},\"Large Modal\"),/*#__PURE__*/React.createElement(Dialog,{maxWidth:\"xl\",open:state.toggleLarge,onClose:function onClose(){return dispatch({type:\"CLOSE_LARGE\"});},\"aria-labelledby\":\"alert-dialog-title\",\"aria-describedby\":\"alert-dialog-description\"},/*#__PURE__*/React.createElement(DialogTitle,{id:\"alert-dialog-title\"},\"Use Google's location service?\"),/*#__PURE__*/React.createElement(DialogContent,null,/*#__PURE__*/React.createElement(DialogContentText,{id:\"alert-dialog-description\"},\"Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.\")),/*#__PURE__*/React.createElement(DialogActions,null,/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){return dispatch({type:\"CLOSE_LARGE\"});},color:\"primary\"},\"Disagree\"),/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){return dispatch({type:\"CLOSE_LARGE\"});},color:\"primary\",autoFocus:true},\"Agree\"))),/*#__PURE__*/React.createElement(Button,{color:\"secondary\",variant:\"contained\",className:classes.marginRight,onClick:function onClick(){return dispatch({type:\"OPEN_SMALL\"});}},\"Small modal\"),/*#__PURE__*/React.createElement(Dialog,{maxWidth:\"sm\",open:state.toggleSmall,onClose:function onClose(){return dispatch({type:\"CLOSE_SMALL\"});},\"aria-labelledby\":\"alert-dialog-title\",\"aria-describedby\":\"alert-dialog-description\"},/*#__PURE__*/React.createElement(DialogTitle,{id:\"alert-dialog-title\"},\"Use Google's location service?\"),/*#__PURE__*/React.createElement(DialogContent,null,/*#__PURE__*/React.createElement(DialogContentText,{id:\"alert-dialog-description\"},\"Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.\")),/*#__PURE__*/React.createElement(DialogActions,null,/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){return dispatch({type:\"CLOSE_SMALL\"});},color:\"primary\"},\"Disagree\"),/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){return dispatch({type:\"CLOSE_SMALL\"});},color:\"primary\",autoFocus:true},\"Agree\")))))),/*#__PURE__*/React.createElement(Box,null,/*#__PURE__*/React.createElement(Widget,{title:\"Form dialogs\",disableWidgetMenu:true},/*#__PURE__*/React.createElement(Typography,{block:true},\"Form dialogs allow users to fill out form fields within a dialog. For example, if your site prompts for potential subscribers to fill in their email address, they can fill out the email field and touch \",/*#__PURE__*/React.createElement(Code,{row:true,inline:true},\"Submit\")),/*#__PURE__*/React.createElement(Box,{my:2},/*#__PURE__*/React.createElement(Button,{variant:\"outlined\",color:\"primary\",onClick:function onClick(){return dispatch({type:\"OPEN_INPUT_MODAL\"});}},\"Open form dialog\"),/*#__PURE__*/React.createElement(Dialog,{open:state.toggleInputModal,onClose:function onClose(){return dispatch({type:\"CLOSE_INPUT_MODAL\"});},\"aria-labelledby\":\"form-dialog-title\"},/*#__PURE__*/React.createElement(DialogTitle,{id:\"form-dialog-title\"},\"Subscribe\"),/*#__PURE__*/React.createElement(DialogContent,null,/*#__PURE__*/React.createElement(DialogContentText,null,\"To subscribe to this website, please enter your email address here. We will send updates occasionally.\"),/*#__PURE__*/React.createElement(TextField,{autoFocus:true,margin:\"dense\",id:\"name\",label:\"Email Address\",type:\"email\",fullWidth:true})),/*#__PURE__*/React.createElement(DialogActions,null,/*#__PURE__*/React.createElement(Button,{color:\"primary\",onClick:function onClick(){return dispatch({type:\"CLOSE_INPUT_MODAL\"});}},\"Cancel\"),/*#__PURE__*/React.createElement(Button,{color:\"primary\",onClick:function onClick(){return dispatch({type:\"CLOSE_INPUT_MODAL\"});}},\"Subscribe\")))))))),/*#__PURE__*/React.createElement(Grid,{item:true,md:6,xs:12},/*#__PURE__*/React.createElement(Widget,{title:\"Using Grid\",disableWidgetMenu:true},/*#__PURE__*/React.createElement(Typography,{block:true},\"Utilize the Material UI grid system within a modal by nesting\",\" \",/*#__PURE__*/React.createElement(Code,{row:true,inline:true},\"<Grid container>\"),\" within the\",\" \",/*#__PURE__*/React.createElement(Code,{row:true,inline:true},\"<Dialog>\"),\". Then, use the normal grid system classes as you would anywhere else.\"),/*#__PURE__*/React.createElement(Box,{my:2},/*#__PURE__*/React.createElement(Button,{color:\"primary\",variant:\"contained\",className:classes.marginRight,onClick:function onClick(){return dispatch({type:\"OPEN_GRID\"});}},\"Grid\"),/*#__PURE__*/React.createElement(Paper,{className:classes.paper},/*#__PURE__*/React.createElement(Grid,{item:true,xs:true,zeroMinWidth:true},/*#__PURE__*/React.createElement(Code,null,\"\\n  <Grid container>\\n    <Box display=\\\"flex\\\" flexDirection=\\\"column\\\">\\n      <Box display=\\\"flex\\\" flexDirection=\\\"row\\\" justifyContent=\\\"flex-end\\\">\\n        <Grid item xs={3}>1</Grid>\\n        <Grid item xs={3}>2</Grid>\\n      </Box>\\n      <Box display=\\\"flex\\\" flexDirection=\\\"row\\\" justifyContent=\\\"flex-around\\\">\\n        <Grid item xs={3}>1</Grid>\\n        <Grid item xs={3}>2</Grid>\\n      </Box>\\n      <Box display=\\\"flex\\\" flexDirection=\\\"row\\\" justifyContent=\\\"flex-between\\\">\\n        <Grid item xs={3}>1</Grid>\\n        <Grid item xs={3}>2</Grid>\\n        <Grid item xs={3}>3</Grid>Code\\n      </Box>\\n    </Box>\\n  </Grid>\\n                  \")))),/*#__PURE__*/React.createElement(Dialog,{fullWidth:true,maxWidth:\"lg\",open:state.toggleGrid,onClose:function onClose(){return dispatch({type:\"CLOSE_GRID\"});},\"aria-labelledby\":\"alert-dialog-title\",\"aria-describedby\":\"alert-dialog-description\"},/*#__PURE__*/React.createElement(DialogTitle,{id:\"alert-dialog-title\"},\"Grid system\"),/*#__PURE__*/React.createElement(DialogContent,null,/*#__PURE__*/React.createElement(DialogContentText,{id:\"alert-dialog-description\",component:\"div\"},/*#__PURE__*/React.createElement(Box,{display:\"flex\",width:\"100%\",flexDirection:\"column\"},/*#__PURE__*/React.createElement(Box,{display:\"flex\",flexDirection:\"row\",justifyContent:\"flex-end\",width:\"100%\"},/*#__PURE__*/React.createElement(Grid,{item:true,xs:3},/*#__PURE__*/React.createElement(Paper,{className:cn(classes.paperItem,classes.paperMargin),color:\"primary\"},\"1\")),/*#__PURE__*/React.createElement(Grid,{item:true,xs:3},/*#__PURE__*/React.createElement(Paper,{className:cn(classes.paperItem,classes.paperMargin),color:\"secondary\"},\"2\"))),/*#__PURE__*/React.createElement(Box,{display:\"flex\",flexDirection:\"row\",justifyContent:\"space-around\",width:\"100%\"},/*#__PURE__*/React.createElement(Grid,{item:true,xs:3},/*#__PURE__*/React.createElement(Paper,{className:cn(classes.paperItem,classes.paperMargin),color:\"primary\"},\"1\")),/*#__PURE__*/React.createElement(Grid,{item:true,xs:3},/*#__PURE__*/React.createElement(Paper,{className:cn(classes.paperItem,classes.paperMargin),color:\"secondary\"},\"2\"))),/*#__PURE__*/React.createElement(Box,{display:\"flex\",flexDirection:\"row\",justifyContent:\"space-between\",width:\"100%\"},/*#__PURE__*/React.createElement(Grid,{item:true,xs:3},/*#__PURE__*/React.createElement(Paper,{className:cn(classes.paperItem,classes.paperMargin),color:\"primary\"},\"1\")),/*#__PURE__*/React.createElement(Grid,{item:true,xs:3},/*#__PURE__*/React.createElement(Paper,{className:cn(classes.paperItem,classes.paperMargin),color:\"secondary\"},\"2\")),/*#__PURE__*/React.createElement(Grid,{item:true,xs:3},/*#__PURE__*/React.createElement(Paper,{className:cn(classes.paperItem,classes.paperMargin),color:\"warning\"},\"3\")))))),/*#__PURE__*/React.createElement(DialogActions,null,/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){return dispatch({type:\"CLOSE_GRID\"});},color:\"primary\"},\"Disagree\"),/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){return dispatch({type:\"CLOSE_GRID\"});},color:\"primary\",autoFocus:true},\"Agree\")))))));}","map":{"version":3,"sources":["/home/dekor/eqvium/react_material_test/admin-full/src/pages/modal/Modal.js"],"names":["React","Grid","Box","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","TextField","cn","useStyles","Widget","Code","Typography","Button","Paper","reducer","state","action","type","toggleModal","toggleBody","toggleSmall","toggleLarge","toggleGrid","toggleInputModal","ModalComp","classes","useReducer","dispatch","marginRight","Array","map","join","paper","paperItem","paperMargin"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  Grid,\n  Box,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  TextField\n} from \"@material-ui/core\";\nimport cn from \"classnames\";\nimport useStyles from \"./styles\";\n\n// components\nimport Widget from \"../../components/Widget\";\nimport Code from \"../../components/Code\";\nimport { Typography, Button, Paper } from \"../../components/Wrappers\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"OPEN_MODAL\":\n      return {\n        ...state,\n        toggleModal: true\n      };\n    case \"CLOSE_MODAL\":\n      return {\n        ...state,\n        toggleModal: false\n      };\n    case \"OPEN_BODY\":\n      return {\n        ...state,\n        toggleBody: true\n      };\n    case \"CLOSE_BODY\":\n      return {\n        ...state,\n        toggleBody: false\n      };\n    case \"OPEN_SMALL\":\n      return {\n        ...state,\n        toggleSmall: true\n      };\n    case \"CLOSE_SMALL\":\n      return {\n        ...state,\n        toggleSmall: false\n      };\n    case \"OPEN_LARGE\":\n      return {\n        ...state,\n        toggleLarge: true\n      };\n    case \"CLOSE_LARGE\":\n      return {\n        ...state,\n        toggleLarge: false\n      };\n    case \"OPEN_GRID\":\n      return {\n        ...state,\n        toggleGrid: true\n      };\n    case \"CLOSE_GRID\":\n      return {\n        ...state,\n        toggleGrid: false\n      };\n    case \"OPEN_INPUT_MODAL\":\n      return {\n        ...state,\n        toggleInputModal: true\n      };\n    case \"CLOSE_INPUT_MODAL\":\n      return {\n        ...state,\n        toggleInputModal: false\n      };\n    default:\n      return null;\n  }\n};\n\nexport default function ModalComp() {\n  const classes = useStyles();\n  const [state, dispatch] = React.useReducer(reducer, {\n    toggleModal: false,\n    toggleBody: false,\n    toggleSmall: false,\n    toggleGrid: false,\n    toggleLarge: false,\n    toggleInputModal: false\n  });\n\n  return (\n    <div>\n      <Grid container spacing={6} alignItems={\"flex-start\"}>\n        <Grid container item md={6} xs={12}>\n          <Box display={\"flex\"} flexDirection={\"column\"} width={\"100%\"}>\n            <Box mb={6}>\n              <Widget title=\"Live Demo\" disableWidgetMenu>\n                <Typography>\n                  Toggle a working modal demo by clicking the button below. It\n                  will slide down and fade in from the top of the page.\n                </Typography>\n                <Box my={2}>\n                  <Button\n                    color={\"primary\"}\n                    variant={\"contained\"}\n                    className={classes.marginRight}\n                    onClick={() => dispatch({ type: \"OPEN_MODAL\" })}\n                  >\n                    Demo\n                  </Button>\n                  <Dialog\n                    open={state.toggleModal}\n                    onClose={() => dispatch({ type: \"CLOSE_MODAL\" })}\n                    scroll={\"body\"}\n                    aria-labelledby=\"scroll-dialog-title\"\n                  >\n                    <DialogTitle id=\"alert-dialog-title\">\n                      {\"Use Google's location service?\"}\n                    </DialogTitle>\n                    <DialogContent>\n                      <DialogContentText id=\"alert-dialog-description\">\n                        Let Google help apps determine location. This means\n                        sending anonymous location data to Google, even when no\n                        apps are running.\n                      </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                      <Button\n                        onClick={() => dispatch({ type: \"CLOSE_MODAL\" })}\n                        color=\"primary\"\n                      >\n                        Disagree\n                      </Button>\n                      <Button\n                        onClick={() => dispatch({ type: \"CLOSE_MODAL\" })}\n                        color=\"primary\"\n                        autoFocus\n                      >\n                        Agree\n                      </Button>\n                    </DialogActions>\n                  </Dialog>\n                  <Button\n                    color={\"secondary\"}\n                    variant={\"contained\"}\n                    onClick={() => dispatch({ type: \"OPEN_BODY\" })}\n                  >\n                    Scrolling long content\n                  </Button>\n                  <Dialog\n                    open={state.toggleBody}\n                    onClose={() => dispatch({ type: \"CLOSE_BODY\" })}\n                    scroll={\"body\"}\n                    aria-labelledby=\"scroll-dialog-title\"\n                  >\n                    <DialogTitle id=\"scroll-dialog-title\">\n                      Subscribe\n                    </DialogTitle>\n                    <DialogContent>\n                      <DialogContentText>\n                        {[...new Array(50)]\n                          .map(\n                            () => `Cras mattis consectetur purus sit amet fermentum.\nCras justo odio, dapibus ac facilisis in, egestas eget quam.\nMorbi leo risus, porta ac consectetur ac, vestibulum at eros.\nPraesent commodo cursus magna, vel scelerisque nisl consectetur et.`\n                          )\n                          .join(\"\\n\")}\n                      </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                      <Button\n                        onClick={() => dispatch({ type: \"CLOSE_BODY\" })}\n                        color=\"primary\"\n                      >\n                        Cancel\n                      </Button>\n                      <Button\n                        onClick={() => dispatch({ type: \"CLOSE_BODY\" })}\n                        color=\"primary\"\n                      >\n                        Subscribe\n                      </Button>\n                    </DialogActions>\n                  </Dialog>\n                </Box>\n              </Widget>\n            </Box>\n            <Box mb={6}>\n              <Widget title=\"Optional Sizes\" disableWidgetMenu>\n                <Typography block>\n                  To appoint modal's width size, equal maxWidth attribute to one\n                  of values: <Code row inline>{`xs, sm, md, lg, xl`}</Code>\n                </Typography>\n                <Box my={2}>\n                  <Button\n                    color={\"primary\"}\n                    variant={\"contained\"}\n                    className={classes.marginRight}\n                    onClick={() => dispatch({ type: \"OPEN_LARGE\" })}\n                  >\n                    Large Modal\n                  </Button>\n                  <Dialog\n                    maxWidth={\"xl\"}\n                    open={state.toggleLarge}\n                    onClose={() => dispatch({ type: \"CLOSE_LARGE\" })}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                  >\n                    <DialogTitle id=\"alert-dialog-title\">\n                      {\"Use Google's location service?\"}\n                    </DialogTitle>\n                    <DialogContent>\n                      <DialogContentText id=\"alert-dialog-description\">\n                        Let Google help apps determine location. This means\n                        sending anonymous location data to Google, even when no\n                        apps are running.\n                      </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                      <Button\n                        onClick={() => dispatch({ type: \"CLOSE_LARGE\" })}\n                        color=\"primary\"\n                      >\n                        Disagree\n                      </Button>\n                      <Button\n                        onClick={() => dispatch({ type: \"CLOSE_LARGE\" })}\n                        color=\"primary\"\n                        autoFocus\n                      >\n                        Agree\n                      </Button>\n                    </DialogActions>\n                  </Dialog>\n                  <Button\n                    color={\"secondary\"}\n                    variant={\"contained\"}\n                    className={classes.marginRight}\n                    onClick={() => dispatch({ type: \"OPEN_SMALL\" })}\n                  >\n                    Small modal\n                  </Button>\n                  <Dialog\n                    maxWidth={\"sm\"}\n                    open={state.toggleSmall}\n                    onClose={() => dispatch({ type: \"CLOSE_SMALL\" })}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                  >\n                    <DialogTitle id=\"alert-dialog-title\">\n                      {\"Use Google's location service?\"}\n                    </DialogTitle>\n                    <DialogContent>\n                      <DialogContentText id=\"alert-dialog-description\">\n                        Let Google help apps determine location. This means\n                        sending anonymous location data to Google, even when no\n                        apps are running.\n                      </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                      <Button\n                        onClick={() => dispatch({ type: \"CLOSE_SMALL\" })}\n                        color=\"primary\"\n                      >\n                        Disagree\n                      </Button>\n                      <Button\n                        onClick={() => dispatch({ type: \"CLOSE_SMALL\" })}\n                        color=\"primary\"\n                        autoFocus\n                      >\n                        Agree\n                      </Button>\n                    </DialogActions>\n                  </Dialog>\n                </Box>\n              </Widget>\n            </Box>\n            <Box>\n              <Widget title=\"Form dialogs\" disableWidgetMenu>\n                <Typography block>\n                  Form dialogs allow users to fill out form fields within a\n                  dialog. For example, if your site prompts for potential\n                  subscribers to fill in their email address, they can fill out\n                  the email field and touch <Code row inline>{`Submit`}</Code>\n                </Typography>\n                <Box my={2}>\n                  <Button\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    onClick={() => dispatch({ type: \"OPEN_INPUT_MODAL\" })}\n                  >\n                    Open form dialog\n                  </Button>\n                  <Dialog\n                    open={state.toggleInputModal}\n                    onClose={() => dispatch({ type: \"CLOSE_INPUT_MODAL\" })}\n                    aria-labelledby=\"form-dialog-title\"\n                  >\n                    <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\n                    <DialogContent>\n                      <DialogContentText>\n                        To subscribe to this website, please enter your email\n                        address here. We will send updates occasionally.\n                      </DialogContentText>\n                      <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"name\"\n                        label=\"Email Address\"\n                        type=\"email\"\n                        fullWidth\n                      />\n                    </DialogContent>\n                    <DialogActions>\n                      <Button\n                        color=\"primary\"\n                        onClick={() => dispatch({ type: \"CLOSE_INPUT_MODAL\" })}\n                      >\n                        Cancel\n                      </Button>\n                      <Button\n                        color=\"primary\"\n                        onClick={() => dispatch({ type: \"CLOSE_INPUT_MODAL\" })}\n                      >\n                        Subscribe\n                      </Button>\n                    </DialogActions>\n                  </Dialog>\n                </Box>\n              </Widget>\n            </Box>\n          </Box>\n        </Grid>\n        <Grid item md={6} xs={12}>\n          <Widget title=\"Using Grid\" disableWidgetMenu>\n            <Typography block>\n              Utilize the Material UI grid system within a modal by nesting{\" \"}\n              <Code row inline>{`<Grid container>`}</Code> within the{\" \"}\n              <Code row inline>{`<Dialog>`}</Code>. Then, use the normal grid\n              system classes as you would anywhere else.\n            </Typography>\n            <Box my={2}>\n              <Button\n                color={\"primary\"}\n                variant={\"contained\"}\n                className={classes.marginRight}\n                onClick={() => dispatch({ type: \"OPEN_GRID\" })}\n              >\n                Grid\n              </Button>\n              <Paper className={classes.paper}>\n                <Grid item xs zeroMinWidth>\n                  <Code>{`\n  <Grid container>\n    <Box display=\"flex\" flexDirection=\"column\">\n      <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"flex-end\">\n        <Grid item xs={3}>1</Grid>\n        <Grid item xs={3}>2</Grid>\n      </Box>\n      <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"flex-around\">\n        <Grid item xs={3}>1</Grid>\n        <Grid item xs={3}>2</Grid>\n      </Box>\n      <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"flex-between\">\n        <Grid item xs={3}>1</Grid>\n        <Grid item xs={3}>2</Grid>\n        <Grid item xs={3}>3</Grid>Code\n      </Box>\n    </Box>\n  </Grid>\n                  `}</Code>\n                </Grid>\n              </Paper>\n            </Box>\n            <Dialog\n              fullWidth={true}\n              maxWidth={\"lg\"}\n              open={state.toggleGrid}\n              onClose={() => dispatch({ type: \"CLOSE_GRID\" })}\n              aria-labelledby=\"alert-dialog-title\"\n              aria-describedby=\"alert-dialog-description\"\n            >\n              <DialogTitle id=\"alert-dialog-title\">{\"Grid system\"}</DialogTitle>\n              <DialogContent>\n                <DialogContentText\n                  id=\"alert-dialog-description\"\n                  component={\"div\"}\n                >\n                  <Box display=\"flex\" width={\"100%\"} flexDirection=\"column\">\n                    <Box\n                      display=\"flex\"\n                      flexDirection=\"row\"\n                      justifyContent=\"flex-end\"\n                      width={\"100%\"}\n                    >\n                      <Grid item xs={3}>\n                        <Paper\n                          className={cn(classes.paperItem, classes.paperMargin)}\n                          color=\"primary\"\n                        >\n                          1\n                        </Paper>\n                      </Grid>\n                      <Grid item xs={3}>\n                        <Paper\n                          className={cn(classes.paperItem, classes.paperMargin)}\n                          color=\"secondary\"\n                        >\n                          2\n                        </Paper>\n                      </Grid>\n                    </Box>\n                    <Box\n                      display=\"flex\"\n                      flexDirection=\"row\"\n                      justifyContent=\"space-around\"\n                      width={\"100%\"}\n                    >\n                      <Grid item xs={3}>\n                        <Paper\n                          className={cn(classes.paperItem, classes.paperMargin)}\n                          color=\"primary\"\n                        >\n                          1\n                        </Paper>\n                      </Grid>\n                      <Grid item xs={3}>\n                        <Paper\n                          className={cn(classes.paperItem, classes.paperMargin)}\n                          color=\"secondary\"\n                        >\n                          2\n                        </Paper>\n                      </Grid>\n                    </Box>\n                    <Box\n                      display=\"flex\"\n                      flexDirection=\"row\"\n                      justifyContent=\"space-between\"\n                      width={\"100%\"}\n                    >\n                      <Grid item xs={3}>\n                        <Paper\n                          className={cn(classes.paperItem, classes.paperMargin)}\n                          color=\"primary\"\n                        >\n                          1\n                        </Paper>\n                      </Grid>\n                      <Grid item xs={3}>\n                        <Paper\n                          className={cn(classes.paperItem, classes.paperMargin)}\n                          color=\"secondary\"\n                        >\n                          2\n                        </Paper>\n                      </Grid>\n                      <Grid item xs={3}>\n                        <Paper\n                          className={cn(classes.paperItem, classes.paperMargin)}\n                          color=\"warning\"\n                        >\n                          3\n                        </Paper>\n                      </Grid>\n                    </Box>\n                  </Box>\n                </DialogContentText>\n              </DialogContent>\n              <DialogActions>\n                <Button\n                  onClick={() => dispatch({ type: \"CLOSE_GRID\" })}\n                  color=\"primary\"\n                >\n                  Disagree\n                </Button>\n                <Button\n                  onClick={() => dispatch({ type: \"CLOSE_GRID\" })}\n                  color=\"primary\"\n                  autoFocus\n                >\n                  Agree\n                </Button>\n              </DialogActions>\n            </Dialog>\n          </Widget>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}