{"ast":null,"code":"var _jsxFileName = \"/home/dekor/eqvium/react_material_test/admin-full/src/components/App.js\";\nimport React from \"react\";\nimport { HashRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport { Close as CloseIcon } from \"@material-ui/icons\";\nimport useStyles from './styles'; // components\n\nimport Layout from \"./Layout\";\nimport Documentation from \"./Documentation/Documentation\"; // pages\n\nimport Error from \"../pages/error\";\nimport Login from \"../pages/login\";\nimport Verify from \"../pages/verify\";\nimport Reset from \"../pages/reset\"; // context\n\nimport { useUserState } from \"../context/UserContext\";\nexport default function App() {\n  // global\n  var {\n    isAuthenticated\n  } = useUserState();\n  const isAuth = isAuthenticated();\n  const classes = useStyles();\n\n  function CloseButton({\n    closeToast,\n    className\n  }) {\n    return /*#__PURE__*/React.createElement(CloseIcon, {\n      className: className,\n      onClick: closeToast,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ToastContainer, {\n    className: classes.toastsContainer,\n    closeButton: /*#__PURE__*/React.createElement(CloseButton, {\n      className: classes.notificationCloseButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }),\n    closeOnClick: false,\n    progressClassName: classes.notificationProgress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(HashRouter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    render: () => /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/app/charts\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 47\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/app\",\n    render: () => /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/app/charts\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 27\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/documentation\",\n    component: Documentation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(PrivateRoute, {\n    path: \"/app\",\n    component: Layout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(PublicRoute, {\n    path: \"/login\",\n    component: Login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(PublicRoute, {\n    path: \"/verify-email\",\n    exact: true,\n    component: Verify,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(PublicRoute, {\n    path: \"/password-reset\",\n    exact: true,\n    component: Reset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    component: Error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  })))); // #######################################################################\n\n  function PrivateRoute({\n    component,\n    ...rest\n  }) {\n    return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n      render: props => isAuth ? React.createElement(component, props) : /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }));\n  }\n\n  function PublicRoute({\n    component,\n    ...rest\n  }) {\n    return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n      render: props => isAuth ? /*#__PURE__*/React.createElement(Redirect, {\n        to: {\n          pathname: \"/\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }\n      }) : React.createElement(component, props),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    }));\n  }\n}","map":{"version":3,"sources":["/home/dekor/eqvium/react_material_test/admin-full/src/components/App.js"],"names":["React","HashRouter","Route","Switch","Redirect","ToastContainer","Close","CloseIcon","useStyles","Layout","Documentation","Error","Login","Verify","Reset","useUserState","App","isAuthenticated","isAuth","classes","CloseButton","closeToast","className","toastsContainer","notificationCloseButton","notificationProgress","PrivateRoute","component","rest","props","createElement","PublicRoute","pathname"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  HashRouter,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport { Close as CloseIcon } from \"@material-ui/icons\";\nimport useStyles from './styles';\n// components\nimport Layout from \"./Layout\";\nimport Documentation from \"./Documentation/Documentation\";\n\n// pages\nimport Error from \"../pages/error\";\nimport Login from \"../pages/login\";\nimport Verify from \"../pages/verify\";\nimport Reset from \"../pages/reset\";\n\n// context\nimport { useUserState } from \"../context/UserContext\";\n\nexport default function App() {\n  // global\n  var { isAuthenticated } = useUserState();\n  const isAuth = isAuthenticated()\n  const classes = useStyles();\n  function CloseButton({ closeToast, className }) {\n    return <CloseIcon className={className} onClick={closeToast} />;\n  }\n\n  return (\n    <>\n    <ToastContainer\n      className={classes.toastsContainer}\n      closeButton={\n        <CloseButton className={classes.notificationCloseButton} />\n      }\n      closeOnClick={false}\n      progressClassName={classes.notificationProgress}\n    />\n      <HashRouter>\n        <Switch>\n          <Route exact path=\"/\" render={() => <Redirect to=\"/app/charts\" />} />\n          <Route\n            exact\n            path=\"/app\"\n            render={() => <Redirect to=\"/app/charts\" />}\n          />\n          <Route path=\"/documentation\" component={Documentation} />\n          <PrivateRoute path=\"/app\" component={Layout} />\n          <PublicRoute path=\"/login\" component={Login} />\n          <PublicRoute path=\"/verify-email\" exact component={Verify} />\n          <PublicRoute path=\"/password-reset\" exact component={Reset}/>\n          <Route component={Error} />\n        </Switch>\n      </HashRouter>\n    </>\n  );\n\n  // #######################################################################\n\n  function PrivateRoute({ component, ...rest }) {\n    return (\n      <Route\n        {...rest}\n        render={props =>\n            isAuth ? (\n            React.createElement(component, props)\n          ) : (\n            <Redirect to={\"/login\"} />\n          )\n        }\n      />\n    );\n  }\n\n  function PublicRoute({ component, ...rest }) {\n    return (\n      <Route\n        {...rest}\n        render={props =>\n            isAuth ? (\n            <Redirect\n              to={{\n                pathname: \"/\"\n              }}\n            />\n          ) : (\n            React.createElement(component, props)\n          )\n        }\n      />\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}