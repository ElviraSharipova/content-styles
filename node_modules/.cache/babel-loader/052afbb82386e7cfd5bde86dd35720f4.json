{"ast":null,"code":"var _jsxFileName = \"/home/dekor/eqvium/react_material_test/admin-full/src/pages/tooltips/Tooltips.js\";\nimport React from \"react\";\nimport { Grid, Box, ClickAwayListener, Popover, Button as ButtonNative } from \"@material-ui/core\";\nimport cn from \"classnames\"; // components\n\nimport Widget from \"../../components/Widget\";\nimport { Tooltip, Typography } from \"../../components/Wrappers\";\nimport useStyles from \"./styles\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"OPEN_TOOLTIP\":\n      return { ...state,\n        tooltipOpened: true\n      };\n\n    case \"CLOSE_TOOLTIP\":\n      return { ...state,\n        tooltipOpened: false\n      };\n\n    case \"OPEN_POPOVER\":\n      return { ...state,\n        togglePopover: true,\n        popoverSibling: action.setSibling\n      };\n\n    case \"CLOSE_POPOVER\":\n      return { ...state,\n        togglePopover: false,\n        popoverSibling: null\n      };\n\n    case \"OPEN_HOVER_POPOVER\":\n      return { ...state,\n        toggleHoverPopover: true,\n        hoverPopoverSibling: action.setHoverPopoverSibling\n      };\n\n    case \"CLOSE_HOVER_POPOVER\":\n      return { ...state,\n        toggleHoverPopover: false,\n        hoverPopoverSibling: null\n      };\n\n    case \"OPEN_TOP_TOOLTIP\":\n      return { ...state,\n        toggleTopTooltip: true\n      };\n\n    case \"CLOSE_TOP_TOOLTIP\":\n      return { ...state,\n        toggleTopTooltip: false\n      };\n\n    case \"OPEN_RIGHT_TOOLTIP\":\n      return { ...state,\n        toggleRightTooltip: true\n      };\n\n    case \"CLOSE_RIGHT_TOOLTIP\":\n      return { ...state,\n        toggleRightTooltip: false\n      };\n\n    case \"OPEN_BOTTOM_TOOLTIP\":\n      return { ...state,\n        toggleBottomTooltip: true\n      };\n\n    case \"CLOSE_BOTTOM_TOOLTIP\":\n      return { ...state,\n        toggleBottomTooltip: false\n      };\n\n    case \"OPEN_LEFT_TOOLTIP\":\n      return { ...state,\n        toggleLeftTooltip: true\n      };\n\n    case \"CLOSE_LEFT_TOOLTIP\":\n      return { ...state,\n        toggleLeftTooltip: false\n      };\n\n    case \"OPEN_TOP_POPOVER\":\n      return { ...state,\n        toggleTopPopover: true,\n        topPopoverSibling: action.setTopPopoverSibling\n      };\n\n    case \"CLOSE_TOP_POPOVER\":\n      return { ...state,\n        toggleTopPopover: false,\n        topPopoverSibling: null\n      };\n\n    case \"OPEN_RIGHT_POPOVER\":\n      return { ...state,\n        toggleRightPopover: true,\n        rightPopoverSibling: action.setRightPopoverSibling\n      };\n\n    case \"CLOSE_RIGHT_POPOVER\":\n      return { ...state,\n        toggleRightPopover: false,\n        rightPopoverSibling: null\n      };\n\n    case \"OPEN_BOTTOM_POPOVER\":\n      return { ...state,\n        toggleBottomPopover: true,\n        bottomPopoverSibling: action.setBottomPopoverSibling\n      };\n\n    case \"CLOSE_BOTTOM_POPOVER\":\n      return { ...state,\n        toggleBottomPopover: false,\n        bottomPopoverSibling: null\n      };\n\n    case \"OPEN_LEFT_POPOVER\":\n      return { ...state,\n        toggleLeftPopover: true,\n        leftPopoverSibling: action.setLeftPopoverSibling\n      };\n\n    case \"CLOSE_LEFT_POPOVER\":\n      return { ...state,\n        toggleLeftPopover: false,\n        leftPopoverSibling: null\n      };\n\n    default:\n      return {};\n  }\n};\n\nexport default function TooltipsComp() {\n  const classes = useStyles();\n  const [state, dispatch] = React.useReducer(reducer, false);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Widget, {\n    title: \"Tooltip Example\",\n    disableWidgetMenu: true,\n    inheritHeight: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    mt: 2,\n    display: \"flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ClickAwayListener, {\n    onClickAway: () => dispatch({\n      type: \"CLOSE_TOOLTIP\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    placement: \"top\",\n    color: \"primary\",\n    PopperProps: {\n      disablePortal: true\n    },\n    onClose: () => dispatch({\n      type: \"CLOSE_TOOLTIP\"\n    }),\n    open: state.tooltipOpened || false,\n    disableFocusListener: true,\n    disableHoverListener: true,\n    disableTouchListener: true,\n    title: \"Add\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ButtonNative, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: () => dispatch({\n      type: \"OPEN_TOOLTIP\"\n    }),\n    className: cn(classes.button, classes.buttonWhite),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 23\n    }\n  }, \"Click to toggle a tooltip\")))), /*#__PURE__*/React.createElement(Tooltip, {\n    placement: \"top\",\n    color: \"secondary\",\n    disableFocusListener: true,\n    disableTouchListener: true,\n    title: \"Add\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ButtonNative, {\n    variant: \"contained\",\n    color: \"secondary\",\n    className: cn(classes.button, classes.buttonWhite),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 19\n    }\n  }, \"Hover to toggle a tooltip\")))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Widget, {\n    title: \"Popover Example\",\n    disableWidgetMenu: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    mt: 2,\n    width: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }\n  }, \" \", /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ButtonNative, {\n    variant: \"contained\",\n    className: classes.button,\n    \"aria-describedby\": state.togglePopover ? \"simple-popover\" : undefined,\n    onClick: e => dispatch({\n      type: \"OPEN_POPOVER\",\n      setSibling: e.currentTarget\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 19\n    }\n  }, \"Open Popover\"), /*#__PURE__*/React.createElement(Popover, {\n    id: state.togglePopover ? \"simple-popover\" : undefined,\n    open: state.togglePopover || false,\n    anchorEl: state.popoverSibling,\n    onClose: () => dispatch({\n      type: \"CLOSE_POPOVER\"\n    }),\n    anchorOrigin: {\n      vertical: \"bottom\",\n      horizontal: \"center\"\n    },\n    transformOrigin: {\n      vertical: \"top\",\n      horizontal: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.typography,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 21\n    }\n  }, \"The content of the Popover.\"))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    \"aria-owns\": state.toggleHoverPopover ? \"mouse-over-popover\" : undefined,\n    \"aria-haspopup\": \"true\",\n    onMouseEnter: e => dispatch({\n      type: \"OPEN_HOVER_POPOVER\",\n      setHoverPopoverSibling: e.currentTarget\n    }),\n    onMouseLeave: () => dispatch({\n      type: \"CLOSE_HOVER_POPOVER\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 19\n    }\n  }, \"Hover with a Popover.\"), /*#__PURE__*/React.createElement(Popover, {\n    id: \"mouse-over-popover\",\n    open: state.toggleHoverPopover || false,\n    anchorEl: state.hoverPopoverSibling,\n    anchorOrigin: {\n      vertical: \"bottom\",\n      horizontal: \"left\"\n    },\n    transformOrigin: {\n      vertical: \"top\",\n      horizontal: \"left\"\n    },\n    onClose: () => dispatch({\n      type: \"CLOSE_HOVER_POPOVER\"\n    }),\n    disableRestoreFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.typography,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 21\n    }\n  }, \"I use Popover.\"))))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Widget, {\n    title: \"Tooltip Directions\",\n    disableWidgetMenu: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    mt: 2,\n    display: \"flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ClickAwayListener, {\n    onClickAway: () => dispatch({\n      type: \"CLOSE_TOP_TOOLTIP\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    placement: \"top\",\n    color: \"primary\",\n    PopperProps: {\n      disablePortal: true\n    },\n    onClose: () => dispatch({\n      type: \"CLOSE_TOP_TOOLTIP\"\n    }),\n    open: state.toggleTopTooltip || false,\n    disableFocusListener: true,\n    disableHoverListener: true,\n    disableTouchListener: true,\n    title: \"Add\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(ButtonNative, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: () => dispatch({\n      type: \"OPEN_TOP_TOOLTIP\"\n    }),\n    className: cn(classes.button, classes.buttonWhite),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 21\n    }\n  }, \"Tooltip on top\")))), /*#__PURE__*/React.createElement(ClickAwayListener, {\n    onClickAway: () => dispatch({\n      type: \"CLOSE_RIGHT_TOOLTIP\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    placement: \"right\",\n    color: \"primary\",\n    PopperProps: {\n      disablePortal: true\n    },\n    onClose: () => dispatch({\n      type: \"CLOSE_RIGHT_TOOLTIP\"\n    }),\n    open: state.toggleRightTooltip || false,\n    disableFocusListener: true,\n    disableHoverListener: true,\n    disableTouchListener: true,\n    title: \"Add\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(ButtonNative, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: () => dispatch({\n      type: \"OPEN_RIGHT_TOOLTIP\"\n    }),\n    className: cn(classes.button, classes.buttonWhite),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 21\n    }\n  }, \"Tooltip on right\")))), /*#__PURE__*/React.createElement(ClickAwayListener, {\n    onClickAway: () => dispatch({\n      type: \"CLOSE_BOTTOM_TOOLTIP\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    placement: \"bottom\",\n    color: \"primary\",\n    PopperProps: {\n      disablePortal: true\n    },\n    onClose: () => dispatch({\n      type: \"CLOSE_BOTTOM_TOOLTIP\"\n    }),\n    open: state.toggleBottomTooltip || false,\n    disableFocusListener: true,\n    disableHoverListener: true,\n    disableTouchListener: true,\n    title: \"Add\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(ButtonNative, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: () => dispatch({\n      type: \"OPEN_BOTTOM_TOOLTIP\"\n    }),\n    className: cn(classes.button, classes.buttonWhite),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 21\n    }\n  }, \"Tooltip on bottom\")))), /*#__PURE__*/React.createElement(ClickAwayListener, {\n    onClickAway: () => dispatch({\n      type: \"CLOSE_LEFT_TOOLTIP\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    placement: \"left\",\n    color: \"primary\",\n    PopperProps: {\n      disablePortal: true\n    },\n    onClose: () => dispatch({\n      type: \"CLOSE_LEFT_TOOLTIP\"\n    }),\n    open: state.toggleLeftTooltip || false,\n    disableFocusListener: true,\n    disableHoverListener: true,\n    disableTouchListener: true,\n    title: \"Add\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(ButtonNative, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: () => dispatch({\n      type: \"OPEN_LEFT_TOOLTIP\"\n    }),\n    className: cn(classes.button, classes.buttonWhite),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 21\n    }\n  }, \"Tooltip on left\"))))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Widget, {\n    title: \"Popover Directions\",\n    disableWidgetMenu: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    mt: 2,\n    width: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 13\n    }\n  }, \" \", /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ButtonNative, {\n    variant: \"contained\",\n    className: classes.button,\n    \"aria-describedby\": state.toggleTopPopover ? \"simple-popover\" : undefined,\n    onClick: e => dispatch({\n      type: \"OPEN_TOP_POPOVER\",\n      setTopPopoverSibling: e.currentTarget\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 19\n    }\n  }, \"Popover on top\"), /*#__PURE__*/React.createElement(Popover, {\n    id: state.toggleTopPopover ? \"simple-popover\" : undefined,\n    open: state.toggleTopPopover || false,\n    anchorEl: state.topPopoverSibling,\n    onClose: () => dispatch({\n      type: \"CLOSE_TOP_POPOVER\"\n    }),\n    anchorOrigin: {\n      vertical: \"top\",\n      horizontal: \"center\"\n    },\n    transformOrigin: {\n      vertical: \"bottom\",\n      horizontal: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.typography,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 21\n    }\n  }, \"The content of the Popover.\"))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ButtonNative, {\n    variant: \"contained\",\n    className: classes.button,\n    \"aria-describedby\": state.toggleRightPopover ? \"simple-popover\" : undefined,\n    onClick: e => dispatch({\n      type: \"OPEN_RIGHT_POPOVER\",\n      setRightPopoverSibling: e.currentTarget\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 19\n    }\n  }, \"Popover on right\"), /*#__PURE__*/React.createElement(Popover, {\n    id: state.toggleRightPopover ? \"simple-popover\" : undefined,\n    open: state.toggleRightPopover || false,\n    anchorEl: state.rightPopoverSibling,\n    onClose: () => dispatch({\n      type: \"CLOSE_RIGHT_POPOVER\"\n    }),\n    anchorOrigin: {\n      vertical: \"center\",\n      horizontal: \"right\"\n    },\n    transformOrigin: {\n      vertical: \"center\",\n      horizontal: \"left\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.typography,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 21\n    }\n  }, \"The content of the Popover.\"))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ButtonNative, {\n    variant: \"contained\",\n    className: classes.button,\n    \"aria-describedby\": state.toggleBottomPopover ? \"simple-popover\" : undefined,\n    onClick: e => dispatch({\n      type: \"OPEN_BOTTOM_POPOVER\",\n      setBottomPopoverSibling: e.currentTarget\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 19\n    }\n  }, \"Popover on bottom\"), /*#__PURE__*/React.createElement(Popover, {\n    id: state.toggleBottomPopover ? \"simple-popover\" : undefined,\n    open: state.toggleBottomPopover || false,\n    anchorEl: state.bottomPopoverSibling,\n    onClose: () => dispatch({\n      type: \"CLOSE_BOTTOM_POPOVER\"\n    }),\n    anchorOrigin: {\n      vertical: \"bottom\",\n      horizontal: \"center\"\n    },\n    transformOrigin: {\n      vertical: \"top\",\n      horizontal: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.typography,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 21\n    }\n  }, \"The content of the Popover.\"))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ButtonNative, {\n    variant: \"contained\",\n    className: classes.button,\n    \"aria-describedby\": state.toggleLeftPopover ? \"simple-popover\" : undefined,\n    onClick: e => dispatch({\n      type: \"OPEN_LEFT_POPOVER\",\n      setLeftPopoverSibling: e.currentTarget\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 19\n    }\n  }, \"Popover on left\"), /*#__PURE__*/React.createElement(Popover, {\n    id: state.toggleLeftPopover ? \"simple-popover\" : undefined,\n    open: state.toggleLeftPopover || false,\n    anchorEl: state.leftPopoverSibling,\n    onClose: () => dispatch({\n      type: \"CLOSE_LEFT_POPOVER\"\n    }),\n    anchorOrigin: {\n      vertical: \"center\",\n      horizontal: \"left\"\n    },\n    transformOrigin: {\n      vertical: \"center\",\n      horizontal: \"right\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.typography,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 21\n    }\n  }, \"The content of the Popover.\")))))))));\n}","map":{"version":3,"sources":["/home/dekor/eqvium/react_material_test/admin-full/src/pages/tooltips/Tooltips.js"],"names":["React","Grid","Box","ClickAwayListener","Popover","Button","ButtonNative","cn","Widget","Tooltip","Typography","useStyles","reducer","state","action","type","tooltipOpened","togglePopover","popoverSibling","setSibling","toggleHoverPopover","hoverPopoverSibling","setHoverPopoverSibling","toggleTopTooltip","toggleRightTooltip","toggleBottomTooltip","toggleLeftTooltip","toggleTopPopover","topPopoverSibling","setTopPopoverSibling","toggleRightPopover","rightPopoverSibling","setRightPopoverSibling","toggleBottomPopover","bottomPopoverSibling","setBottomPopoverSibling","toggleLeftPopover","leftPopoverSibling","setLeftPopoverSibling","TooltipsComp","classes","dispatch","useReducer","disablePortal","button","buttonWhite","undefined","e","currentTarget","vertical","horizontal","typography"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  Grid,\n  Box,\n  ClickAwayListener,\n  Popover,\n  Button as ButtonNative\n} from \"@material-ui/core\";\nimport cn from \"classnames\";\n\n// components\nimport Widget from \"../../components/Widget\";\nimport { Tooltip, Typography } from \"../../components/Wrappers\";\nimport useStyles from \"./styles\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"OPEN_TOOLTIP\":\n      return {\n        ...state,\n        tooltipOpened: true\n      };\n    case \"CLOSE_TOOLTIP\":\n      return {\n        ...state,\n        tooltipOpened: false\n      };\n    case \"OPEN_POPOVER\":\n      return {\n        ...state,\n        togglePopover: true,\n        popoverSibling: action.setSibling\n      };\n    case \"CLOSE_POPOVER\":\n      return {\n        ...state,\n        togglePopover: false,\n        popoverSibling: null\n      };\n    case \"OPEN_HOVER_POPOVER\":\n      return {\n        ...state,\n        toggleHoverPopover: true,\n        hoverPopoverSibling: action.setHoverPopoverSibling\n      };\n    case \"CLOSE_HOVER_POPOVER\":\n      return {\n        ...state,\n        toggleHoverPopover: false,\n        hoverPopoverSibling: null\n      };\n    case \"OPEN_TOP_TOOLTIP\":\n      return {\n        ...state,\n        toggleTopTooltip: true\n      };\n    case \"CLOSE_TOP_TOOLTIP\":\n      return {\n        ...state,\n        toggleTopTooltip: false\n      };\n    case \"OPEN_RIGHT_TOOLTIP\":\n      return {\n        ...state,\n        toggleRightTooltip: true\n      };\n    case \"CLOSE_RIGHT_TOOLTIP\":\n      return {\n        ...state,\n        toggleRightTooltip: false\n      };\n    case \"OPEN_BOTTOM_TOOLTIP\":\n      return {\n        ...state,\n        toggleBottomTooltip: true\n      };\n    case \"CLOSE_BOTTOM_TOOLTIP\":\n      return {\n        ...state,\n        toggleBottomTooltip: false\n      };\n    case \"OPEN_LEFT_TOOLTIP\":\n      return {\n        ...state,\n        toggleLeftTooltip: true\n      };\n    case \"CLOSE_LEFT_TOOLTIP\":\n      return {\n        ...state,\n        toggleLeftTooltip: false\n      };\n    case \"OPEN_TOP_POPOVER\":\n      return {\n        ...state,\n        toggleTopPopover: true,\n        topPopoverSibling: action.setTopPopoverSibling\n      };\n    case \"CLOSE_TOP_POPOVER\":\n      return {\n        ...state,\n        toggleTopPopover: false,\n        topPopoverSibling: null\n      };\n    case \"OPEN_RIGHT_POPOVER\":\n      return {\n        ...state,\n        toggleRightPopover: true,\n        rightPopoverSibling: action.setRightPopoverSibling\n      };\n    case \"CLOSE_RIGHT_POPOVER\":\n      return {\n        ...state,\n        toggleRightPopover: false,\n        rightPopoverSibling: null\n      };\n    case \"OPEN_BOTTOM_POPOVER\":\n      return {\n        ...state,\n        toggleBottomPopover: true,\n        bottomPopoverSibling: action.setBottomPopoverSibling\n      };\n    case \"CLOSE_BOTTOM_POPOVER\":\n      return {\n        ...state,\n        toggleBottomPopover: false,\n        bottomPopoverSibling: null\n      };\n    case \"OPEN_LEFT_POPOVER\":\n      return {\n        ...state,\n        toggleLeftPopover: true,\n        leftPopoverSibling: action.setLeftPopoverSibling\n      };\n    case \"CLOSE_LEFT_POPOVER\":\n      return {\n        ...state,\n        toggleLeftPopover: false,\n        leftPopoverSibling: null\n      };\n    default:\n      return {};\n  }\n};\n\nexport default function TooltipsComp() {\n  const classes = useStyles();\n  const [state, dispatch] = React.useReducer(reducer, false);\n\n  return (\n    <div>\n      <Grid container spacing={3}>\n        <Grid item md={6} xs={12}>\n          <Widget title=\"Tooltip Example\" disableWidgetMenu inheritHeight>\n            <Grid container alignItems={\"center\"}>\n              <Box mt={2} display={\"flex\"}>\n                <ClickAwayListener\n                  onClickAway={() => dispatch({ type: \"CLOSE_TOOLTIP\" })}\n                >\n                  <div>\n                    <Tooltip\n                      placement=\"top\"\n                      color={\"primary\"}\n                      PopperProps={{\n                        disablePortal: true\n                      }}\n                      onClose={() => dispatch({ type: \"CLOSE_TOOLTIP\" })}\n                      open={state.tooltipOpened || false}\n                      disableFocusListener\n                      disableHoverListener\n                      disableTouchListener\n                      title=\"Add\"\n                    >\n                      <ButtonNative\n                        variant={\"contained\"}\n                        color={\"primary\"}\n                        onClick={() => dispatch({ type: \"OPEN_TOOLTIP\" })}\n                        className={cn(classes.button, classes.buttonWhite)}\n                      >\n                        Click to toggle a tooltip\n                      </ButtonNative>\n                    </Tooltip>\n                  </div>\n                </ClickAwayListener>\n                <Tooltip\n                  placement=\"top\"\n                  color={\"secondary\"}\n                  disableFocusListener\n                  disableTouchListener\n                  title=\"Add\"\n                >\n                  <ButtonNative\n                    variant={\"contained\"}\n                    color={\"secondary\"}\n                    className={cn(classes.button, classes.buttonWhite)}\n                  >\n                    Hover to toggle a tooltip\n                  </ButtonNative>\n                </Tooltip>\n              </Box>\n            </Grid>\n          </Widget>\n        </Grid>\n\n        <Grid item md={6} xs={12}>\n          <Widget title=\"Popover Example\" disableWidgetMenu>\n            <Box mt={2} width=\"100%\">\n              {\" \"}\n              <Grid container alignItems={\"center\"}>\n                <Grid item>\n                  <ButtonNative\n                    variant={\"contained\"}\n                    className={classes.button}\n                    aria-describedby={\n                      state.togglePopover ? \"simple-popover\" : undefined\n                    }\n                    onClick={e =>\n                      dispatch({\n                        type: \"OPEN_POPOVER\",\n                        setSibling: e.currentTarget\n                      })\n                    }\n                  >\n                    Open Popover\n                  </ButtonNative>\n                  <Popover\n                    id={state.togglePopover ? \"simple-popover\" : undefined}\n                    open={state.togglePopover || false}\n                    anchorEl={state.popoverSibling}\n                    onClose={() => dispatch({ type: \"CLOSE_POPOVER\" })}\n                    anchorOrigin={{\n                      vertical: \"bottom\",\n                      horizontal: \"center\"\n                    }}\n                    transformOrigin={{\n                      vertical: \"top\",\n                      horizontal: \"center\"\n                    }}\n                  >\n                    <Typography className={classes.typography}>\n                      The content of the Popover.\n                    </Typography>\n                  </Popover>\n                </Grid>\n                <Grid item>\n                  <Typography\n                    aria-owns={\n                      state.toggleHoverPopover\n                        ? \"mouse-over-popover\"\n                        : undefined\n                    }\n                    aria-haspopup=\"true\"\n                    onMouseEnter={e =>\n                      dispatch({\n                        type: \"OPEN_HOVER_POPOVER\",\n                        setHoverPopoverSibling: e.currentTarget\n                      })\n                    }\n                    onMouseLeave={() =>\n                      dispatch({ type: \"CLOSE_HOVER_POPOVER\" })\n                    }\n                  >\n                    Hover with a Popover.\n                  </Typography>\n                  <Popover\n                    id=\"mouse-over-popover\"\n                    open={state.toggleHoverPopover || false}\n                    anchorEl={state.hoverPopoverSibling}\n                    anchorOrigin={{\n                      vertical: \"bottom\",\n                      horizontal: \"left\"\n                    }}\n                    transformOrigin={{\n                      vertical: \"top\",\n                      horizontal: \"left\"\n                    }}\n                    onClose={() => dispatch({ type: \"CLOSE_HOVER_POPOVER\" })}\n                    disableRestoreFocus\n                  >\n                    <Typography className={classes.typography}>\n                      I use Popover.\n                    </Typography>\n                  </Popover>\n                </Grid>\n              </Grid>\n            </Box>\n          </Widget>\n        </Grid>\n        <Grid item md={6} xs={12}>\n          <Widget title=\"Tooltip Directions\" disableWidgetMenu>\n            <Box mt={2} display={\"flex\"}>\n              <ClickAwayListener\n                onClickAway={() => dispatch({ type: \"CLOSE_TOP_TOOLTIP\" })}\n              >\n                <div>\n                  <Tooltip\n                    placement=\"top\"\n                    color={\"primary\"}\n                    PopperProps={{\n                      disablePortal: true\n                    }}\n                    onClose={() => dispatch({ type: \"CLOSE_TOP_TOOLTIP\" })}\n                    open={state.toggleTopTooltip || false}\n                    disableFocusListener\n                    disableHoverListener\n                    disableTouchListener\n                    title=\"Add\"\n                  >\n                    <ButtonNative\n                      variant={\"contained\"}\n                      color={\"primary\"}\n                      onClick={() => dispatch({ type: \"OPEN_TOP_TOOLTIP\" })}\n                      className={cn(classes.button, classes.buttonWhite)}\n                    >\n                      Tooltip on top\n                    </ButtonNative>\n                  </Tooltip>\n                </div>\n              </ClickAwayListener>\n              <ClickAwayListener\n                onClickAway={() => dispatch({ type: \"CLOSE_RIGHT_TOOLTIP\" })}\n              >\n                <div>\n                  <Tooltip\n                    placement=\"right\"\n                    color={\"primary\"}\n                    PopperProps={{\n                      disablePortal: true\n                    }}\n                    onClose={() => dispatch({ type: \"CLOSE_RIGHT_TOOLTIP\" })}\n                    open={state.toggleRightTooltip || false}\n                    disableFocusListener\n                    disableHoverListener\n                    disableTouchListener\n                    title=\"Add\"\n                  >\n                    <ButtonNative\n                      variant={\"contained\"}\n                      color={\"primary\"}\n                      onClick={() => dispatch({ type: \"OPEN_RIGHT_TOOLTIP\" })}\n                      className={cn(classes.button, classes.buttonWhite)}\n                    >\n                      Tooltip on right\n                    </ButtonNative>\n                  </Tooltip>\n                </div>\n              </ClickAwayListener>\n              <ClickAwayListener\n                onClickAway={() => dispatch({ type: \"CLOSE_BOTTOM_TOOLTIP\" })}\n              >\n                <div>\n                  <Tooltip\n                    placement=\"bottom\"\n                    color={\"primary\"}\n                    PopperProps={{\n                      disablePortal: true\n                    }}\n                    onClose={() => dispatch({ type: \"CLOSE_BOTTOM_TOOLTIP\" })}\n                    open={state.toggleBottomTooltip || false}\n                    disableFocusListener\n                    disableHoverListener\n                    disableTouchListener\n                    title=\"Add\"\n                  >\n                    <ButtonNative\n                      variant={\"contained\"}\n                      color={\"primary\"}\n                      onClick={() => dispatch({ type: \"OPEN_BOTTOM_TOOLTIP\" })}\n                      className={cn(classes.button, classes.buttonWhite)}\n                    >\n                      Tooltip on bottom\n                    </ButtonNative>\n                  </Tooltip>\n                </div>\n              </ClickAwayListener>\n              <ClickAwayListener\n                onClickAway={() => dispatch({ type: \"CLOSE_LEFT_TOOLTIP\" })}\n              >\n                <div>\n                  <Tooltip\n                    placement=\"left\"\n                    color={\"primary\"}\n                    PopperProps={{\n                      disablePortal: true\n                    }}\n                    onClose={() => dispatch({ type: \"CLOSE_LEFT_TOOLTIP\" })}\n                    open={state.toggleLeftTooltip || false}\n                    disableFocusListener\n                    disableHoverListener\n                    disableTouchListener\n                    title=\"Add\"\n                  >\n                    <ButtonNative\n                      variant={\"contained\"}\n                      color={\"primary\"}\n                      onClick={() => dispatch({ type: \"OPEN_LEFT_TOOLTIP\" })}\n                      className={cn(classes.button, classes.buttonWhite)}\n                    >\n                      Tooltip on left\n                    </ButtonNative>\n                  </Tooltip>\n                </div>\n              </ClickAwayListener>\n            </Box>\n          </Widget>\n        </Grid>\n        <Grid item md={6} xs={12}>\n          <Widget title=\"Popover Directions\" disableWidgetMenu>\n            <Box mt={2} width=\"100%\">\n              {\" \"}\n              <Grid container alignItems={\"center\"}>\n                <Grid item>\n                  <ButtonNative\n                    variant={\"contained\"}\n                    className={classes.button}\n                    aria-describedby={\n                      state.toggleTopPopover ? \"simple-popover\" : undefined\n                    }\n                    onClick={e =>\n                      dispatch({\n                        type: \"OPEN_TOP_POPOVER\",\n                        setTopPopoverSibling: e.currentTarget\n                      })\n                    }\n                  >\n                    Popover on top\n                  </ButtonNative>\n                  <Popover\n                    id={state.toggleTopPopover ? \"simple-popover\" : undefined}\n                    open={state.toggleTopPopover || false}\n                    anchorEl={state.topPopoverSibling}\n                    onClose={() => dispatch({ type: \"CLOSE_TOP_POPOVER\" })}\n                    anchorOrigin={{\n                      vertical: \"top\",\n                      horizontal: \"center\"\n                    }}\n                    transformOrigin={{\n                      vertical: \"bottom\",\n                      horizontal: \"center\"\n                    }}\n                  >\n                    <Typography className={classes.typography}>\n                      The content of the Popover.\n                    </Typography>\n                  </Popover>\n                </Grid>\n                <Grid item>\n                  <ButtonNative\n                    variant={\"contained\"}\n                    className={classes.button}\n                    aria-describedby={\n                      state.toggleRightPopover ? \"simple-popover\" : undefined\n                    }\n                    onClick={e =>\n                      dispatch({\n                        type: \"OPEN_RIGHT_POPOVER\",\n                        setRightPopoverSibling: e.currentTarget\n                      })\n                    }\n                  >\n                    Popover on right\n                  </ButtonNative>\n                  <Popover\n                    id={state.toggleRightPopover ? \"simple-popover\" : undefined}\n                    open={state.toggleRightPopover || false}\n                    anchorEl={state.rightPopoverSibling}\n                    onClose={() => dispatch({ type: \"CLOSE_RIGHT_POPOVER\" })}\n                    anchorOrigin={{\n                      vertical: \"center\",\n                      horizontal: \"right\"\n                    }}\n                    transformOrigin={{\n                      vertical: \"center\",\n                      horizontal: \"left\"\n                    }}\n                  >\n                    <Typography className={classes.typography}>\n                      The content of the Popover.\n                    </Typography>\n                  </Popover>\n                </Grid>\n                <Grid item>\n                  <ButtonNative\n                    variant={\"contained\"}\n                    className={classes.button}\n                    aria-describedby={\n                      state.toggleBottomPopover ? \"simple-popover\" : undefined\n                    }\n                    onClick={e =>\n                      dispatch({\n                        type: \"OPEN_BOTTOM_POPOVER\",\n                        setBottomPopoverSibling: e.currentTarget\n                      })\n                    }\n                  >\n                    Popover on bottom\n                  </ButtonNative>\n                  <Popover\n                    id={\n                      state.toggleBottomPopover ? \"simple-popover\" : undefined\n                    }\n                    open={state.toggleBottomPopover || false}\n                    anchorEl={state.bottomPopoverSibling}\n                    onClose={() => dispatch({ type: \"CLOSE_BOTTOM_POPOVER\" })}\n                    anchorOrigin={{\n                      vertical: \"bottom\",\n                      horizontal: \"center\"\n                    }}\n                    transformOrigin={{\n                      vertical: \"top\",\n                      horizontal: \"center\"\n                    }}\n                  >\n                    <Typography className={classes.typography}>\n                      The content of the Popover.\n                    </Typography>\n                  </Popover>\n                </Grid>\n                <Grid item>\n                  <ButtonNative\n                    variant={\"contained\"}\n                    className={classes.button}\n                    aria-describedby={\n                      state.toggleLeftPopover ? \"simple-popover\" : undefined\n                    }\n                    onClick={e =>\n                      dispatch({\n                        type: \"OPEN_LEFT_POPOVER\",\n                        setLeftPopoverSibling: e.currentTarget\n                      })\n                    }\n                  >\n                    Popover on left\n                  </ButtonNative>\n                  <Popover\n                    id={state.toggleLeftPopover ? \"simple-popover\" : undefined}\n                    open={state.toggleLeftPopover || false}\n                    anchorEl={state.leftPopoverSibling}\n                    onClose={() => dispatch({ type: \"CLOSE_LEFT_POPOVER\" })}\n                    anchorOrigin={{\n                      vertical: \"center\",\n                      horizontal: \"left\"\n                    }}\n                    transformOrigin={{\n                      vertical: \"center\",\n                      horizontal: \"right\"\n                    }}\n                  >\n                    <Typography className={classes.typography}>\n                      The content of the Popover.\n                    </Typography>\n                  </Popover>\n                </Grid>\n              </Grid>\n            </Box>\n          </Widget>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}